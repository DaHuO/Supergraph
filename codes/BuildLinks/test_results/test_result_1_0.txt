data1: fclose 1			data2: fclose 3
data1: sin_port 2			data2: sin_port 1
data1: send 33			data2: send 2
data1: send 33			data2: Send 2
data1: Not 3			data2: Not 3
data1: Not 3			data2: NOT 4
data1: Not 3			data2: not 3
data1: Not 3			data2: got 1
data1: sent 1			data2: send 2
data1: sent 1			data2: Send 2
data1: string 5			data2: string 1
data1: void 22			data2: void 13
data1: end 1			data2: and 5
data1: this 1			data2: This 1
data1: this 1			data2: this 1
data1: HTTP 8			data2: HTTP 2
data1: HTTP 8			data2: http 1
data1: memset 1			data2: memset 8
data1: &c 7			data2: && 9
data1: implemented 1			data2: IMPLEMENTED 1
data1: implemented 1			data2: Implemented 2
data1: port 15			data2: port 13
data1: port 15			data2: POST 2
data1: port 15			data2: PORT 1
data1: port 15			data2: Port 1
data1: CSE 1			data2: USE 1
data1: HTML 4			data2: HTML 1
data1: Put 1			data2: out 1
data1: && 12			data2: && 9
data1: path 13			data2: path 10
data1: wait 1			data2: wait 1
data1: wait 1			data2: want 2
data1: NOT 1			data2: Not 3
data1: NOT 1			data2: NOT 4
data1: NOT 1			data2: not 3
data1: NOT 1			data2: got 1
data1: printf 3			data2: printf 18
data1: httpd 8			data2: httpd 1
data1: use 1			data2: USE 1
data1: from 3			data2: from 3
data1: &port 1			data2: &port 1
data1: type 3			data2: type 9
data1: type 3			data2: Type 1
data1: is 8			data2: is 5
data1: is 8			data2: %s 5
data1: is 8			data2: it 1
data1: is 8			data2: in 5
data1: is 8			data2: if 49
data1: is 8			data2: IN 1
data1: is 8			data2: IF 7
data1: is 8			data2: If 3
data1: is 8			data2: as 2
data1: inet 1			data2: init 2
data1: s_addr 1			data2: s_addr 1
data1: Found 1			data2: Found 1
data1: pid_t 1			data2: pid_t 1
data1: cat 6			data2: can 1
data1: cat 6			data2: Can 1
data1: descriptor 5			data2: descriptor 2
data1: process 1			data2: process 4
data1: process 1			data2: Process 1
data1: in 3			data2: is 5
data1: in 3			data2: it 1
data1: in 3			data2: in 5
data1: in 3			data2: if 49
data1: in 3			data2: IN 1
data1: in 3			data2: IF 7
data1: in 3			data2: If 3
data1: in 3			data2: on 3
data1: accept 3			data2: accept 2
data1: BAD 1			data2: Bad 3
data1: strlen 28			data2: strlen 20
data1: netinet 1			data2: netinet 1
data1: HEAD 2			data2: HEAD 4
data1: HEAD 2			data2: head 3
data1: HEAD 2			data2: Read 1
data1: types 1			data2: types 3
data1: bind 2			data2: bind 1
data1: bind 2			data2: Bind 2
data1: bind 2			data2: Find 1
data1: stdio 1			data2: stdio 1
data1: stdio 1			data2: stdin 1
data1: st 5			data2: it 1
data1: st 5			data2: At 1
data1: #include 14			data2: #include 10
data1: FILE 4			data2: File 3
data1: FILE 4			data2: FILE 5
data1: FILE 4			data2: file 12
data1: 404 2			data2: 404 1
data1: 404 2			data2: 400 3
data1: 400 1			data2: 100 7
data1: 400 1			data2: 404 1
data1: 400 1			data2: 400 3
data1: 400 1			data2: 200 11
data1: 400 1			data2: 800 1
data1: 400 1			data2: 600 5
data1: main 1			data2: main 1
data1: then 1			data2: then 1
data1: then 1			data2: than 1
data1: return 10			data2: return 27
data1: return 10			data2: RETURN 6
data1: %d 2			data2: %s 5
data1: %d 2			data2: %i 3
data1: they 1			data2: then 1
data1: not 5			data2: Not 3
data1: not 5			data2: NOT 4
data1: not 5			data2: not 3
data1: not 5			data2: got 1
data1: %s 2			data2: is 5
data1: %s 2			data2: %s 5
data1: %s 2			data2: %i 3
data1: %s 2			data2: as 2
data1: found 2			data2: Found 1
data1: SOCK_STREAM 1			data2: SOCK_STREAM 1
data1: Print 1			data2: point 1
data1: Type 3			data2: type 9
data1: Type 3			data2: Type 1
data1: out 5			data2: out 1
data1: sprintf 32			data2: fprintf 3
data1: sprintf 32			data2: sprintf 1
data1: print 1			data2: point 1
data1: This 4			data2: This 1
data1: This 4			data2: this 1
data1: POST 6			data2: port 13
data1: POST 6			data2: POST 2
data1: POST 6			data2: PORT 1
data1: POST 6			data2: Port 1
data1: recv 4			data2: recv 2
data1: AF_INET 1			data2: AF_INET 2
data1: 512 1			data2: 512 1
data1: stdlib 1			data2: stdlib 1
data1: FOUND 1			data2: Found 1
data1: message 2			data2: message 17
data1: size 3			data2: size 3
data1: listen 2			data2: listen 3
data1: listen 2			data2: Listen 1
data1: that 6			data2: that 3
data1: that 6			data2: than 1
data1: 15 1			data2: 10 4
data1: 15 1			data2: 1! 1
data1: 16 1			data2: 10 4
data1: 16 1			data2: 1! 1
data1: and 5			data2: and 5
data1: null 4			data2: null 4
data1: null 4			data2: NULL 7
data1: any 1			data2: and 5
data1: 200 2			data2: 100 7
data1: 200 2			data2: 400 3
data1: 200 2			data2: 200 11
data1: 200 2			data2: 800 1
data1: 200 2			data2: 600 5
data1: newline 2			data2: newline 3
data1: The 1			data2: the 21
data1: request 6			data2: Request 3
data1: request 6			data2: request 6
data1: request 6			data2: REQUEST 2
data1: text 5			data2: next 3
data1: supported 1			data2: supported 1
data1: with 4			data2: with 1
data1: do 1			data2: to 16
data1: do 1			data2: DO 1
data1: do 1			data2: do 1
data1: do 1			data2: no 1
data1: perror 3			data2: perror 5
data1: bad 1			data2: Bad 3
data1: set 1			data2: Set 1
data1: set 1			data2: YET 1
data1: set 1			data2: set 2
data1: set 1			data2: see 1
data1: set 1			data2: GET 4
data1: set 1			data2: Get 2
data1: strcat 2			data2: strcat 10
data1: Send 1			data2: send 2
data1: Send 1			data2: Send 2
data1: connections 1			data2: connections 1
data1: close 8			data2: close 1
data1: GET 4			data2: got 1
data1: GET 4			data2: Set 1
data1: GET 4			data2: YET 1
data1: GET 4			data2: set 2
data1: GET 4			data2: GET 4
data1: GET 4			data2: Get 2
data1: filename 6			data2: filename 12
data1: parent 1			data2: parent 2
data1: Server 2			data2: Server 1
data1: Server 2			data2: server 1
data1: PF_INET 1			data2: AF_INET 2
data1: Get 1			data2: got 1
data1: Get 1			data2: Set 1
data1: Get 1			data2: YET 1
data1: Get 1			data2: set 2
data1: Get 1			data2: GET 4
data1: Get 1			data2: Get 2
data1: 500 1			data2: 100 7
data1: 500 1			data2: 400 3
data1: 500 1			data2: 200 11
data1: 500 1			data2: 501 2
data1: 500 1			data2: 800 1
data1: 500 1			data2: 600 5
data1: 501 1			data2: 501 2
data1: else 8			data2: else 15
data1: child 1			data2: child 2
data1: Process 1			data2: process 4
data1: Process 1			data2: Process 1
data1: while 12			data2: while 6
data1: error 2			data2: Error 3
data1: file 9			data2: File 3
data1: file 9			data2: FILE 5
data1: file 9			data2: file 12
data1: sockaddr_in 2			data2: sockaddr_in 1
data1: it 2			data2: is 5
data1: it 2			data2: it 1
data1: it 2			data2: in 5
data1: it 2			data2: if 49
data1: it 2			data2: IN 1
data1: it 2			data2: IF 7
data1: it 2			data2: If 3
data1: it 2			data2: At 1
data1: Content 7			data2: content 3
data1: Content 7			data2: Content 2
data1: pthread 2			data2: pthread 1
data1: if 32			data2: is 5
data1: if 32			data2: it 1
data1: if 32			data2: in 5
data1: if 32			data2: if 49
data1: if 32			data2: IN 1
data1: if 32			data2: IF 7
data1: if 32			data2: If 3
data1: htons 1			data2: htons 1
data1: Return 1			data2: return 27
data1: Return 1			data2: RETURN 6
data1: html 7			data2: HTML 1
data1: waitpid 1			data2: waitpid 2
data1: sys 4			data2: sys 5
data1: the 53			data2: the 21
data1: If 3			data2: is 5
data1: If 3			data2: it 1
data1: If 3			data2: in 5
data1: If 3			data2: if 49
data1: If 3			data2: IN 1
data1: If 3			data2: IF 7
data1: If 3			data2: If 3
data1: struct 6			data2: struct 4
data1: #define 2			data2: #define 7
data1: to 17			data2: to 16
data1: to 17			data2: DO 1
data1: to 17			data2: do 1
data1: to 17			data2: no 1
data1: read 6			data2: HEAD 4
data1: read 6			data2: head 3
data1: read 6			data2: Read 1
data1: REQUEST 1			data2: Request 3
data1: REQUEST 1			data2: request 6
data1: REQUEST 1			data2: REQUEST 2
data1: Length 2			data2: length 5
data1: Length 2			data2: Length 2
data1: listening 1			data2: listening 1
data1: OK 2			data2: OK 1
data1: OK 2			data2: on 3
data1: like 1			data2: line 10
data1: server 3			data2: Server 1
data1: server 3			data2: server 1
data1: Implemented 2			data2: IMPLEMENTED 1
data1: Implemented 2			data2: Implemented 2
data1: strcmp 4			data2: strcmp 9
data1: fgets 2			data2: fgetc 1
data1: fgets 2			data2: fgets 1
data1: sizeof 21			data2: sizeof 9
data1: for 6			data2: for 7
data1: buffer 3			data2: buffer 5
data1: exit 3			data2: exit 14
data1: be 3			data2: we 5
data1: on 7			data2: in 5
data1: on 7			data2: IN 1
data1: on 7			data2: OK 1
data1: on 7			data2: on 3
data1: socket 15			data2: socket 15
data1: of 11			data2: if 49
data1: of 11			data2: IF 7
data1: of 11			data2: If 3
data1: of 11			data2: OK 1
data1: of 11			data2: on 3
data1: strcpy 3			data2: strcpy 3
data1: or 2			data2: OK 1
data1: or 2			data2: on 3
data1: Use 1			data2: USE 1
data1: fopen 1			data2: fopen 3
data1: fork 2			data2: Fork 1
data1: fork 2			data2: fork 2
data1: atoi 1			data2: atoi 2
data1: Error 2			data2: Error 3
data1: line 6			data2: mine 1
data1: line 6			data2: line 10
data1: true 1			data2: TRUE 5
data1: 1024 9			data2: 1024 1
data1: made 1			data2: mode 2
data1: INADDR_ANY 1			data2: INADDR_ANY 1
data1: sockaddr 3			data2: sockaddr 2
data1: htonl 1			data2: htons 1
data1: int 44			data2: int 51
data1: pid 4			data2: SID 1
data1: pid 4			data2: sid 3
data1: pid 4			data2: PID 1
data1: pid 4			data2: pid 4
data1: an 2			data2: in 5
data1: an 2			data2: IN 1
data1: an 2			data2: on 3
data1: an 2			data2: as 2
data1: an 2			data2: At 1
data1: char 32			data2: char 58
data1: To 1			data2: to 16
data1: To 1			data2: DO 1
data1: To 1			data2: do 1
data1: To 1			data2: no 1
data1: as 2			data2: is 5
data1: as 2			data2: %s 5
data1: as 2			data2: as 2
data1: as 2			data2: At 1
data1: at 1			data2: it 1
data1: at 1			data2: as 2
data1: at 1			data2: At 1
data1: sin_family 1			data2: sin_family 1
data1: NULL 5			data2: null 4
data1: NULL 5			data2: NULL 7
data1: no 1			data2: to 16
data1: no 1			data2: DO 1
data1: no 1			data2: do 1
data1: no 1			data2: no 1
data1: Parameter 2			data2: parameter 2
data1: stat 3			data2: stat 1
data1: Remove 1			data2: remove 1
data1: sin_addr 1			data2: sin_addr 1
