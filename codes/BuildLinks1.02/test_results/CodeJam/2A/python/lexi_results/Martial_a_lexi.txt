import sys 		1
from collections import defaultdict 		2
sys . stdin = open ( 'A-large.in' ) 		5
sys . stdout = open ( 'out.txt' , 'w' ) 		6
def solve_it ( n , r , p , s ) : 		9
a = [ 0 , 0 , 1 ] 		10
for i in range ( n ) : 		11
b = a [ : ] 		12
for j in range ( 3 ) : 		13
b [ j ] += a [ ( j + 1 ) % 3 ] 		14
a = b [ : ] 		15
b . sort ( ) 		16
b . sort ( ) 		17
if not sorted ( [ r , p , s ] ) == b : 		18
return 'IMPOSSIBLE' 		19
u = [ 2 ] 		20
for i in range ( n ) : 		21
v = [ ] 		22
for l in u : 		23
v . extend ( [ l , ( l - 1 ) % 3 ] ) 		24
u = v [ : ] 		25
c = [ u . count ( i ) for i in range ( 3 ) ] 		26
d = { 'p' : p , 'r' : r , 's' : s } 		27
for matching in [ 'psr' , 'rps' , 'srp' ] : 		28
ok = True 		29
for j in range ( 3 ) : 		30
ok &= u . count ( j ) == d [ matching [ j ] ] 		31
if ok : 		32
m = matching 		33
break 		34
t = [ m [ k ] for k in u ] 		35
pow_n = 2 ** n 		36
block = 1 		37
while block < pow_n : 		38
for i in range ( 0 , pow_n , 2 * block ) : 		39
if t [ i : i + block ] > t [ i + block : i + 2 * block ] : 		40
t [ i : i + block ] , t [ i + block : i + 2 * block ] = t [ i + block : i + 2 * block ] , t [ i : i + block ] 		41
block *= 2 		42
res = '' . join ( t ) . upper ( ) 		43
return res 		44
def main ( ) : 		47
n_cases = int ( input ( ) ) 		49
for test_case in range ( 1 , n_cases + 1 ) : 		50
n , r , p , s = list ( map ( int , input ( ) . split ( ) ) ) 		51
print ( test_case , file = sys . stderr , end = ' ' ) 		52
res = solve_it ( n , r , p , s ) 		53
print ( 'Case #' + str ( test_case ) + ':' , res ) 		54
print ( file = sys . stderr ) 		56
if __name__ == '__main__' : 		58
main ( ) 		59
1 		60
