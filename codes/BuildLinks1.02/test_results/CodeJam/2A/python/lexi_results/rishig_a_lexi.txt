import sys 		1
def swap ( s , a , b , w ) : 		3
if s [ a : a + w ] > s [ b : b + w ] : 		4
return s [ : a ] + s [ b : b + w ] + s [ a + w : b ] + s [ a : a + w ] + s [ b + w : ] 		5
else : return s 		6
def bsort ( s , N ) : 		8
for i in range ( 1 , N + 1 ) : 		9
for a in range ( 0 , 2 ** N , 2 ** i ) : 		10
s = swap ( s , a , a + 2 ** ( i - 1 ) , 2 ** ( i - 1 ) ) 		11
return s 		12
def expand ( s ) : 		14
def f ( x ) : 		15
if x == 'P' : return 'PR' 		16
if x == 'R' : return 'RS' 		17
if x == 'S' : return 'SP' 		18
return '' . join ( f ( x ) for x in s ) 		19
class RPS : 		21
def __init__ ( self , trip , s , N ) : 		22
self . trip = trip 		23
self . s = s 		24
self . N = N 		25
def nxt ( self ) : 		27
ns = bsort ( expand ( self . s ) , self . N + 1 ) 		28
x , y , z = self . trip 		29
ntrip = ( x + y , y + z , x + z ) 		30
return RPS ( ntrip , ns , self . N + 1 ) 		31
def getd ( ) : 		42
d = { } 		43
cur = [ RPS ( ( 1 , 0 , 0 ) , 'R' , 0 ) , RPS ( ( 0 , 1 , 0 ) , 'P' , 0 ) , RPS ( ( 0 , 0 , 1 ) , 'S' , 0 ) ] 		44
for i in range ( 13 ) : 		45
for k in range ( 3 ) : 		46
d [ cur [ k ] . trip ] = cur [ k ] . s 		47
cur [ k ] = cur [ k ] . nxt ( ) 		48
return d 		49
fin = file ( sys . argv [ 1 ] ) 		51
T = int ( fin . readline ( ) . strip ( ) ) 		52
d = getd ( ) 		53
for i in range ( 1 , T + 1 ) : 		54
N , R , P , S = [ int ( x ) for x in fin . readline ( ) . strip ( ) . split ( ) ] 		55
ans = d . get ( ( R , P , S ) , 'IMPOSSIBLE' ) 		56
print ( 'Case #%d: %s' % ( i , ans ) ) 		57
