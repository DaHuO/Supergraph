def solve ( X , n ) : 		1
if count [ X ] == - 1 : 		2
return False 		3
if n == 0 : 		4
return X 		5
if count [ beats [ X ] ] : 		6
count [ beats [ X ] ] -= 1 		7
x , y = solve ( X , n - 1 ) , solve ( beats [ X ] , n - 1 ) 		8
if x and y : 		9
if x > y : 		10
return y + x 		11
else : 		12
return x + y 		13
return False 		14
for case in xrange ( 1 , input ( ) + 1 ) : 		17
ans = 0 		18
N , R , P , S = map ( int , raw_input ( ) . split ( ) ) 		19
beats = { 'P' : 'R' , 'R' : 'S' , 'S' : 'P' } 		20
count = { 'P' : P - 1 , 'R' : R , 'S' : S } 		21
A = solve ( 'P' , N ) 		22
count = { 'P' : P , 'R' : R - 1 , 'S' : S } 		23
B = solve ( 'R' , N ) 		24
count = { 'P' : P , 'R' : R , 'S' : S - 1 } 		25
C = solve ( 'S' , N ) 		26
print "Case #" + str ( case ) + ":" , 		27
if A or B or C : 		28
print min ( [ x for x in [ A , B , C ] if x ] ) 		29
else : 		30
print "IMPOSSIBLE" 		31
