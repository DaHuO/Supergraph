solns = { 0 : { 		1
( 1 , 0 , 0 ) : 'R' , 		2
( 0 , 1 , 0 ) : 'P' , 		3
( 0 , 0 , 1 ) : 'S' 		4
} } 		5
N = 12 		7
def gen ( ) : 		10
for i in range ( N ) : 		11
solns [ i + 1 ] = { } 		12
for a in solns [ i ] : 		13
for b in solns [ i ] : 		14
if solns [ i ] [ a ] < solns [ i ] [ b ] : 		15
solns [ i + 1 ] [ a [ 0 ] + b [ 0 ] , a [ 1 ] + b [ 1 ] , a [ 2 ] + b [ 2 ] ] = solns [ i ] [ a ] + solns [ i ] [ b ] 		16
def main ( ) : 		19
gen ( ) 		20
for i in range ( int ( input ( ) ) ) : 		21
n , r , p , s = map ( int , input ( ) . split ( ) ) 		22
print ( 'Case #{}: {}' . format ( 		23
i + 1 , 		24
solns [ n ] . get ( ( r , p , s ) , 'IMPOSSIBLE' ) 		25
) ) 		26
if __name__ == '__main__' : 		29
main ( ) 		30
