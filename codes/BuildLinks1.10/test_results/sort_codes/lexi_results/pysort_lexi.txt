staticmethod def bubble_optimized array for passes in range len array - 1 0 - 1 for i in range passes if array i > array i + 1 array i array i + 1 = array i + 1 array i 		46 59
staticmethod def insertion_optimized_alt array j = 0 for i val in enumerate array for j in range i - 1 - 1 if j > 0 and val < array j - 1 array j = array j - 1 else break array j = val 		136 152
staticmethod def partition_repeat array left right pivot_ind pivot = array pivot_ind index = left for i in range left right + 1 if array i < pivot array i array index = array index array i index += 1 left = index for i in range left right + 1 if array i == pivot array i array index = array index array i index += 1 return left index 		283 302
staticmethod def bubble_final_position array swap_point = len array while swap_point new_swap = 0 for i in range 1 swap_point if array i - 1 > array i array i - 1 array i = array i array i - 1 new_swap = i swap_point = new_swap 		79 98
staticmethod def quick_inplace_median array left = 0 right = None if right is None right = len array - 1 if left < right pivot_ind = Quick median_of_three array left right pivot_new_ind = Quick partition array left right pivot_ind Quick quick_inplace_median array left pivot_new_ind - 1 Quick quick_inplace_median array pivot_new_ind + 1 right 		226 242
staticmethod def median_of_three array left right mid = left + right // 2 if array left > array mid if array mid > array right return mid elif array left > array right return right return left elif array left > array right return left elif array mid > array right return right return mid 		304 324
staticmethod def bogo array while any array i > array i + 1 for i in range len array - 1 random shuffle array 		437 450
staticmethod def partition array left right pivot_ind pivot = array pivot_ind array pivot_ind array right = array right array pivot_ind index = left for i in range left right if array i <= pivot array i array index = array index array i index += 1 array index array right = array right array index return index 		266 281
staticmethod def insertion array for i in range 1 len array while i > 0 and array i < array i - 1 array i array i - 1 = array i - 1 array i i -= 1 		108 120
staticmethod def bubble_naive array length = len array - 1 for _ in range length for i in range length if array i > array i + 1 array i array i + 1 = array i + 1 array i 		31 44
staticmethod def quick_random array length = len array if length < 2 return array pivot = array pop random randrange length above = below = for item in array if item > pivot above append item else below append item return Quick quick_random below + pivot + Quick quick_random above 		162 183
staticmethod def heap_sort array highest_index = len array - 1 Heap heapify array highest_index for end in range highest_index 0 - 1 array end array 0 = array 0 array end Heap sift_down array 0 end - 1 		379 394
staticmethod def quick_inplace_random array left = 0 right = None if right is None right = len array - 1 if left < right pivot_ind = random randint left right pivot_new_ind = Quick partition array left right pivot_ind Quick quick_inplace_random array left pivot_new_ind - 1 Quick quick_inplace_random array pivot_new_ind + 1 right 		208 224
staticmethod def quick_median array length = len array if length < 2 return array pivot_index = Quick median_of_three array 0 length - 1 pivot = array pop pivot_index above = below = for item in array if item > pivot above append item else below append item return Quick quick_median below + pivot + Quick quick_median above 		185 206
staticmethod def bubble_optimized_with_flag array for passes in range len array - 1 0 - 1 changed = False for i in range passes if array i > array i + 1 array i array i + 1 = array i + 1 array i changed = True if not changed break 		61 77
staticmethod def quick_inplace_repeat array low = 0 high = None if high is None high = len array - 1 if low < high pivot_ind = Quick median_of_three array low high left right = Quick partition_repeat array low high pivot_ind Quick quick_inplace_repeat array low left Quick quick_inplace_repeat array right high 		244 264
staticmethod def sift_down array start end root = start while root * 2 + 1 <= end child = root * 2 + 1 swap = root if array swap < array child swap = child if child + 1 <= end and array swap < array child + 1 swap = child + 1 if swap != root array root array swap = array swap array root root = swap else break 		408 427
staticmethod def insertion_optimized array for i val in enumerate array while i > 0 and val < array i - 1 array i = array i - 1 i -= 1 array i = val 		122 134
staticmethod def heapify array highest_index first = highest_index - 1 // 2 for start in range first - 1 - 1 Heap sift_down array start highest_index 		396 406
staticmethod def merge left right new = left_index right_index = 0 0 len_left len_right = len left len right while left_index < len_left and right_index < len_right if left left_index <= right right_index new append left left_index left_index += 1 else new append right right_index right_index += 1 new += left left_index new += right right_index return new 		354 369
staticmethod def merge_sort array length = len array if length < 2 return array middle = length // 2 left = Merge merge_sort array middle right = Merge merge_sort array middle return Merge merge left right 		334 352
