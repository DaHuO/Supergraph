def fight a b if a == b return None else return WINNERS frozenset a b 		69 73
def process_case f_in f_out case_no other_data = None N R P S = toks_line f_in ans = solve N R P S if ans is None ans = IMPOSSIBLE print Case #{}: {} format case_no ans file = f_out 		31 36
def process_first f_in num_cases = int f_in readline other_data = None return num_cases other_data 		26 29
def solve N R P S lineups = players = R * R + P * P + S * S for perm in it permutations players lineup = join perm for i in range N lineup = round lineup if lineup is None break if lineup is not None lineups append join perm if not lineups return None lineups sort return lineups 0 		38 52
def round lineup new_lineup = for i in range len lineup // 2 winner = fight lineup i * 2 lineup i * 2 + 1 if winner is None return None new_lineup += winner return new_lineup 		54 61
def toks_line f_in fun = int return fun k for k in f_in readline split 		23 24
