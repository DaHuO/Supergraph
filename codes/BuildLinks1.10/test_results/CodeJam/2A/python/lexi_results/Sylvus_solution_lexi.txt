def optimal seq length while True old_seq = seq for i in range 1 length + 1 distance = 2 ** i seq = reorder_seq seq distance if seq == old_seq return seq return seq 		73 86
def isTie seq if len seq <= 1 return False new_seq = for i in range 0 len seq 2 result = add seq i seq i + 1 if result == 0 return True else new_seq append add seq i seq i + 1 return isTie new_seq 		21 31
def constructTree root depth P R S if depth == 0 return root if root == 1 return constructTree 1 depth - 1 P R S + constructTree 2 depth - 1 P R S if root == 2 return constructTree 2 depth - 1 P R S + constructTree 3 depth - 1 P R S if root == 3 return constructTree 1 depth - 1 P R S + constructTree 3 depth - 1 P R S 		49 57
def add a b if a == b return 0 if min a b == 1 and max a b == 2 return 2 if min a b == 1 and max a b == 3 return 1 if min a b == 2 and max a b == 3 return 3 print Error! return 0 		6 17
def transform seq P R S newseq = for s in seq if s == 1 newseq += P P -= 1 if s == 2 newseq += R R -= 1 if s == 3 newseq += S S -= 1 return newseq P R S 		34 46
def reorder_seq seq distance for i in range 2 * distance len seq + 1 2 * distance partA = seq i - 2 * distance i - distance partB = seq i - distance i if partB < partA new_seq = seq i - 2 * distance + partB + partA + seq i if partB >= partA new_seq = seq i - 2 * distance + partA + partB + seq i seq = new_seq return seq 		60 70
