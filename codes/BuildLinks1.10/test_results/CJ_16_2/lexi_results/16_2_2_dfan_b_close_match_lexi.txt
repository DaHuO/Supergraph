def min_diff coder jammer i if i == len coder return diff coder jammer coder jammer if less_than coder jammer i c = assume_9 coder j = assume_0 jammer return diff c j c j if less_than jammer coder i c = assume_0 coder j = assume_9 jammer return diff c j c j if coder i == ? and jammer i == ? choice_1 = min_diff assume coder i 0 jammer i choice_2 = min_diff coder assume jammer i 0 i if abs choice_1 0 <= abs choice_2 0 return choice_1 return choice_2 if coder i == ? choice_1 = min_diff assume coder i jammer i jammer i + 1 digit = max int jammer i - 1 0 choice_2 = min_diff assume coder i digit jammer i + 1 digit = min int jammer i + 1 9 choice_3 = min_diff assume coder i digit jammer i + 1 return best_choice choice_1 choice_2 choice_3 if jammer i == ? choice_1 = min_diff coder assume jammer i coder i i + 1 digit = max int coder i - 1 0 choice_2 = min_diff coder assume jammer i digit i + 1 digit = min int coder i + 1 9 choice_3 = min_diff coder assume jammer i digit i + 1 return best_choice choice_1 choice_2 choice_3 return min_diff coder jammer i + 1 		85 127
def less_than coder jammer length for i in xrange length if coder i < jammer i return True if coder i > jammer i return False return False 		32 38
def assume_0 score ret = copy score for i in xrange len ret if ret i == ? ret i = 0 return ret 		7 12
def solve coder jammer i diff c j = min_diff list coder list jammer 0 return join c +  + join j 		129 133
def best_choice choice_1 choice_2 choice_3 if equal choice_1 choice_2 return best_choice_2 choice_1 choice_3 if equal choice_2 choice_3 return best_choice_2 choice_1 choice_2 if equal choice_1 choice_3 return best_choice_2 choice_1 choice_2 if abs choice_2 0 < abs choice_1 0 and abs choice_2 0 < abs choice_3 0 return choice_2 if abs choice_1 0 < abs choice_2 0 and abs choice_1 0 < abs choice_3 0 return choice_1 if abs choice_3 0 < abs choice_1 0 and abs choice_3 0 < abs choice_2 0 return choice_3 if abs choice_1 0 < abs choice_3 0 and abs choice_2 0 < abs choice_3 0 return best_choice_2 choice_1 choice_2 if abs choice_1 0 < abs choice_2 0 and abs choice_3 0 < abs choice_2 0 return best_choice_2 choice_1 choice_3 if abs choice_2 0 < abs choice_1 0 and abs choice_3 0 < abs choice_1 0 return best_choice_2 choice_2 choice_3 sys stderr write Unhandled case. Defaulting to 1\n + str choice_1 + \n + str choice_2 + \n + str choice_3 + \n return choice_1 		59 83
def equal a b return a 0 == b 0 and a 1 == b 1 and a 2 == b 2 		40 41
def assume_9 score ret = copy score for i in xrange len ret if ret i == ? ret i = 9 return ret 		14 19
def assume score index digit assert score index == ? ret = copy score ret index = str digit return ret 		26 30
def best_choice_2 a b if abs a 0 < abs b 0 return a if abs a 0 > abs b 0 return b if less_than a 1 b 1 len a 1 return a if less_than b 1 a 1 len a 1 return b if less_than a 2 b 2 len a 2 return a if less_than b 2 a 2 len a 2 return b sys stderr write Unhandled case. Defaulting to 1\n + str a + \n + str b + \n return a 		43 57
def output_case i result output = case i + 1 result result print Case #%(case)s: %(result)s % output 		135 140
def diff coder jammer c = int join coder j = int join jammer return c - j 		21 24
