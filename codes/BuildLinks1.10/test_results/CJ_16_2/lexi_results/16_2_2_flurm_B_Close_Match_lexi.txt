def atrace * strs f = sys stderr print >> f .. for str in strs print >> f str print >> f if pause_after_trace response = raw_input ? if response == q sys exit 1 		21 30
def mtrace * strs atrace * strs 		17 19
def __init__ self ** kwds self __dict__ = kwds 		12 13
def something i if i < len q dq = q i if dq == ? for d in digits ar i = d something i + 1 else ar i = dq something i + 1 else results append int join ar 		126 137
def memoized_f * args try result = memos args mtrace args : got result from memo except KeyError result = f * args mtrace args : got result by calling memos args = result return result 		34 42
def getline return INPUT readline - 1 		8 9
def solve_1 cq jq C_IS_LOWER = 1 J_IS_LOWER = 2 DONT_KNOW_MIGHT_BE_EQUAL = 3 c = j = state = DONT_KNOW_MIGHT_BE_EQUAL for c_dq j_dq in zip cq jq if c_dq == ? and j_dq == ? if state == DONT_KNOW_MIGHT_BE_EQUAL c_d = 0 j_d = 0 elif state == C_IS_LOWER c_d = 9 j_d = 0 elif state == J_IS_LOWER c_d = 0 j_d = 9 else assert 0 elif c_dq == ? j_d = j_dq if state == DONT_KNOW_MIGHT_BE_EQUAL c_d = j_d elif state == C_IS_LOWER c_d = 9 elif state == J_IS_LOWER c_d = 0 else assert 0 elif j_dq == ? c_d = c_dq if state == DONT_KNOW_MIGHT_BE_EQUAL j_d = c_d elif state == C_IS_LOWER j_d = 0 elif state == J_IS_LOWER j_d = 9 else assert 0 else c_d = c_dq j_d = j_dq if state == DONT_KNOW_MIGHT_BE_EQUAL if c_d < j_d state = C_IS_LOWER elif j_d < c_d state = J_IS_LOWER elif c_d == j_d state = DONT_KNOW_MIGHT_BE_EQUAL else assert 0 else pass c += c_d j += j_d return c j 		47 116
def memoize f memos = def memoized_f * args try result = memos args mtrace args : got result from memo except KeyError result = f * args mtrace args : got result by calling memos args = result return result return memoized_f 		32 43
def generate_possibles q results = ar = * len q def something i if i < len q dq = q i if dq == ? for d in digits ar i = d something i + 1 else ar i = dq something i + 1 else results append int join ar something 0 return results 		120 141
