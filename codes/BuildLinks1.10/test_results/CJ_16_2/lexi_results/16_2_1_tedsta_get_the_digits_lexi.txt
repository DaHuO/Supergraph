def get_the_digits s spell_digits = ZERO ONE TWO THREE FOUR FIVE SIX SEVEN EIGHT NINE l_counts = get_letter_counts s digit_l_counts = i get_letter_counts d for i d in enumerate spell_digits d_counts = d 0 for d in range 0 10 try_digit d_counts l_counts digit_l_counts Z 0 try_digit d_counts l_counts digit_l_counts W 2 try_digit d_counts l_counts digit_l_counts U 4 try_digit d_counts l_counts digit_l_counts X 6 try_digit d_counts l_counts digit_l_counts G 8 try_digit d_counts l_counts digit_l_counts R 3 try_digit d_counts l_counts digit_l_counts S 7 try_digit d_counts l_counts digit_l_counts V 5 try_digit d_counts l_counts digit_l_counts O 1 try_digit d_counts l_counts digit_l_counts I 9 digits = for digit count in d_counts items for _ in range count digits append digit return sorted digits 		24 59
def main if len sys argv < 2 print Usage: get_the_digits.py <file> exit in_file = sys argv 1 with open in_file as f cases = int f readline for i in range 0 cases s = f readline strip print Case #%d: %s % i + 1 join str d for d in get_the_digits s 		62 71
def try_digit d_counts l_counts digit_l_counts letter digit if letter in l_counts and l_counts letter > 0 d_counts digit = l_counts letter take_digit l_counts digit_l_counts digit l_counts letter 		19 22
def get_letter_counts s l_counts = for l in s if l not in l_counts l_counts l = 1 else l_counts l += 1 return l_counts 		6 13
def take_digit l_counts digit_l_counts times for l in digit_l_counts keys l_counts l -= digit_l_counts l * times 		15 17
