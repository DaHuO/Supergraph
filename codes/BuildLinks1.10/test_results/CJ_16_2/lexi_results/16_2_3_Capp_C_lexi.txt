def double S if len S == 0 return if len S == 1 return S ret = None fst = set sec = set fst_cnt = dict sec_cnt = dict for s in S if s 0 in fst fst_cnt s 0 += 1 else fst add s 0 fst_cnt s 0 = 1 pass if s 1 in sec sec_cnt s 1 += 1 else sec add s 1 sec_cnt s 1 = 1 pass pass for s in list S if fst_cnt s 0 == 1 or sec_cnt s 1 == 1 ret = s break pass if ret == None for s in list S if fst_cnt s 0 % 2 == 1 and sec_cnt s 1 % 2 == 1 ret = s break pass pass if ret == None ret = S 0 fst remove ret 0 sec remove ret 1 S_next = for s in list S if s 0 in fst and s 1 in sec S_next append s pass pass return s + double S_next 		5 54
def Solve S fst = set sec = set fst_cnt = dict sec_cnt = dict for s in S if s 0 in fst fst_cnt s 0 += 1 else fst add s 0 fst_cnt s 0 = 1 pass if s 1 in sec sec_cnt s 1 += 1 else sec add s 1 sec_cnt s 1 = 1 pass pass for s in list S if fst_cnt s 0 == 1 or sec_cnt s 1 == 1 if s 0 in fst fst remove s 0 if s 1 in sec sec remove s 1 del S S index s pass pass double_kouho = for s in list S if s 0 in fst and s 1 in sec double_kouho append s pass pass return len S - len fst - len sec + len double double_kouho 		57 103
