def out s outp str s + \n 		49 50
def line L = sys stdin readline if not L raise Exception End of file if VERBOSE print INPUT: L return L strip 		36 42
def profile func * a ** kw if OPTS profile import cProfile pstats P = cProfile Profile P enable try return func * a ** kw 		55 62
def loadlib if not haslib return global LIB cpp target = compileInfo LIB = __main__ LIB = ctypes CDLL ./ + target if hasattr __main__ initlib __main__ initlib LIB reset 		124 132
def outp s outp used = True OUT write s 		46 48
def vprint s if VERBOSE print s 		52 53
def main parser = optparse OptionParser parser add_option --run action = store_true parser add_option --outfd parser add_option -v --verbose action = store_true parser add_option -d --debug action = store_true parser add_option -q --quiet action = store_true parser add_option -p --profile action = store_true for flag in __main__ FLAGS split parser add_option -- + flag action = store_true opts args = parser parse_args if opts outfd is not None out = os fdopen int opts outfd w else out = sys stdout global OUT OPTS VERBOSE DEBUG __main__ OUT = OUT = out __main__ OPTS = OPTS = opts __main__ VERBOSE = VERBOSE = opts verbose __main__ DEBUG = DEBUG = opts debug if opts run loadlib return profile processInput compileIfNeeded if args cmd = args 0 if hasattr __main__ cmd loadlib res = getattr __main__ cmd * args 1 pprint res return if args mask = args mastermain mask else mastermain 		150 191
def haslib cpp target = compileInfo return cpp is not None 		120 122
def mastermain mask = None files = f for f in os listdir . if f endswith .in if not files raise Exception No .in file found if mask is None fn = max files key = os path getmtime else matches = f for f in files if mask in f if not matches raise Exception No .in file matched %r % mask if len matches > 1 raise Exception Too many .in file matched %r: [%s] % mask , join matches fn = matches print Processing input from %r... % fn root = fn - 2 infn = root + in tmpfn = root + tmp outfn = root + out goodfn = root + good assert infn == fn with open infn as fdin with open tmpfn wb as fdout start = time time kw = if OPTS quiet kw update stdout = open /dev/null w rc = subprocess call sys argv + --run --outfd=%d % fdout fileno stdin = fdin ** kw tottime = time time - start print Done in %.3fs % tottime if rc print WITH EXITCODE %d % rc return os rename tmpfn outfn if os path exists goodfn subprocess call diff -sdu goodfn outfn else print >>> %s % outfn with open outfn r as fd sys stdout write fd read print <<< %s % outfn print Done in %.3fs % tottime 		193 243
def compileIfNeeded if not haslib return cpp target = compileInfo if os path exists target and os path getmtime cpp < os path getmtime target print >> sys stderr %s is uptodate % target return print >> sys stderr Compiling %s into %s... % cpp target if DEBUG opts = -g else opts = -g -O3 subprocess check_call g++ -Wall %s -fPIC -std=c++0x %s -shared -o %s 		134 147
def processInput outwriters = nones = 0 N = int line for i in range N if VERBOSE print = * 80 print Case %d % i + 1 print else print Processing case %d... % i + 1 if haslib LIB reset outp Case #%d: % i + 1 outp used = False res = __main__ case if outp used outwriters += 1 if res is not None out res else if res is None nones += 1 out res if VERBOSE print ANSWER: res print if sys stdin readline print >> sys stderr WARNING: not all input consumed! if nones print >> sys stderr WARNING: %d cases returned None % nones if outwriters and outwriters != N print >> sys stderr WARNING: Some, but not all, cases produced output 		70 108
def ints return map int line split 		43 44
def compileInfo base _ _ = os path basename sys argv 0 partition . cpp = %s.cpp % base if os path exists cpp if DEBUG target = libdbg.so else target = lib.so return cpp target else return None None 		110 118
