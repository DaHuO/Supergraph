def add_vertex self vertex self adj vertex = 		16 17
def max_flow self source sink path = self find_path source sink while path != None residuals = edge capacity - self flow edge for edge in path flow = min residuals for edge in path self flow edge += flow self flow edge redge -= flow path = self find_path source sink return sum self flow edge for edge in self get_edges source 		44 53
def __init__ self u v w self source = u self sink = v self capacity = w 		4 7
def solution lines firstWords = secondWords = for index in xrange len lines firstWord secondWord = lines index if firstWord not in firstWords firstWords firstWord = firstWords firstWord append index if secondWord not in secondWords secondWords secondWord = secondWords secondWord append index uncoveredFirstWords = set firstWords keys uncoveredSecondWords = set secondWords keys return len lines - minimumCovering firstWords secondWords uncoveredFirstWords uncoveredSecondWords lines 		104 120
def __init__ self self adj = self flow = 		12 14
def getMaximumMatching firstWords secondWords uncoveredFirstWords uncoveredSecondWords lines validEdges = line 0 0 line 1 1 for line in lines if line 0 in uncoveredFirstWords and line 1 in uncoveredSecondWords verticesToNeighbors = verticesToNeighbors source = firstWord 0 for firstWord in uncoveredFirstWords verticesToNeighbors sink = for firstWord in uncoveredFirstWords verticesToNeighbors firstWord 0 = edge 1 for edge in validEdges if edge 0 == firstWord 0 for secondWord in uncoveredSecondWords verticesToNeighbors secondWord 1 = sink network = FlowNetwork network add_vertex v for v in verticesToNeighbors for vertex in verticesToNeighbors for vertex2 in verticesToNeighbors vertex network add_edge vertex vertex2 1 return network max_flow source sink 		65 80
def find_path self source sink path if source == sink return path for edge in self get_edges source residual = edge capacity - self flow edge if residual > 0 and edge not in path result = self find_path edge sink sink path + edge if result != None return result 		34 42
def __repr__ self return %s->%s:%s % self source self sink self capacity 		8 9
def minimumCovering firstWords secondWords uncoveredFirstWords uncoveredSecondWords lines requiredIndices = set for firstWord in firstWords if len firstWords firstWord == 1 requiredIndices add firstWords firstWord 0 for secondWord in secondWords if len secondWords secondWord == 1 requiredIndices add secondWords secondWord 0 for index in requiredIndices firstWord secondWord = lines index if firstWord in uncoveredFirstWords uncoveredFirstWords remove firstWord if secondWord in uncoveredSecondWords uncoveredSecondWords remove secondWord maximumMatching = getMaximumMatching firstWords secondWords uncoveredFirstWords uncoveredSecondWords lines return len requiredIndices + len uncoveredFirstWords + len uncoveredSecondWords - maximumMatching 		82 102
def get_edges self v return self adj v 		19 20
def add_edge self u v w = 0 if u == v raise ValueError u == v edge = Edge u v w redge = Edge v u 0 edge redge = redge redge redge = edge self adj u append edge self adj v append redge self flow edge = 0 self flow redge = 0 		22 32
