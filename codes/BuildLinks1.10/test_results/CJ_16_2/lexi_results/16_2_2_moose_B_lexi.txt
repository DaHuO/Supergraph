def fill C J number counter = 0 for i in range len C if C i == ? C = list C C i = number counter C = join C counter += 1 for i in range len J if J i == ? J = list J J i = number counter J = join J counter += 1 return C J 		26 40
def solve C J C J = try_equal C J C J = brute C J return C J 		56 106
def try_equal C J equal_possible = True for i in range len C if C i != J i equal_possible = False if not equal_possible return C J for i in range len C if C i == ? C = list C C i = J i C = join C elif J i == ? J = list J J i = C i J = join J return C J 		7 23
def brute C J qmarks = C count ? + J count ? min_c min_j diff = None None None for i in range 10 ** qmarks c_tmp j_tmp = fill C J str i zfill qmarks diff_tmp = abs int c_tmp - int j_tmp if diff is None or diff_tmp < diff or diff_tmp == diff and int c_tmp < int min_c min_c = c_tmp min_j = j_tmp diff = diff_tmp return min_c min_j 		43 53
