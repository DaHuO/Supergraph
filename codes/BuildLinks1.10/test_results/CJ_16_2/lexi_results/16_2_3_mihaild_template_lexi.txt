def ford_fulkerson edges lv = set rv = set real_edges = defaultdict set for e in edges lv add 0 e 0 rv add 1 e 1 real_edges 0 e 0 add 1 e 1 matched_v = set while True d = deque for v in lv if v not in matched_v d append v parents = v None for v in d new_path = None used = set d while d v = d popleft if v 0 == 1 and v not in matched_v new_path = v while parents new_path - 1 is not None new_path append parents new_path - 1 break for v1 in real_edges v if v1 not in used parents v1 = v d append v1 used add v1 else break new_path = new_path - 1 for i in range 1 len new_path real_edges new_path i add new_path i - 1 real_edges new_path i - 1 remove new_path i matched_v add new_path 0 matched_v add new_path - 1 return matched_v 		46 83
def readlinearray foo = int return list map foo input split 		15 16
def readarray N foo = input return foo for i in range N 		11 12
def is_prime N i = 3 if not N % 2 return 0 while i * i < N if not N % i return 0 i += 3 return 1 		35 43
def gen_primes max primes = 1 * max + 1 for i in range 2 max + 1 if primes i for j in range i + i max + 1 i primes j = 0 primes 0 = 0 return x for x in range max + 1 if primes x 		25 32
def GCD a b while b a b = b a % b return a 		19 22
def readint return int input 		3 4
def readfloat return float input 		7 8
