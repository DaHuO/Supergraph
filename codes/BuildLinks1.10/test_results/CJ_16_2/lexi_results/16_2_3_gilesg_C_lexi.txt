def solve L n = len L graph = defaultdict set left = set right = set for u v in L left add u right add v graph l + u add r + v sol = HopcroftKarp graph maximum_matching orig = len left + len right - len sol / 2 return n - orig 		30 41
def ints return map int raw split 		8 8
def solve_small L n = len L for j in range n - 2 0 - 1 for orig in combinations range n n - j left = set right = set for i in orig left add L i 0 right add L i 1 good = True for i in range n if i not in orig if L i 0 not in left or L i 1 not in right good = False break if good return j return 0 		11 28
def raw return _in readline rstrip \n 		7 7
