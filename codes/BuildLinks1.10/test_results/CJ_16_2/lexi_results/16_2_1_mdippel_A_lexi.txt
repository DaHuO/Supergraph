def processInput T = int raw_input for i in range T S = str raw_input yield S return 		8 14
def ALGORITHM test_case S = test_case count = dd lambda 0 for c in S count c += 1 nums = while count Z > 0 nums append 0 for c in D 0 count c -= 1 while count U > 0 nums append 4 for c in D 4 count c -= 1 while count X > 0 nums append 6 for c in D 6 count c -= 1 while count G > 0 nums append 8 for c in D 8 count c -= 1 while count W > 0 nums append 2 for c in D 2 count c -= 1 while count O > 0 nums append 1 for c in D 1 count c -= 1 for x n in F 5 V 7 N 9 T 3 while count x > 0 nums append n for c in D n count c -= 1 nums sort return join map str nums 		36 81
def runAlgorithm results = for test_case in processInput results append ALGORITHM test_case for i in range len results results i = Case # + str i + 1 + : + results i + \n writeOutput results 		109 117
def writeOutput results for result in results print result return 		17 20
def basic_test ar = OZONETOWER WEIGHFOXTOURIST OURNEONFOE ETHER assert map ALGORITHM ar == 012 2468 114 3 import random for x in D S = list D x * 200 random shuffle S S = join S assert ALGORITHM S == str x * 200 S +  + ALGORITHM S for i in range 200 x = random randint 10 ** 20 10 ** 21 ans = list str x ans sort ans = join ans chal = map lambda x D int x list ans random shuffle chal chal = join chal assert ALGORITHM chal == ans 		85 107
