def generatePossibilities partialScore if len partialScore == 1 if partialScore 0 == ? return range 10 else return int partialScore 0 else if partialScore 0 != ? return int partialScore 0 * 10 ** len partialScore - 1 + i for i in generatePossibilities partialScore 1 else significant = i * 10 ** len partialScore - 1 for i in range 10 future = generatePossibilities partialScore 1 crossProduct = list itertools product significant future return sum x for x in crossProduct 		93 108
def matchScores score1 score2 digits = len score1 minDiff = 10000 minScore1 = 10000 minScore2 = 10000 for i in generatePossibilities score1 for j in generatePossibilities score2 if abs i - j < minDiff minDiff = abs i - j minScore1 = i minScore2 = j elif abs i - j == minDiff if i < minScore1 minScore1 = i minScore2 = j elif i == minScore1 and j < minScore2 minScore2 = j return str minScore1 zfill len score1 str minScore2 zfill len score2 		110 127
def checkCompatibility score partialScore strScore = str score zfill len partialScore for i in range len partialScore if partialScore i != ? if strScore i != partialScore i return False return True 		85 91
