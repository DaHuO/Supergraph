def toint x r = 0 u = 1 for d in reversed x r += u * d u *= 10 return r 		24 30
def md n if n < 0 return 10 + n if n > 9 return n - 10 return n 		17 22
def solve L R L R = list L list R for ix l r in enumerate zip L R if l == ? and r == ? if ix == 0 L ix = 0 1 R ix = 0 1 else L ix = 0 1 9 R ix = 0 1 9 elif l == ? r = int r L ix = 0 1 md r - 1 r md r + 1 9 R ix = r elif r == ? l = int l R ix = 0 1 md l - 1 l md l + 1 9 L ix = l else L ix = int l R ix = int r all_L = toint x for x in list itertools product * L all_R = toint x for x in list itertools product * R best = 10 ** 30 bl = 10 ** 30 br = 10 ** 30 for l r in itertools product all_L all_R diff = abs l - r if diff < best or diff == best and l < bl or diff == best and l == bl and r < br best = diff bl br = l r return %s %s % str bl zfill len L str br zfill len L 		32 69
