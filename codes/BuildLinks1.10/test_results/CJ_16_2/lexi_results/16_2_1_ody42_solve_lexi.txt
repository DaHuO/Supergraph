def main T = int sys stdin readline strip for i in xrange T S = sys stdin readline strip ans = solve S print Case #%s: %s % i + 1 ans 		168 174
def remove self i n = 1 NumberName name = NumberNames i self digit_counts i += n for c in name assert self counts c >= n self counts c -= n 		39 47
def __init__ self S self counts = defaultdict int self digit_counts = 0 for x in xrange 10 if S for c in S self counts c = self counts get c 0 + 1 return for c in counts self counts c = counts c 		9 20
def uniq_letters_2 indexes cs = Counts join NumberNames i for i in indexes indexes = for c in cs counts print %s: %s (%s) % c cs counts c , join NumberNames i for i in indexes if c in NumberNames i if cs counts c == 1 print counts.remove(%s, counts.counts['%s']) % 		127 137
def generate_code indexes = set range 10 while indexes cs = Counts join NumberNames i for i in indexes new_indexes = set indexes for c in cs counts print # %s: %s (%s) % c cs counts c , join NumberNames i for i in indexes if c in NumberNames i if cs counts c == 1 ind = i for i in indexes if c in NumberNames i 0 print n = counts.counts['%s'] % c print ans.extend([%s]*n) % ind print counts.remove(%s, n) % ind new_indexes discard ind if indexes == new_indexes print FAIL return print # Removed %s % , join map str indexes - new_indexes indexes = new_indexes 		142 164
def uniq_letters cs = Counts join NumberNames print cs toString 		122 125
def all_zero self for c in self counts assert self counts c == 0 		49 52
def toString self ret = ret append { for c in sorted self counts ret append  %s: %s, % c self counts c ret append } return \n join ret 		54 60
def solve S counts = Counts S ans = counts remove 8 counts counts G counts remove 4 counts counts U counts remove 2 counts counts W counts remove 6 counts counts X counts remove 0 counts counts Z counts remove 5 counts counts F counts remove 3 counts counts H counts remove 1 counts counts O counts remove 7 counts counts S counts remove 3 counts counts R counts remove 3 counts counts T counts remove 9 counts counts I counts remove 9 counts counts E counts all_zero ret = for i count in enumerate counts digit_counts ret append str i * count return join ret 		64 119
