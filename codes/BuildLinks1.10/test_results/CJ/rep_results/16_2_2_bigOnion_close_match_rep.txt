def decorating_function user_function def wrapper * args ** kwargs if 		55 63
memoize_it c_winning j_winning undecided c_winning j_winning undecided undecided c_winning j_winning j_winning undecided c_winning c_winning undecided j_winning == c_res = c replace ? 0 j_res = j replace ? 9 return c_res j_res elif winning == c_res = c replace ? 9 j_res = j replace ? 0 return c_res j_res else assert winning == if c 0 != ? and j 0 != ? if c 0 > j 0 c_tmp j_tmp = get_best c 1 j 1 elif c 0 < j 0 c_tmp j_tmp = get_best c 1 j 1 else c_tmp j_tmp = get_best c 1 j 1 return c 0 + c_tmp j 0 + j_tmp elif 		231 353
def get_diff 		356 357
def time_it inner_func wraps inner_func def wrapper * args ** kwargs print --> start 		39 50
main_run directory stat st_mtime chosen .parsed.txt startswith 000 chosen gcjiowrapper solve_all_cases conclusion directory chosen chosen = os x x for x in file_names if x endswith .in if not l1 		161 197
def readline 		140 144
def 		155 157
__input_filename __parsed_filename __output_filename input_filename parsed_filename output_filename 		119 126
solve_all_cases new_test_case solve_one_case t = 		201 207
__exit__ type_e 		134 138
__enter__ __input_filename __parsed_filename __output_filename 		128 132
log_it arguments = true output = true def decorating_function user_function def wrapper 		54 64
def 		151 153
def wrapper * args ** kwargs if arguments print 		56 62
memoize_it inner_func global __memoization_registry cache = __memoization_registry 		15 25
reset_memoization global 		29 33
wraps inner_func def wrapper * args ** kwargs print --> start function \' 		40 49
new_test_case \n## _bigonion 		146 149
wraps inner_func def wrapper 		20 24
count_it _call_func_counters _call_func_counters _call_func_counters _call_func_counters _call_func_counters _call_func_counters assert 		68 79
solve_one_case undecided c j = io_wrapper readline 		218 226
_call_func_counters _call_func_counters def wrapper 		74 78
pre-process_ pickling highest_protocol pickling unpickling unpickling args ** kwargs filename = + inner_func __qualname__ + .pickle if filename not in os listdir print --> 		90 107
pre_process_it getargspec keywords varargs defaults must have pre-process_ pickling highest_protocol pickling unpickling unpickling or a or a or a raise valueerror a pre process function not arguments time_it wraps inner_func def 		83 109
