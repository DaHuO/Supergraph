def diff l1 l2 		46 49
min_max s1 		54 55
algorithm test_case c 		133 136
min_remaining l n = 0 		35 43
runalgorithm processinput algorithm for test_case in results 		146 154
s1_large s2_min max_min s1_small s2_large min_max s1_large s2_min s1_small s2_large s1_large s2_min s1_small s2_large s1_small s2_large s1_large s2_min != ? if s1 0 > s2 0 return s1 replace ? 0 s2 replace ? 9 elif s1 0 < s2 0 return s1 replace ? 9 s2 replace ? 0 elif s1 0 == s2 0 x y = optimal s1 1 s2 1 return s1 0 + x s2 0 + y else best_d best_c best_j = float inf none 		58 126
basic_test 		142 143
max_remaining l n = 0 		25 33
def 		18 21
max_min s1 		51 52
processinput t = int raw_input 		8 15
