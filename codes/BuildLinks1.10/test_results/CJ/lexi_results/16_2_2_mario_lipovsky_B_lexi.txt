def better na nb global besta bestb mindif if abs na - nb < mindif besta bestb mindif = na nb abs na - nb 		20 23
def try_pos i filla = none fillb = none if filla is not none and filla < 0 or filla > 9 or fillb is not none and fillb < 0 or fillb > 9 return if i >= len a better mini a mini b return olda oldb = a i b i if filla is not none a i = str filla if fillb is not none b i = str fillb if a i == ? and b i == ? try_pos i 0 0 try_pos i 0 1 try_pos i 1 0 elif a i == ? bb = int b i try_pos i bb - 1 bb try_pos i bb bb try_pos i bb + 1 bb elif b i == ? aa = int a i try_pos i aa aa - 1 try_pos i aa aa try_pos i aa aa + 1 else if a i == b i try_pos i + 1 elif a i > b i better mini a maxi b else better maxi a mini b a i b i = olda oldb 		25 64
def solve global besta bestb mindif a b = map list input split besta bestb = mini a mini b mindif = abs besta - bestb def better na nb global besta bestb mindif if abs na - nb < mindif besta bestb mindif = na nb abs na - nb def try_pos i filla = none fillb = none if filla is not none and filla < 0 or filla > 9 or fillb is not none and fillb < 0 or fillb > 9 return if i >= len a better mini a mini b return olda oldb = a i b i if filla is not none a i = str filla if fillb is not none b i = str fillb if a i == ? and b i == ? try_pos i 0 0 try_pos i 0 1 try_pos i 1 0 elif a i == ? bb = int b i try_pos i bb - 1 bb try_pos i bb bb try_pos i bb + 1 bb elif b i == ? aa = int a i try_pos i aa aa - 1 try_pos i aa aa try_pos i aa aa + 1 else if a i == b i try_pos i + 1 elif a i > b i better mini a maxi b else better maxi a mini b a i b i = olda oldb try_pos 0 return  join map lambda x str x zfill len a besta bestb 		13 67
