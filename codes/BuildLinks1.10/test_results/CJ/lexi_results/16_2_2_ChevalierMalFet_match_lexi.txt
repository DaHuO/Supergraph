def generatepossibilities partialscore if len partialscore == 1 if partialscore 0 == ? return range 10 else return int partialscore 0 else if partialscore 0 != ? return int partialscore 0 * 10 ** len partialscore - 1 + i for i in generatepossibilities partialscore 1 else significant = i * 10 ** len partialscore - 1 for i in range 10 future = generatepossibilities partialscore 1 crossproduct = list itertools product significant future return sum x for x in crossproduct 		93 108
def matchscores score1 score2 digits = len score1 mindiff = 10000 minscore1 = 10000 minscore2 = 10000 for i in generatepossibilities score1 for j in generatepossibilities score2 if abs i - j < mindiff mindiff = abs i - j minscore1 = i minscore2 = j elif abs i - j == mindiff if i < minscore1 minscore1 = i minscore2 = j elif i == minscore1 and j < minscore2 minscore2 = j return str minscore1 zfill len score1 str minscore2 zfill len score2 		110 127
def checkcompatibility score partialscore strscore = str score zfill len partialscore for i in range len partialscore if partialscore i != ? if strscore i != partialscore i return false return true 		85 91
