def solve sd = dict toascii i e for i e in enumerate s ks = sd keys sol = global s while s > 2 vals = np array sd values float ss = sum vals assert np all vals / ss <= 0.5 vals / ss sd ks sort key = lambda x - sd x d1 = ks 0 d2 = ks 1 if sd d1 == sd d2 and not sd d1 == 1 and sd d2 == 1 and s == 3 sol append d1 + d2 sd d1 -= 1 sd d2 -= 1 s -= 2 else sol append d1 sd d1 -= 1 s -= 1 vals = np array sd values float ss = sum vals assert np all vals / ss <= 0.5 vals / ss sd ks sort key = lambda x - sd x sol append join ks s return  join sol 		9 46
def toascii num return str unichr asca + num 		6 7
