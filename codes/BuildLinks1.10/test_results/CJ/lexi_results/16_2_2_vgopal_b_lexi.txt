def answer_2 c j best_c best_j = none none for c in xrange 1000 for j in xrange 1000 if not match str c c or not match str j j continue if best_c is none or abs c - j < abs best_c - best_j best_c best_j = c j elif abs c - j == abs best_c - best_j and c < best_c or c == best_c and j < best_j best_c best_j = c j return fmt str best_c len j fmt str best_j len j 		105 116
def fmt num length num = str num return 0 * length - len num + num 		14 16
def answer c j c_first j_first = c find ? j find ? try minimum = min x for x in c_first j_first if x != - 1 except minimum = none if minimum is not none if c minimum > j minimum return minimize c maximize j elif c minimum < j minimum return maximize c minimize j if c find ? in len c - 1 - 1 and j find ? in len c - 1 - 1 if len c == len j == 1 if c 0 == ? and j 0 == ? return 0 0 if c 0 == ? return j j elif j 0 == ? return c c else return c j if c - 1 == j - 1 == ? if c - 2 > j - 2 return replace c len c - 1 0 replace j len j - 1 9 elif c - 2 < j - 2 return replace c len c - 1 9 replace j len j - 1 0 else return replace c len c - 1 0 replace j len j - 1 0 elif c - 1 == ? if c - 2 > j - 2 return replace c len c - 1 0 j elif c - 2 < j - 2 return replace c len c - 1 9 j else return replace c len c - 1 j - 1 j elif j - 1 == ? if c - 2 > j - 2 return c replace j len j - 1 9 elif c - 2 < j - 2 return c replace j len j - 1 0 else return c replace j len j - 1 c - 1 else return c j i = minimum poss = if c i == ? and j i == ? if c i + 1 == ? and j i + 1 == ? return answer replace c i 0 replace j i 0 poss append replace c i 0 replace j i 0 poss append replace c i 0 replace j i 1 poss append replace c i 1 replace j i 0 elif c i == ? j = j i numbers = x for x in int j int j + 1 int j - 1 if x >= 0 and x <= 9 poss = replace c i x j for x in numbers elif j i == ? c = c i numbers = x for x in int c int c + 1 int c - 1 if x >= 0 and x <= 9 poss = c replace j i x for x in numbers best_c best_j = none none for poss_c poss_j in poss c j = int x for x in answer poss_c poss_j if best_c is none or abs c - j < abs best_c - best_j best_c best_j = c j elif abs c - j == abs best_c - best_j and c < best_c or c == best_c and j < best_j best_c best_j = c j return fmt best_c len c fmt best_j len j 		24 103
def minimize x return x replace ? 0 		21 22
def replace string index num assert string index == ? return string index + str num + string index + 1 		10 12
def match x x x = 0 * len x - len x + x for l1 l2 in zip x x if l2 != ? and l1 != l2 return false return true 		3 8
def maximize x return x replace ? 9 		18 19
