def out s outp str s + \n 		49 50
def line l = sys stdin readline if not l raise exception end of file if verbose print input: l return l strip 		36 42
def profile func * a ** kw if opts profile import cprofile pstats p = cprofile profile p enable try return func * a ** kw 		55 62
def loadlib if not haslib return global lib cpp target = compileinfo lib = __main__ lib = ctypes cdll ./ + target if hasattr __main__ initlib __main__ initlib lib reset 		124 132
def outp s outp used = true out write s 		46 48
def vprint s if verbose print s 		52 53
def main parser = optparse optionparser parser add_option --run action = store_true parser add_option --outfd parser add_option -v --verbose action = store_true parser add_option -d --debug action = store_true parser add_option -q --quiet action = store_true parser add_option -p --profile action = store_true for flag in __main__ flags split parser add_option -- + flag action = store_true opts args = parser parse_args if opts outfd is not none out = os fdopen int opts outfd w else out = sys stdout global out opts verbose debug __main__ out = out = out __main__ opts = opts = opts __main__ verbose = verbose = opts verbose __main__ debug = debug = opts debug if opts run loadlib return profile processinput compileifneeded if args cmd = args 0 if hasattr __main__ cmd loadlib res = getattr __main__ cmd * args 1 pprint res return if args mask = args mastermain mask else mastermain 		150 191
def haslib cpp target = compileinfo return cpp is not none 		120 122
def mastermain mask = none files = f for f in os listdir . if f endswith .in if not files raise exception no .in file found if mask is none fn = max files key = os path getmtime else matches = f for f in files if mask in f if not matches raise exception no .in file matched %r % mask if len matches > 1 raise exception too many .in file matched %r: [%s] % mask , join matches fn = matches print processing input from %r... % fn root = fn - 2 infn = root + in tmpfn = root + tmp outfn = root + out goodfn = root + good assert infn == fn with open infn as fdin with open tmpfn wb as fdout start = time time kw = if opts quiet kw update stdout = open /dev/null w rc = subprocess call sys argv + --run --outfd=%d % fdout fileno stdin = fdin ** kw tottime = time time - start print done in %.3fs % tottime if rc print with exitcode %d % rc return os rename tmpfn outfn if os path exists goodfn subprocess call diff -sdu goodfn outfn else print >>> %s % outfn with open outfn r as fd sys stdout write fd read print <<< %s % outfn print done in %.3fs % tottime 		193 243
def compileifneeded if not haslib return cpp target = compileinfo if os path exists target and os path getmtime cpp < os path getmtime target print >> sys stderr %s is uptodate % target return print >> sys stderr compiling %s into %s... % cpp target if debug opts = -g else opts = -g -o3 subprocess check_call g++ -wall %s -fpic -std=c++0x %s -shared -o %s 		134 147
def processinput outwriters = nones = 0 n = int line for i in range n if verbose print = * 80 print case %d % i + 1 print else print processing case %d... % i + 1 if haslib lib reset outp case #%d: % i + 1 outp used = false res = __main__ case if outp used outwriters += 1 if res is not none out res else if res is none nones += 1 out res if verbose print answer: res print if sys stdin readline print >> sys stderr warning: not all input consumed! if nones print >> sys stderr warning: %d cases returned none % nones if outwriters and outwriters != n print >> sys stderr warning: some, but not all, cases produced output 		70 108
def ints return map int line split 		43 44
def compileinfo base _ _ = os path basename sys argv 0 partition . cpp = %s.cpp % base if os path exists cpp if debug target = libdbg.so else target = lib.so return cpp target else return none none 		110 118
