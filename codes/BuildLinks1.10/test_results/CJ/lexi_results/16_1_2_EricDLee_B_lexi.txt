def solve_case next n = int next lists = grid = missing = 0 ref = ret = for _ in range 2 * n - 1 lists append int n for n in next split for i in range n m = min l i for l in lists cand_indexes = sorted j for j in range len lists if lists j i == m reverse = true cands = lists j for j in cand_indexes if len cands == 1 missing = i ref = cands 0 grid append cands for j in cand_indexes del lists j for i in range n if i == missing ret append ref i else l1 l2 = grid i viable = set l1 missing l2 missing if len viable == 2 viable remove ref i ret append list viable 0 return  join str x for x in ret 		11 40
def solve next emit cases = int next for case in range 1 cases + 1 sol = solve_case next if isinstance sol list emit case #{0}: format case for line in sol emit str line else emit case #{0}: {1} format case str sol print {0} / {1} format case cases 		48 58
