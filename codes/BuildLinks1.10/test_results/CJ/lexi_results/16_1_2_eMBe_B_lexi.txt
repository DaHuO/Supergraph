def solve n = gcj token int data = for _ in xrange 2 * n - 1 data append gcj tokens n int cnt = collections defaultdict int for d in data for x in d cnt x += 1 res = for d c in cnt iteritems if c % 2 == 1 res append d return  join str x for x in sorted res 		87 101
classmethod def _read_line cls line = cls _read_line_raw if isinstance line memoryview line = line tobytes return line 		36 41
classmethod def tokens cls cnt conv = identity return cls token conv for _ in range cnt 		76 78
def main sys setrecursionlimit 10000 t = gcj token int for _ in xrange t print gcj case solve sys stdout flush 		103 108
classmethod def _read_line_raw cls if cls buf res = cls buf cls buf = none else res = cls in readline if not res raise eoferror return res 		18 27
classmethod def whitespace cls line = none while not line line = cls _read_line_raw i = 0 l = len line while i < l and line i isspace i += 1 line = memoryview line i cls buf = line 		53 63
classmethod def _read_line_view cls line = cls _read_line_raw if not isinstance line memoryview line = memoryview line return line 		29 34
classmethod def line cls conv = identity line = cls _read_line return conv line rstrip b'\r\n' 		43 46
classmethod def token cls conv = identity cls whitespace line = cls _read_line_view i = 0 l = len line while i < l and not line i isspace i += 1 cls buf = line i if i < l else none return conv line i tobytes 		65 74
classmethod def splitline cls conv = identity line = cls _read_line return conv x for x in line split 		48 51
classmethod def case cls cls current_case += 1 return b'case #{}:' format cls current_case 		82 85
