def better res1 res2 d1 = abs int res1 0 - int res1 1 d2 = abs int res2 0 - int res2 1 if d1 != d2 return res1 if d1 < d2 else res2 if int res1 0 != int res2 0 return res1 if int res1 0 < int res2 0 else res2 return res1 if int res1 1 < int res2 1 else res2 		4 13
def solve c j mode if not c return if c 0 != ? and j 0 != ? if mode == 0 and c 0 != j 0 mode = 1 if c 0 > j 0 else - 1 res = solve c 1 j 1 mode return c 0 + res 0 j 0 + res 1 if c 0 == ? and j 0 == ? if mode != 0 res = solve c 1 j 1 mode res 0 = 0 if mode == 1 else 9 + res 0 res 1 = 0 if mode == - 1 else 9 + res 1 return res res0 = solve c 1 j 1 0 resc = solve c 1 j 1 1 resj = solve c 1 j 1 - 1 res0 0 = 0 + res0 0 res0 1 = 0 + res0 1 resc 0 = 1 + resc 0 resc 1 = 0 + resc 1 resj 0 = 0 + resj 0 resj 1 = 1 + resj 1 return better res0 better resc resj if j 0 == ? res = solve j c - mode return res 1 res 0 if mode != 0 res = solve c 1 j 1 mode cpref = 0 if mode == 1 else 9 return cpref + res 0 j 0 + res 1 res = solve c 1 j 1 0 res 0 = j 0 + res 0 res 1 = j 0 + res 1 if j 0 != 9 resc = solve c 1 j 1 1 resc 0 = chr ord j 0 + 1 + resc 0 resc 1 = j 0 + resc 1 res = better res resc if j 0 != 0 resj = solve c 1 j 1 - 1 resj 0 = chr ord j 0 - 1 + resj 0 resj 1 = j 0 + resj 1 res = better res resj return res 		15 73
