def check_valid p return p max_i p <= sum p / 2.0 		49 50
def data_iterator lines_to_read = none if not shell_pipe_flag with open data_file_name r as f_handle line_iter = f_handle xreadlines case_no = int line_iter next for idx in range case_no if not lines_to_read line_no = int line_iter next yield idx + 1 line_iter next strip for _ in range line_no + 1 else yield idx + 1 line_iter next strip for _ in range lines_to_read else import sys case_no = int sys stdin readline for idx in range case_no if not lines_to_read line_no = int sys stdin readline yield idx + 1 sys stdin readline strip for _ in range line_no else yield idx + 1 sys stdin readline strip for _ in range lines_to_read 		15 35
def solve case_data from collections import counter cha = list abcdefghijklmnopqrstuvwxyz n = case_data 0 p = map int case_data 1 split  rst = while sum p > 0 tmp = a = max_i p p a = p a - 1 tmp = tmp + cha a if not check_valid p a = max_i p p a = p a - 1 tmp = tmp + cha a rst append tmp rst =  join rst return rst 		52 73
def max_i p j = 0 max_j = 0 for i in range len p if p i > max_j max_j = p i j = i return j 		40 47
