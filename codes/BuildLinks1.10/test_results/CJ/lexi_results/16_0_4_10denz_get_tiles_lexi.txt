def get_tiles base_length complexity if complexity == 1 return list range 1 base_length + 1 tiles = needed_lookups = min_lookups base_length complexity for counter in range 1 needed_lookups + 1 tiles append counter * base_length - counter - 1 return int number for number in tiles 		18 25
def main with open d-small-attempt1.in as data test_cases = int data readline for idx in range test_cases base_length complexity max_lookups = int number for number in data readline split needed_lookups = min_lookups base_length complexity if needed_lookups > max_lookups print case #{}: impossible format idx + 1 else tiles = get_tiles base_length complexity print case #{}: {} format 		3 14
def min_lookups base_length complexity if complexity == 1 return base_length else return math ceil base_length / 2 		28 32
