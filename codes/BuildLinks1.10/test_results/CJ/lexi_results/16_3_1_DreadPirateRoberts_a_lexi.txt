def handle_case num_of_parties = int input senators = int x for x in input split  result = evacuate senators return result 		42 48
def evacuate senators parties = dict remaining_senators = sum senators plan = for party_num party_letter in enumerate ascii_uppercase len senators parties party_letter = senators party_num while remaining_senators > 2 party = max parties key = parties get step = party parties party -= 1 remaining_senators -= 1 if remaining_senators > 2 party party_senators = max parties items key = lambda x x 1 if 2 * party_senators > remaining_senators step += party parties party -= 1 remaining_senators -= 1 plan append step remaining_parties = for party_letter party_senators in parties items remaining_parties += party_letter * party_senators plan append join remaining_parties return plan 		13 39
def main num_of_tests = int input for test_case in range 1 num_of_tests + 1 result = handle_case printable_result = handle_result result print case #{}: {} format test_case printable_result 		56 64
def handle_result result return  join result 		51 53
