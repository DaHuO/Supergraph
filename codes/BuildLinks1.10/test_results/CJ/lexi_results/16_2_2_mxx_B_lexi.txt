def testcase ind global coder jammer all_res all_res = coder jammer = raw_input split mingap minc minj = none none none bestc bestj = none none dfs none for resc resj in all_res c j = int resc int resj gap = abs c - j if mingap == none or gap < mingap mingap minc minj = gap c j bestc bestj = resc resj if gap == mingap and c < minc mingap minc minj = gap c j bestc bestj = resc resj if gap == mingap and c == minc and j < minj mingap minc minj = gap c j bestc bestj = resc resj print case #%d: %s %s % ind bestc bestj 		6 25
def dfs resc resj clarger for i in xrange len resc len coder c j = coder i jammer i if c != ? and j != ? if c == j resc += c resj += j if c != j if clarger == none clarger = int c > int j resc += c resj += j elif c == j and c == ? if clarger == none dfs resc + 0 resj + 0 none dfs resc + 1 resj + 0 true dfs resc + 0 resj + 1 false return elif clarger resc += 0 resj += 9 else resc += 9 resj += 0 else if clarger != none if j == ? and clarger resc += c resj += 9 elif j == ? and clarger == false resc += c resj += 0 elif c == ? and clarger resc += 0 resj += j elif c == ? and clarger == false resc += 9 resj += j if clarger == none d = c if c != ? else j dfs resc + d resj + d clarger if d != 9 d1 = str int d + 1 if j == ? dfs resc + c resj + d1 false elif c == ? dfs resc + d1 resj + j true if d != 0 d1 = str int d - 1 if j == ? dfs resc + c resj + d1 true elif c == ? dfs resc + d1 resj + j false return all_res append resc resj 		28 75
