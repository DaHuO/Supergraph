def make_fmt formatter specials return lambda item specials get item formatter item 		4 5
def __init__ self file_name = none verbose = true formatter = str self verbose = verbose self formatter = formatter if file_name is none self in_file = sys stdin self out_file = sys stdout else self in_file = open file_name self out_file = open os path splitext file_name 0 + .out w self _case_idx = 1 		18 27
def make_seq_fmt sep item_fmt = str return lambda items sep join item_fmt i for i in items 		8 9
def msg self output end = \n sys stderr write str output + end 		29 30
def read_line self * types words = self in_file readline strip split if len words == 1 return types 0 words 0 return types min i len types - 1 words i 		32 43
def pl i return parties i 		60 61
def get_evac_seq senators seq = while len senators > 0 senators sort nparties = len senators assert nparties > 1 n0 p0 = senators pop n1 p1 = senators - 1 if n0 - n1 >= 2 evac = pl p0 * 2 n0 -= 2 senators append n0 p0 else evac = pl p0 n0 -= 1 if nparties == 2 if n0 + 1 == n1 evac += pl p1 senators pop n1 -= 1 if n1 > 0 senators append n1 p1 if n0 > 0 senators append n0 p0 else n2 p2 = senators - 2 if n0 == n1 and n2 < n1 evac += pl p1 senators pop n1 -= 1 if n1 > 0 senators append n1 p1 if n0 > 0 senators append n0 p0 seq append evac return seq 		64 100
def solve p senators = p i for i p in enumerate p return get_evac_seq senators 		103 105
def write_case self output pfx_char =  pfx = case #%d: % self _case_idx self _case_idx += 1 text = pfx + pfx_char + self formatter output self out_file write text + \n if self verbose self msg text else self msg pfx 		46 54
