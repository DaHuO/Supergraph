def digit c return ord c - ord 0 		1 2
def better2 x y x = int x 0 int x 1 y = int y 0 int y 1 return better x y 		22 25
def brute a b pos = 0 cap = 10 if pos == len a return a b if a pos == ? and b pos == ? best = none for i in range 10 for j in range 10 if abs i - j > cap continue a = a pos + str i + a pos + 1 b = b pos + str j + b pos + 1 ans = brute a b pos + 1 if best is none or better2 ans best best = ans return best if a pos == ? best = none for i in range 10 a = a pos + str i + a pos + 1 ans = brute a b pos + 1 if best is none or better2 ans best best = ans return best if b pos == ? best = none for i in range 10 b = b pos + str i + b pos + 1 ans = brute a b pos + 1 if best is none or better2 ans best best = ans return best return brute a b pos + 1 		87 118
def pad s length while len s < length s = 0 + s return s 		81 84
def better x y diff1 = abs x 0 - x 1 diff2 = abs y 0 - y 1 if diff1 < diff2 return true if diff1 > diff2 return false if x 0 < y 0 return true if x 0 > y 0 return false if x 1 < y 1 return true return false 		5 19
def solve a b y = rec a b 0 0 0 return pad str y 0 len a +  + pad str y 1 len a 		121 123
def rec a b pos a b if pos == len a return a b c1 = a pos c2 = b pos if c1 != ? and c2 != ? return rec a b pos + 1 a * 10 + digit c1 b * 10 + digit c2 if c1 == ? and c2 == ? if a < b return rec a b pos + 1 a * 10 + 9 b * 10 if a > b return rec a b pos + 1 a * 10 b * 10 + 9 best = rec a b pos + 1 a * 10 b * 10 choice2 = rec a b pos + 1 a * 10 + 1 b * 10 if better choice2 best best = choice2 choice3 = rec a b pos + 1 a * 10 b * 10 + 1 if better choice3 best best = choice3 return best if c1 == ? if a < b return rec a b pos + 1 a * 10 + 9 b * 10 + digit c2 if a > b return rec a b pos + 1 a * 10 b * 10 + digit c2 best = rec a b pos + 1 a * 10 + digit c2 b * 10 + digit c2 if digit c2 != 0 x = rec a b pos + 1 a * 10 + digit c2 - 1 b * 10 + digit c2 if better x best best = x if digit c2 != 9 x = rec a b pos + 1 a * 10 + digit c2 + 1 b * 10 + digit c2 if better x best best = x return best if c2 == ? if b < a return rec a b pos + 1 a * 10 + digit c1 b * 10 + 9 if b > a return rec a b pos + 1 a * 10 + digit c1 b * 10 best = rec a b pos + 1 a * 10 + digit c1 b * 10 + digit c1 if digit c1 != 0 x = rec a b pos + 1 a * 10 + digit c1 b * 10 + digit c1 - 1 if better x best best = x if digit c1 != 9 x = rec a b pos + 1 a * 10 + digit c1 b * 10 + digit c1 + 1 if better x best best = x return best raise exception wasnt supposed to be here 		28 78
