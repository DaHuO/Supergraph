def solve casedata c j = casedata mindiff = 1e19 newc = 0 newj = 0 cbase = 0 idxc = for idx c in enumerate reversed c if c == ? idxc append idx else cbase += 10 ** idx * int c jbase = 0 idxj = for idx c in enumerate reversed j if c == ? idxj append idx else jbase += 10 ** idx * int c for pc in range 10 ** len idxc for pj in range 10 ** len idxj ccan = cbase jcan = jbase b = 1 for ij in idxj jcan += pj % 10 * b / b * 10 ** ij b *= 10 b = 1 for ic in idxc ccan += pc % 10 * b / b * 10 ** ic b *= 10 diff = abs jcan - ccan if diff < mindiff mindiff = diff newc = ccan newj = jcan elif diff == mindiff if ccan < newc mindiff = diff newc = ccan newj = jcan elif ccan == newc if jcan < newj mindiff = diff newc = ccan newj = jcan sc = str newc zfill len c sj = str newj zfill len j return %s %s % sc sj 		16 70
def parse t = int sys stdin readline cases = list for case in range t c j = sys stdin readline rstrip \n split  casedata = c j cases append casedata return cases 		72 80
