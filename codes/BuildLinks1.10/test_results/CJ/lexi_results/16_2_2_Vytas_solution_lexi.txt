def solve self case raise notimplementederror 		26 27
classmethod def run_sample cls data if isinstance data basestring data = data splitlines task = cls task read_cases iter data task print_report verbose = true 		53 59
def __init__ self self cases = 		20 21
def solve_brute self c j n = len c best = 10 ** n + 1 0 0 qc = c count ? qj = j count ? if qc == qj == n return 0 * n 0 * n for c_test in xrange 10 ** qc for j_test in xrange 10 ** qj c = qp = 0 for i in range n if c i == ? c += str c_test rjust qc 0 qp qp += 1 else c += c i j = qp = 0 for i in range n if j i == ? j += str j_test rjust qj 0 qp qp += 1 else j += j i result = abs int c - int j c j if result < best best = result return best 1 		101 135
def print_report self verbose = false for index case in enumerate self cases start = time time result = self solve case elapsed = time time - start if verbose print solved case {0} in {1} s format case elapsed print case #{0}: {1} format index + 1 result if verbose print 		36 45
def parse_case self lines return tuple lines next strip split 		141 142
def solve self case c j = case return  join self solve_brute c j 		137 139
def read_cases self lines = none if lines is none lines = line strip for line in sys stdin amount = int lines next for index in xrange amount self cases append self parse_case lines 		29 34
classmethod def run cls task = cls task read_cases task print_report 		47 51
def solve_wrong self case c j = map list case for pos in range len c c = c pos j = j pos prior = cmp c pos j pos if c == ? and j == ? if prior > 0 c = 0 j = 9 elif prior == 0 c = j = 0 else c = 9 j = 0 elif c == ? if prior > 0 c = 0 elif prior == 0 c = j else c = 9 elif j == ? if prior > 0 j = 9 elif prior == 0 j = c else j = 0 c pos = c j pos = j return join c +  + join j 		64 99
def parse_case self lines raise notimplementederror 		23 24
