def clean_tiles f case_num print_info = line = f readline num_of_tiles complexities num_of_students = int y for y in line split  possible_or_not = false if num_of_tiles == 1 positions = 1 possible_or_not = true elif complexities == 1 if num_of_students == num_of_tiles positions = x + 1 for x in xrange num_of_tiles possible_or_not = true else minimum_num_of_students = num_of_tiles % 2 + num_of_tiles / 2 if num_of_students >= minimum_num_of_students positions = 0 for x in xrange minimum_num_of_students possible_or_not = true if num_of_tiles % 2 == 1 positions minimum_num_of_students - 1 = num_of_tiles ** 2 i = 0 while i < num_of_tiles / 2 if i == 0 positions i = 2 else positions i = 2 * i + 1 * num_of_tiles + 2 * i + 1 i += 1 if possible_or_not print_info append case # + str case_num + 1 + : for position in positions print_info append  + str position print_info append \n else print_info append case # + str case_num + 1 + : impossible\n return print_info 		8 43
def load_info f line = f readline out = int line return out 		3 6
