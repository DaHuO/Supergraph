def solve * args ** kwargs res = _solve * args ** kwargs evac = for t in res evac append join alphabet l for l in t return  join evac 		59 64
def _solve parties parties = list parties sm = sum parties hparties = - num i for i num in enumerate parties heapify hparties evac = while sm > 0 mx1 i1 = heappop hparties mx2 i2 = heappop hparties mx1 = - mx1 mx2 = - mx2 assert mx1 <= 2 * sm if mx1 == 1 and mx2 == 1 and sm == 3 evac append i1 heappush hparties - mx2 i2 sm -= 1 continue if mx1 == 1 and mx2 == 1 and sm != 3 evac append i1 i2 sm -= 2 continue assert mx1 >= 2 assert mx2 >= 1 if 2 * mx2 <= sm - 2 mx1 -= 2 heappush hparties - mx2 i2 if mx1 > 0 heappush hparties - mx1 i1 evac append i1 i1 sm -= 2 continue else mx1 -= 1 mx2 -= 1 if mx1 > 0 heappush hparties - mx1 i1 if mx2 > 0 heappush hparties - mx2 i2 evac append i1 i2 sm -= 2 continue return evac 		13 55
