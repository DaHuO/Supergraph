def diff l1 l2 x = int join l1 y = int join l2 return max x - y y - x 		46 49
def min_max s1 s2 return s1 replace ? 0 s2 replace ? 9 		54 55
def algorithm test_case c j = test_case a b = optimal c j return a +  + b 		133 136
def min_remaining l n = 0 for c in l n *= 10 if c == ? n += 0 else n += int c return n 		35 43
def runalgorithm results = for test_case in processinput results append algorithm test_case for i in range len results results i = case # + str i + 1 + : + results i + \n writeoutput results 		146 154
def optimal s1 s2 if len s1 == 0 return if s1 0 != ? and s2 0 != ? if s1 0 > s2 0 return s1 replace ? 0 s2 replace ? 9 elif s1 0 < s2 0 return s1 replace ? 9 s2 replace ? 0 elif s1 0 == s2 0 x y = optimal s1 1 s2 1 return s1 0 + x s2 0 + y else best_d best_c best_j = float inf none none s1_large s2_min = max_min s1 1 s2 1 s1_small s2_large = min_max s1 1 s2 1 if s1 0 == ? and s2 0 == ? x y = optimal s1 1 s2 1 x = 0 + x y = 0 + y best_d best_c best_j = diff x y x y x = 0 + s1_large y = 1 + s2_min if diff x y < best_d best_d best_c best_j = diff x y x y x = 1 + s1_small y = 0 + s2_large if diff x y < best_d best_d best_c best_j = diff x y x y elif s2 0 != ? a b c = str max 0 int s2 0 - 1 s2 0 str min 9 int s2 0 + 1 x = a + s1_large y = s2 0 + s2_min if diff x y < best_d best_d best_c best_j = diff x y x y x y = optimal s1 1 s2 1 x = b + x y = b + y if diff x y < best_d best_d best_c best_j = diff x y x y x = c + s1_small y = b + s2_large if diff x y < best_d best_d best_c best_j = diff x y x y elif s1 0 != ? a b c = str max 0 int s1 0 - 1 s1 0 str min 9 int s1 0 + 1 x = b + s1_small y = a + s2_large if diff x y < best_d best_d best_c best_j = diff x y x y x y = optimal s1 1 s2 1 x = b + x y = b + y if diff x y < best_d best_d best_c best_j = diff x y x y x = b + s1_large y = c + s2_min if diff x y < best_d best_d best_c best_j = diff x y x y return best_c best_j 		58 126
def basic_test assert algorithm 1? 2? == 19 20 		142 143
def max_remaining l n = 0 for c in l n *= 10 if c == ? n += 9 else n += int c return n 		25 33
def writeoutput results for result in results print result return 		18 21
def max_min s1 s2 return s1 replace ? 9 s2 replace ? 0 		51 52
def processinput t = int raw_input for i in range t c j = map str raw_input split assert len c == len j yield c j return 		8 15
