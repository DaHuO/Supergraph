def num return int fin readline 		128 129
def strs return fin readline split 		136 137
def inmajority x n = functools reduce lambda x y x + y x for i in range len x if x i > n // 2 return true i return false none 		24 29
def fnums return float x for x in fin readline split 		124 125
def permutations s duplicate = false perms = join p for p in itertools permutations s if not duplicate perms = list set perms return perms 		144 148
def main fname = test.in global fin fin = io open fname fout = io open fname + .out w t = int fin readline for i in range t fout write case #%d: % i + 1 fout write %s\n % str solve fin close fout close 		104 117
def combinations s repeat = 2 perms = join p for p in itertools product str s repeat = repeat return perms 		152 154
def nums return int x for x in fin readline split 		120 121
def sstrip return fin readline strip 		132 133
def arrstr a sep =  return sep join str x for x in a 		140 141
def iszero x n = functools reduce lambda x y x + y x if n == 0 return true return false 		32 36
def solve d = flag = 0 left_list = n = num senetors = nums for i in range n d chr 65 + i = senetors i left = permutations join str x for x in range n left_alone = range n check = 1 print left while not iszero senetors or flag != 1 temp = senetors if temp == senetors for j in reversed left_alone while check == 1 senetors j -= 1 major party = inmajority senetors if major senetors j += 1 check = 0 else left_list append chr j + 65 check = 1 if iszero senetors flag = 1 break if flag == 1 break for j in range len left print senetors for k in range 2 senetors int left j k -= 1 major party = inmajority senetors if major for k in range 2 senetors int left j k += 1 else left_list append chr int left j 0 + 65 + chr int left j 1 + 65 if iszero senetors flag = 1 break if flag == 1 break print left_list s =  join left_list return s 		40 91
