def maximize string return string replace ? 9 		9 10
def minimize string return string replace ? 0 		12 13
def testcompatible left right returnvalue = l = len left for index in xrange l if left index == ? and right index == ? returnvalue += 0 elif left index == ? returnvalue += right index elif right index == ? returnvalue += left index elif left index == right index returnvalue += left index else return none return returnvalue 		15 29
def solution left right l = len left returnvalue = testcompatible left right if returnvalue is not none return returnvalue +  + returnvalue bestsum = 0 bestdifference = 10 ** 20 bestleft = bestright = prefix = for index in xrange l if left index == ? and right index == ? possibleleft = prefix + 1 + minimize left index + 1 possibleright = prefix + 0 + maximize right index + 1 possiblesum = int possibleleft + int possibleright possiblediff = int possibleleft - int possibleright if bestdifference > possiblediff or bestdifference >= possiblediff and bestsum > possiblesum bestleft = possibleleft bestright = possibleright bestdifference = possiblediff bestsum = possiblesum possibleleft = prefix + 0 + maximize left index + 1 possibleright = prefix + 1 + minimize right index + 1 possiblesum = int possibleleft + int possibleright possiblediff = int possibleright - int possibleleft if bestdifference > possiblediff or bestdifference >= possiblediff and bestsum > possiblesum bestleft = possibleleft bestright = possibleright bestdifference = possiblediff bestsum = possiblesum prefix += 0 elif left index == ? if right index != 9 possibleleft = prefix + str int right index + 1 + minimize left index + 1 possibleright = prefix + right index + maximize right index + 1 possiblesum = int possibleleft + int possibleright possiblediff = int possibleleft - int possibleright if bestdifference > possiblediff or bestdifference >= possiblediff and bestsum > possiblesum bestleft = possibleleft bestright = possibleright bestdifference = possiblediff bestsum = possiblesum if right index != 0 possibleleft = prefix + str int right index - 1 + maximize left index + 1 possibleright = prefix + right index + minimize right index + 1 possiblesum = int possibleleft + int possibleright possiblediff = int possibleright - int possibleleft if bestdifference > possiblediff or bestdifference >= possiblediff and bestsum > possiblesum bestleft = possibleleft bestright = possibleright bestdifference = possiblediff bestsum = possiblesum prefix += right index elif right index == ? if left index != 0 possibleleft = prefix + left index + minimize left index + 1 possibleright = prefix + str int left index - 1 + maximize right index + 1 possiblesum = int possibleleft + int possibleright possiblediff = int possibleleft - int possibleright if bestdifference > possiblediff or bestdifference >= possiblediff and bestsum > possiblesum bestleft = possibleleft bestright = possibleright bestdifference = possiblediff bestsum = possiblesum if left index != 9 possibleleft = prefix + left index + maximize left index + 1 possibleright = prefix + str int left index + 1 + minimize right index + 1 possiblesum = int possibleleft + int possibleright possiblediff = int possibleright - int possibleleft if bestdifference > possiblediff or bestdifference >= possiblediff and bestsum > possiblesum bestleft = possibleleft bestright = possibleright bestdifference = possiblediff bestsum = possiblesum prefix += left index else if left index == right index prefix += left index elif int left index > int right index possibleleft = prefix + left index + minimize left index + 1 possibleright = prefix + right index + maximize right index + 1 possiblesum = int possibleleft + int possibleright possiblediff = abs int possibleright - int possibleleft if bestdifference > possiblediff or bestdifference >= possiblediff and bestsum > possiblesum bestleft = possibleleft bestright = possibleright bestdifference = possiblediff bestsum = possiblesum return bestleft +  + bestright else possibleleft = prefix + left index + maximize left index + 1 possibleright = prefix + right index + minimize right index + 1 possiblesum = int possibleleft + int possibleright possiblediff = abs int possibleright - int possibleleft if bestdifference > possiblediff or bestdifference >= possiblediff and bestsum > possiblesum bestleft = possibleleft bestright = possibleright bestdifference = possiblediff bestsum = possiblesum return bestleft +  + bestright return bestleft +  + bestright 		31 146
