def data_iterator lines_to_read = none if not shell_pipe_flag with open data_file_name r as f_handle line_iter = f_handle xreadlines case_no = int line_iter next for idx in range case_no if not lines_to_read line_no = int line_iter next yield idx + 1 line_iter next strip for _ in range line_no + 1 else yield idx + 1 line_iter next strip for _ in range lines_to_read else import sys case_no = int sys stdin readline for idx in range case_no if not lines_to_read line_no = int sys stdin readline yield idx + 1 sys stdin readline strip for _ in range line_no else yield idx + 1 sys stdin readline strip for _ in range lines_to_read 		18 38
def solve case_data k c s = map int case_data 0 split if k == 1 if s > 0 return 1 else return impossible c_part_list = start_l = 0 while start_l < k if start_l + c <= k c_part_list append range start_l start_l + c else tmp = range start_l k tmp extend k - 1 * start_l + c - k c_part_list append tmp break start_l += c if s < len c_part_list return impossible rst = for seq in c_part_list pos = 1 for idx num in enumerate seq pos += num * k ** c - idx - 1 rst append str pos return  join rst 		44 78
