def pairs iterable it = iter iterable try while true a b = next it next it yield a b 		24 29
def sub ps label = lambda x chr ord a + x 0 while any p > 0 for p in ps ordered = sorted enumerate ps key = lambda x x 1 reverse = true f s = ordered 0 ordered 1 try t = ordered 2 except indexerror t = none 0 labels = label f ps f 0 -= 1 if f 1 == s 1 and not t 1 == f 1 == 1 ps s 0 -= 1 yield labels + label s else yield labels 		39 56
def problem inpath outdir = def solve inpath processor outdir = from multiprocessing import pool from os import path inf = open inpath ru stem = path basename inpath name extension = path splitext stem outname = name + .out outpath = path join outdir outname outf = open outpath w inf readline pool = pool outputs = pool map processor pairs line strip for line in inf for i result in enumerate outputs 1 string = case #%s: %s % i result if i > 1 outf write \n outf write string solve inpath processor outdir 		1 22
def solve inpath processor outdir = from multiprocessing import pool from os import path inf = open inpath ru stem = path basename inpath name extension = path splitext stem outname = name + .out outpath = path join outdir outname outf = open outpath w inf readline pool = pool outputs = pool map processor pairs line strip for line in inf for i result in enumerate outputs 1 string = case #%s: %s % i result if i > 1 outf write \n outf write string 		2 20
def processor strings nstr pstr = strings ps = list map int pstr split instructions =  join sub ps return instructions 		33 37
