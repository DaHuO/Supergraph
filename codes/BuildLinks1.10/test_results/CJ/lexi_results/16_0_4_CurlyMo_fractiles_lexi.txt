def index_from_factors factors k index = 0 for dim factor in enumerate factors index += factor * k ** dim return index 		53 57
def determine_key_tiles_dumb sequences no_gold = sequences pop 0 num_lead = for i in range len no_gold num_lead append sum seq i == l for seq in sequences sorted_indices = i 0 for i in sorted enumerate num_lead key = lambda x x 1 result = lead_seqs = sequences for i in sorted_indices result append i if all seq i == g for seq in lead_seqs break lead_seqs = seq for seq in lead_seqs if seq i == l return result 		21 36
def fractilize seq c k = len seq prev_seq = seq new_seq = list seq for i in range c - 1 new_seq = for c in prev_seq if c == g new_seq extend g * k else new_seq extend seq prev_seq = new_seq return new_seq 		6 18
def determine_key_tiles k c factor_space = list range k indices = while len factor_space > 0 factors = factor_space c factor_space = factor_space c if len factors < c factors += 0 * c factors = factors c index = index_from_factors factors k indices append index return sorted indices 		39 50
def main infile outfile with open infile r as input open outfile w as out num_cases = int input readline for case in range 1 num_cases + 1 out write case #{}: format case k c s = int x for x in input readline rstrip split indices = determine_key_tiles k c if len indices > s out write impossible\n else out write  join str i + 1 for i in indices out write \n 		60 72
