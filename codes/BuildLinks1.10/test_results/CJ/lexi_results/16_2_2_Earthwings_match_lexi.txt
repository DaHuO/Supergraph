def __gt__ self other return mycmp self obj other obj > 0 		17 18
def parse filename with open filename as file numbers = file readlines return numbers 1 if len numbers > 0 else 		94 97
def __ge__ self other return mycmp self obj other obj >= 0 		23 24
def __init__ self obj * args self obj = obj 		13 14
def __eq__ self other return mycmp self obj other obj == 0 		19 20
def comparescore a b assert len a == 2 assert len b == 2 a1 = int a 0 a2 = int a 1 b1 = int b 0 b2 = int b 1 diffa = abs a1 - a2 diffb = abs b1 - b2 if diffa == diffb if a1 == b1 return - 1 if a2 < b2 else 1 return - 1 if a1 < b1 else 1 return - 1 if diffa < diffb else 1 		29 42
def __ne__ self other return mycmp self obj other obj != 0 		25 26
def __le__ self other return mycmp self obj other obj <= 0 		21 22
def score c j assert len c == len j one = two = for i in range len c a b = expand c i j i one append a two append b numbers = numbers = createnumbers one two numbers return sorted numbers key = cmp_to_key comparescore 0 		80 91
def cmp_to_key mycmp function class k object def __init__ self obj * args self obj = obj def __lt__ self other return mycmp self obj other obj < 0 def __gt__ self other return mycmp self obj other obj > 0 def __eq__ self other return mycmp self obj other obj == 0 def __le__ self other return mycmp self obj other obj <= 0 def __ge__ self other return mycmp self obj other obj >= 0 def __ne__ self other return mycmp self obj other obj != 0 return k 		10 27
def createnumbers a b numbers assert len a == len b for i in range len a m = a i n = b i if len numbers == 0 for m in a i for n in b i numbers append m n else old = copy copy numbers numbers clear for m in a i for n in b i for num in old numbers append num 0 + m num 1 + n return numbers 		44 60
def __lt__ self other return mycmp self obj other obj < 0 		15 16
def expand a b ra = 0 1 2 3 4 5 6 7 8 9 if a == ? else a rb = 0 1 2 3 4 5 6 7 8 9 if b == ? else b return ra rb if a == ? and b == ? return 0 9 0 9 if a == ? and b == 0 return 0 1 9 b if a == 0 and b == ? return a 0 1 9 if a == ? return 0 1 9 b b if b == ? return a 0 1 9 a return a b 		62 77
