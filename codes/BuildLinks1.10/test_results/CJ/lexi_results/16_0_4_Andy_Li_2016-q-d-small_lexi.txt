def list_add a b return x + y for x y in zip a b 		28 29
def compress guesses k c i_seg result = if c == 1 return reduce list_add guesses for i_guess in range len guesses if guesses i_guess i_seg result append guesses i_guess return reduce list_add result 		31 46
def guess_original k result = 1 * k i = 1 while i < 2 ** k inner = {0:b} format i padded = pad_num inner k comp = map lambda x 1 if x == 0 else 0 padded result append comp i *= 2 return result 		11 25
def pad_num s width diff = width - len s if diff <= 0 return s else return 0 * diff + s 		4 9
def solve k c s result = guesses = guess_original k i_seg = 0 while len guesses > 1 and i_seg < s segment = compress guesses k c i_seg min_l = min segment min_i = segment index min_l guesses = guess for guess in guesses if guess i_seg and guess min_i if c > 1 result append i_seg * k + min_i + 1 else result append min_i + 1 i_seg += 1 if len guesses > 1 return impossible else return  join map str result 		49 79
