def cmp lhs rhs return - lhs < rhs + lhs > rhs 		13 14
def make_min s return s replace ? 0 		21 22
def score item c j = item c j = int c int j return abs c - j c j 		16 19
def solve c j if not c or not j return solns = c j = head_c head_j = c 0 j 0 tail_c_min = make_min c 1 tail_c_max = make_max c 1 tail_j_min = make_min j 1 tail_j_max = make_max j 1 if c == ? and j == ? tail_c_next tail_j_next = solve c 1 j 1 solns append 0 + tail_c_next 0 + tail_j_next solns append 0 + tail_c_max 1 + tail_j_min solns append 1 + tail_c_min 0 + tail_j_max elif c == ? tail_c_next tail_j_next = solve c 1 j 1 solns append j + tail_c_next j + tail_j_next if j != 0 solns append str int j - 1 + tail_c_max j + tail_j_min if j != 9 solns append str int j + 1 + tail_c_min j + tail_j_max elif j == ? tail_c_next tail_j_next = solve c 1 j 1 solns append c + tail_c_next c + tail_j_next if c != 0 solns append c + tail_c_min str int c - 1 + tail_j_max if c != 9 solns append c + tail_c_max str int c + 1 + tail_j_min else if c == j tail_c_next tail_j_next = solve c 1 j 1 solns append c + tail_c_next j + tail_j_next if c > j solns append c + tail_c_min j + tail_j_max if c < j solns append c + tail_c_max j + tail_j_min return sorted solns key = score 0 		27 66
def make_max s return s replace ? 9 		24 25
