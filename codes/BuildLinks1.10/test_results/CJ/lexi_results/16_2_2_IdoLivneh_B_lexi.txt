def list_to_int array return part_of_list_to_int array true * len array 		96 97
def list_index_in_sorted_with_position a_list value pos list_len = len a_list if list_len == 1 if a_list 0 == value return pos return - 1 if a_list list_len / 2 > value return list_index_in_sorted_with_position a_list list_len / 2 value pos else return list_index_in_sorted_with_position a_list list_len / 2 value pos + list_len / 2 		125 134
def list_to_float array return part_of_list_to_float array true * len array 		109 110
def iterate_cases_glpc filepath with file filepath rb as f_in case_counter = 0 new_case = true for line_index line in enumerate f_in if line_index == 0 continue if new_case new_case = false case_counter += 1 case = assert len line strip split  == 1 lines_left = int line strip if not lines_left new_case = true yield case_counter case continue if lines_left lines_left -= 1 case append line strip split  if not lines_left new_case = true yield case_counter case 		62 84
def choice a b assert a >= b res = 1 if b > a - b for i in xrange b + 1 a + 1 res *= i for i in xrange 1 a - b + 1 res /= i else for i in xrange a - b + 1 a + 1 res *= i for i in xrange 1 b + 1 res /= i return res 		169 186
def part_of_list_to_float array flags assert len array == len flags output = for index elem in enumerate array if flags index output append float elem else output append elem return output 		99 107
def gcd a b while b a b = b a % b return a 		144 151
def list_index_in_sorted_list a_list value return list_index_in_sorted_with_position a_list value 0 		136 137
def main filepath start_time = time time with file output.txt wb as f_out for case_index case in iterate_cases_1lpc filepath print case #%d: time:%.02f % case_index time time - start_time result = calc_result case f_out write case #%d: %s\n % case_index result 		258 277
def get_max_array_on_index array index elem_len = len array 0 assert index < elem_len for elem in array assert elem_len == len elem max_sub = array 0 index max_elem = array 0 for elem in array if elem index > max_sub max_sub = elem index max_elem = elem return max_elem 		112 123
def solve a b pref_a pref_b memo if not a assert not b return abs int pref_a - int pref_b int pref_a int pref_b pref_a pref_b options = if not pref_a or int pref_a == int pref_b if a 0 == ? and b 0 == ? options append solve a 1 b 1 pref_a + 0 pref_b + 0 memo options append solve a 1 b 1 pref_a + 0 pref_b + 1 memo options append solve a 1 b 1 pref_a + 1 pref_b + 0 memo options append solve a 1 b 1 pref_a + 1 pref_b + 1 memo if a 0 == ? and b 0 != ? bb = int b 0 if bb < 9 options append solve a 1 b 1 pref_a + str bb + 1 pref_b + b 0 memo options append solve a 1 b 1 pref_a + b 0 pref_b + b 0 memo if bb > 0 options append solve a 1 b 1 pref_a + str bb - 1 pref_b + b 0 memo if a 0 != ? and b 0 == ? aa = int a 0 if aa < 9 options append solve a 1 b 1 pref_a + a 0 pref_b + str aa + 1 memo options append solve a 1 b 1 pref_a + a 0 pref_b + a 0 memo if aa > 0 options append solve a 1 b 1 pref_a + a 0 pref_b + str aa - 1 memo if a 0 != ? and b 0 != ? options append solve a 1 b 1 pref_a + a 0 pref_b + b 0 memo elif int pref_a > int pref_b if a 0 == ? and b 0 == ? options append solve a 1 b 1 pref_a + 0 pref_b + 9 memo if a 0 == ? and b 0 != ? options append solve a 1 b 1 pref_a + 0 pref_b + b 0 memo if a 0 != ? and b 0 == ? options append solve a 1 b 1 pref_a + a 0 pref_b + 9 memo if a 0 != ? and b 0 != ? options append solve a 1 b 1 pref_a + a 0 pref_b + b 0 memo elif int pref_a < int pref_b if a 0 == ? and b 0 == ? options append solve a 1 b 1 pref_a + 9 pref_b + 0 memo if a 0 == ? and b 0 != ? options append solve a 1 b 1 pref_a + 9 pref_b + b 0 memo if a 0 != ? and b 0 == ? options append solve a 1 b 1 pref_a + a 0 pref_b + 0 memo if a 0 != ? and b 0 != ? options append solve a 1 b 1 pref_a + a 0 pref_b + b 0 memo else assert false options sort return options 0 		193 243
def iterate_cases_1lpc filepath with file filepath rb as f_in for line_index line in enumerate f_in if line_index == 0 continue yield line_index line strip split  		12 17
def copy_list list res = res extend list return res 		139 142
def get_primes n primes = with file primes_filename rb as f for line in f readlines p = int line strip if p > n break primes append p else raise valueerror create a bigger prime file return primes 		154 167
def iterate_cases_subsections filepath num_of_subs with file filepath rb as f_in case_counter = 0 new_case = true for line_index line in enumerate f_in if line_index == 0 continue if new_case new_case = false new_sub_case = true sub_cases_left = num_of_subs case_counter += 1 case = if new_sub_case new_sub_case = false sub_case = assert len line strip split  == 1 lines_left = int line strip continue if lines_left lines_left -= 1 sub_case append line strip split  if not lines_left case append sub_case sub_cases_left -= 1 new_sub_case = true if not sub_cases_left new_case = true yield case_counter case 		32 60
def calc_result case result = none a b = case print a b memo = dict output = solve a b memo result = %s %s % output 3 output 4 print result return result 		245 255
def iterate_cases_nlpc filepath n with file filepath rb as f_in case_counter = 1 case = for line_index line in enumerate f_in if line_index == 0 continue case append line strip split  if not line_index % n yield case_counter case case_counter += 1 case = 		19 30
def part_of_list_to_int array flags assert len array == len flags output = for index elem in enumerate array if flags index output append int elem else output append elem return output 		86 94
