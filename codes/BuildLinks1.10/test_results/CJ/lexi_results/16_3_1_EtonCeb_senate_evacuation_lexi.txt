def load_cases_data cases_data = for i in xrange 1 num_of_cases * len input_variable_names + 1 current_case_number = i - 1 / len input_variable_names + 1 if not cases_data get current_case_number cases_data current_case_number = cases_data current_case_number input_variable_names i - 1 % len input_variable_names = int s for s in raw_input split  return cases_data 		15 36
def compute_data cases_data cases_results = for k case_data in cases_data iteritems case_results = p = case_data p while any p for i pop in enumerate p if pop >= 2 and noabsolutemajority i p 2 p i -= 2 case_results append {}{} format chr ord a + i chr ord a + i elif pop >= 1 and noabsolutemajority i p 1 p i -= 1 case_results append {} format chr ord a + i elif len population for population in p if population > 0 == 2 temp = for j p in enumerate p if p is not 0 p j -= 1 temp append j case_results append {}{} format chr ord a + temp 0 chr ord a + temp 1 cases_results append case_results return cases_results 		49 77
def print_cases_data cases_results for index case_result in enumerate cases_results print case #{}: {} format index + 1  join case_result 		81 86
def noabsolutemajority name parties_pop number_to_remove total = sum parties_pop party_distributions = for party_name pop in enumerate parties_pop if party_name == name party_distributions append float pop - number_to_remove / float total - number_to_remove else party_distributions append float pop / float total - number_to_remove return all party_distribution <= 0.5 for party_distribution in party_distributions 		38 47
