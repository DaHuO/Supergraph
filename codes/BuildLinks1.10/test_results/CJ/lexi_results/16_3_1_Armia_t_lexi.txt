def add_vertex self vertex assert vertex not in self vert self vertname append vertex self vert vertex = self vertcntr self vertcntr = self vertcntr + 1 self g append 		27 32
def __init__ self self vert = self vertname = self vertcntr = 0 self g = 		21 25
def dinic_bfs self s t dist = none * len self g q = s dist s = 0 while len q > 0 u = q pop 0 for e in self g u v = e sink if e cap - e flow > 0 and dist v == none dist v = dist u + 1 q append v return dist t != none dist 		77 88
def add_edge self u v w rcap = 0 if u == v raise valueerror u == v if type u is str u = self vert u v = self vert v uv_pos = len self g u vu_pos = len self g v self g u append arc u v vu_pos w self g v append arc v u uv_pos rcap 		41 52
def changex s gr = - 1 for i in range len s 0 if s 0 i == ? or s 1 i == ? break if int s 0 i > int s 1 i gr = 0 break if int s 0 i < int s 1 i gr = 1 break f = 0 for i in range len s 0 if s 0 i == ? or s 1 i == ? f = 1 break if f == 0 return s ss0 = if gr == - 1 if s 0 i == ? and s 1 i == ? ra = 01 if i < len s 0 - 1 and s 0 i + 1 == ? and s 1 i + 1 == ? ra = 0 for kl in ra for lk in ra ss = ss 0 = _ for _ in s 0 ss 1 = _ for _ in s 1 ss 0 i = kl ss 1 i = lk ss0 = selpattern ss0 changex ss elif s 0 i == ? ss = ss 0 = _ for _ in s 0 ss 1 = _ for _ in s 1 ss 0 i = s 1 i ss0 = selpattern ss0 changex ss if int s 1 i < 9 ss = ss 0 = _ for _ in s 0 ss 1 = _ for _ in s 1 ss 0 i = str int s 1 i + 1 ss0 = selpattern ss0 changex ss if int s 1 i > 0 ss = ss 0 = _ for _ in s 0 ss 1 = _ for _ in s 1 ss 0 i = str int s 1 i - 1 ss0 = selpattern ss0 changex ss elif s 1 i == ? ss = ss 0 = _ for _ in s 0 ss 1 = _ for _ in s 1 ss 1 i = s 0 i ss0 = selpattern ss0 changex ss if int s 0 i < 9 ss = ss 0 = _ for _ in s 0 ss 1 = _ for _ in s 1 ss 1 i = str int s 0 i + 1 ss0 = selpattern ss0 changex ss if int s 0 i > 0 ss = ss 0 = _ for _ in s 0 ss 1 = _ for _ in s 1 ss 1 i = str int s 0 i - 1 ss0 = selpattern ss0 changex ss return ss0 elif gr == 0 for _ in range i len s 0 if s 0 _ == ? s 0 _ = 0 if s 1 _ == ? s 1 _ = 9 elif gr == 1 for _ in range i len s 0 if s 0 _ == ? s 0 _ = 9 if s 1 _ == ? s 1 _ = 0 return s 		363 445
def dinic_dfs self u t f dist work if u == t return f deg_u = len self g u w_u = work u for i in range w_u deg_u e = self g u i work u = i v = e sink if e flow < e cap and dist v == dist u + 1 df = self dinic_dfs v t min f e cap - e flow dist work if df > 0 e flow += df self g e sink e rev flow -= df return df return 0 		58 72
def max_flow self source sink if type source is str source = self vert source sink = self vert sink inf = float inf mf = 0 while true reach dist = self dinic_bfs source sink if not reach break work = 0 * len self g while true df = self dinic_dfs source sink inf dist work mf += df if df == 0 break return mf 		91 106
def __init__ self source sink rev cap self source = source self sink = sink self rev = rev self flow = 0 self cap = cap 		12 17
def addnew cc seq sum = 0 for _ in range len cc sum = sum + cc _ if max cc * 2 > sum return ccx = _ for _ in cc seqx = _ for _ in seq m = 0 mid = - 1 for _ in range len ccx if m < ccx _ m = ccx _ mid = _ if m == 0 return seqx ccx mid = ccx mid - 1 seqx append chr mid + 65 m = 0 mid = - 1 for _ in range len ccx if m < ccx _ m = ccx _ mid = _ if m == 0 return seqx ccx mid = ccx mid - 1 seqx - 1 = seqx - 1 + chr mid + 65 dd = addnew ccx seqx if len dd == 0 ccx = _ for _ in cc seqx = _ for _ in seq m = 0 mid = - 1 for _ in range len ccx if m < ccx _ m = ccx _ mid = _ if m == 0 return seqx ccx mid = ccx mid - 1 seqx append chr mid + 65 return addnew ccx seqx else return dd 		116 166
def selpattern s0 s1 if len s0 == 0 return s1 if len s1 == 0 return s0 s0x = s1x = s0x 0 = int join s0 0 s0x 1 = int join s0 1 s1x 0 = int join s1 0 s1x 1 = int join s1 1 if abs s0x 0 - s0x 1 < abs s1x 0 - s1x 1 return s0 if abs s0x 0 - s0x 1 > abs s1x 0 - s1x 1 return s1 if abs s0x 0 < abs s1x 0 return s0 if abs s0x 0 > abs s1x 0 return s1 if abs s0x 1 < abs s1x 1 return s0 if abs s0x 1 > abs s1x 1 return s1 return s0 		338 361
def get_edges self v if type v is str v = self vert v return self g v 		34 37
def addst bbf cc s cir = cc cdc = cir - 1 start = len cir typclose = - 1 while 1 nxt = bbf cir - 1 if len cir > 1 and nxt == cir - 2 typclose = 0 break elif nxt in cir if nxt == cir 0 typclose = 1 else typclose = - 1 break else cir append nxt return cir typclose 		484 502
