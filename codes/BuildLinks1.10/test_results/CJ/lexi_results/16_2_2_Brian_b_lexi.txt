def try_all c j best = none for i in xrange len c if c i == ? for j in xrange 10 c i = chr ord 0 + j curr = try_all c j if best is none or curr 0 < best 0 or curr 0 == best 0 and curr 1 < best 1 or curr 0 == best 0 and curr 1 == best 1 and curr 2 < best 2 best = curr c i = ? return best for i in xrange len j if j i == ? for j in xrange 10 j i = chr ord 0 + j curr = try_all c j if best is none or curr 0 < best 0 or curr 0 == best 0 and curr 1 < best 1 or curr 0 == best 0 and curr 1 == best 1 and curr 2 < best 2 best = curr j i = ? return best c = join c j = join j res = abs int c - int j return res c j 		1 30
