def populate i start length if length > n + 5 outcomes start = none 0 forb populate i i 0 if i in outcomes return if array array i == i outcomes i = i 0 pair outcomes array i = array i 0 pair return if array i not in outcomes populate array i start length + 1 if i == start and length > 0 outcomes i = start length loop return if outcomes array i 2 4 == forb outcomes i = none 0 forb return outcomes i = outcomes array i 0 outcomes array i 1 + 1 outcomes array i 2 + ex 		29 52
def doprob n = int raw_input array = none line = raw_input split for i in line array append int i doubles = x for x in xrange 1 n + 1 if array array x == x outcomes = for i in xrange 1 n + 1 start = i ok = 0 for j in xrange n + 1 new = array start if array new == start or new == i ok = 1 break start = new if ok == 0 outcomes i = none 0 forb def populate i start length if length > n + 5 outcomes start = none 0 forb populate i i 0 if i in outcomes return if array array i == i outcomes i = i 0 pair outcomes array i = array i 0 pair return if array i not in outcomes populate array i start length + 1 if i == start and length > 0 outcomes i = start length loop return if outcomes array i 2 4 == forb outcomes i = none 0 forb return outcomes i = outcomes array i 0 outcomes array i 1 + 1 outcomes array i 2 + ex for i in xrange 1 n + 1 populate i i 0 lendict = dict x 0 for x in doubles result = 0 for i in outcomes fff = outcomes i if fff 2 == loopex result = max result fff 1 - 1 if len fff 2 >= 6 and fff 2 6 == pairex lendict fff 0 = max lendict fff 0 fff 1 proposal = 0 for i in doubles proposal += 1 + lendict i return max result proposal 		6 78
