def find node link n linkednode q = node 0 head ret = 0 0 checknode = 0 * n while head < len q curr = q head 0 currdis = q head 1 ret = max ret currdis checknode curr = 1 head += 1 for i in link curr if checknode i == 0 and i != linkednode q append i currdis + 1 return ret 		3 16
def solve n = int raw_input edge = int x - 1 for x in raw_input split  link = for i in range n for i in range n link edge i append i search = 0 * n longest = 0 for i in range n if search i == 0 dis = 0 * n curr count = i 0 while search curr == 0 search curr = 1 count += 1 dis curr = count curr = edge curr if dis curr > 0 longest = max longest count - dis curr + 1 supernode = 0 check = 0 * n for i in range n if check i == 0 check i = 1 if edge edge i == i check edge i = 1 supernode += find i link n edge i supernode += find edge i link n i supernode += 2 ret = max longest supernode return ret 		18 52
