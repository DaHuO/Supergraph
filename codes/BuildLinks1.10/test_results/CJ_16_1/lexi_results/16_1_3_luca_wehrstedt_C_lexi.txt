def depth i return max 0 + depth k + 1 for k in reverse i 		16 17
def run n = int input strip graph = list int x - 1 for x in input split reverse = list for _ in range n for i j in enumerate graph reverse j append i res = - 1 twos = 0 def depth i return max 0 + depth k + 1 for k in reverse i visited = n * false active = none stack = none for i in range n if visited i continue active = n * false active i = true visited i = true again = false stack = i while not active graph stack - 1 node = graph stack - 1 if visited node again = true break visited node = true active node = true stack append node if again continue loop = stack stack index graph stack - 1 if len loop == 2 distance2 = n * none queue = deque reverse loop 0 remove loop 1 reverse loop 1 remove loop 0 twos += len loop + depth loop 0 + depth loop 1 else res = max res len loop return max res twos 		5 50
