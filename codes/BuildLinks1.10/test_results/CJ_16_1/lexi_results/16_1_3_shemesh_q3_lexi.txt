def getused l max_num_in_circle = 0 used_list = false * len l used_in_circle = false * len l while sum used_list != len l n_list = 0 * len l for i in range len l if not used_list i curr_node = i break while true if n_list curr_node == 2 break n_list curr_node += 1 curr_node = l curr_node num_in_circle = sum x == 2 for x in n_list used_list = used_list i or n_list i == 2 or n_list i == 1 for i in range len l used_in_circle = used_in_circle i or n_list i == 2 for i in range len l return used_in_circle 		145 168
def findmaxlinefor2circle l circle used_list n = len l max_line_len1 = 0 max_line_len2 = 0 in_lines = false * n local_used_list = used_list while sum local_used_list != n n_list = 0 * len l for i in range len l if not local_used_list i curr_node = i break in_line = false * n while true if curr_node in circle break elif used_list curr_node break in_line curr_node = true curr_node = l curr_node local_used_list = local_used_list i or in_line i for i in range n if curr_node not in circle continue if curr_node == circle 0 and sum in_line > max_line_len1 max_line_len1 = sum in_line elif curr_node == circle 1 and sum in_line > max_line_len2 max_line_len2 = sum in_line in_lines = in_lines i or in_line i for i in range n used_list = used_list i or in_lines i for i in range n return 2 + max_line_len1 + max_line_len2 used_list 		23 63
def find2circles l n = len l couples = used = false * n for i in range n if l i > i and l l i == i couples += i l i used i = true used l i = true return couples used 		11 21
def findlinelens l n = len l max_num_in_circle = 0 used_list = false * len l circle_list = false * len l line_list = 0 * n while sum used_list != len l n_list = 0 * len l for i in range len l if not used_list i curr_node = i break len_till_now = 0 tmp_line_list = 0 * n while true if n_list curr_node == 2 break tmp_line_list i = len_till_now n_list curr_node += 1 curr_node = l curr_node len_till_now += 1 num_in_circle = sum x == 2 for x in n_list if num_in_circle == 2 for i in range n if n_list i == 1 line_list i = len_till_now - tmp_line_list i used_list = used_list i or n_list i == 2 or n_list i == 1 for i in range len l circle_list = circle_list i or n_list i == 2 for i in range len l max_num_in_circle = max max_num_in_circle num_in_circle used_list = circle_list while sum used_list != n n_list = i in circle_list for i in range n for i in range n if not used_list i curr_node = i break while true if n_list curr_node == 2 break n_list curr_node += 1 curr_node = l curr_node 		66 118
def func_2 l couples used = find2circles l used = getused l sum_m = 0 for c in couples m used = findmaxlinefor2circle l c used sum_m += m return sum_m 		1 9
def func_1 l max_num_in_circle = 0 used_list = false * len l while sum used_list != len l n_list = 0 * len l for i in range len l if not used_list i curr_node = i break while true if n_list curr_node == 2 break n_list curr_node += 1 curr_node = l curr_node num_in_circle = sum x == 2 for x in n_list used_list = used_list i or n_list i == 2 or n_list i == 1 for i in range len l max_num_in_circle = max max_num_in_circle num_in_circle return max_num_in_circle 		121 143
def func l v1 = func_1 l v2 = func_2 l return max v1 v2 		171 175
