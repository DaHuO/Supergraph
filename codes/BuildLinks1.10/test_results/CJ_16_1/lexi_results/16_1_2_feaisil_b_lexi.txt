def parse cin l = ri cin for k in range 2 * l 0 - 1 l 1 += riv cin return l 		40 44
def rs cin return cin rl split 		12 13
def revs s return join rev s 		31 32
def find_other v val p k r1 = - 1 r2 = - 1 for i in range len v if i == k continue if v i p == val if r1 == - 1 r1 = i else r2 = i return r1 r2 return r1 r2 		62 73
def rl cin return cin readline - 1 		8 10
def isprime n for i in range 2 int math sqrt n if not i % n return true 		33 36
def main start = time time t = cin ri cerr write going to process {} cases\n format t k = 0 for ti in range 1 t + 1 if math log 100 * ti / t > k cerr write case {}... format ti print case #{0}: {1} format ti do parse sys stdin if math log 100 * ti / t > k k += 1 cerr write duration {}\n format time time - start cerr write duration {0}\n format time time - start 		108 120
def rfv cin return float x for x in rs cin 		24 25
def rf cin return float cin rl 		21 22
def fr0 v p ids low = true h = 0 if low h = mh i1 = - 1 i2 = - 1 for i in range len v if i in ids continue cerr write str v i p +  + str h + \n if low and v i p < h or not low and v i p > h i1 = i i2 = - 1 h = v i p elif v i p == h i2 = i return i1 i2 h 		45 60
def riv cin return int x for x in rs cin 		18 19
def rev i o = for x in range 1 1 + len i o += i - x return o 		27 30
def do l n = l 0 v = l 1 ids = m_p = - 1 c = 0 l = 0 m_v = 0 for i in range n for i in range n c l m = fr0 v i ids if c == - 1 or l == - 1 m_p = i break ids += c l l_o = 0 if c == - 1 l_0 = l else l_0 = c m_v m_p = v l_0 m_p ids = l_0 for i in range n if i == m_p continue c l m = fr0 v i ids if v c m_p == v l_0 i m_v i = v l m_p else m_v i = v c m_p ids += c l return  join str x for x in m_v 		76 106
def ri cin return int cin rl 		15 16
