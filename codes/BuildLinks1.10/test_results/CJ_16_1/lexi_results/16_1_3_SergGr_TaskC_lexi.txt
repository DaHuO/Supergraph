def calcsingletest f line = f readline n = int line line = f readline arr = map lambda x x - 1 map int line split all_fr = dict for x in xrange n all_fr x = for x in xrange n all_fr arr x append x order = visited = set def visit v if v in visited return visited add v visit arr v order insert 0 v return for x in xrange n visit x s_comps = - 1 * n s_comps_count = 0 * n def assign v root if s_comps v != - 1 return s_comps_count root += 1 s_comps v = root for v1 in all_fr v assign v1 root return for x in order assign x x tails = 0 * n for x in order c = s_comps x if s_comps_count c != 1 continue if tails x + 1 > tails arr x tails arr x = tails x + 1 good_comps = xx for xx in xrange 0 n if s_comps_count xx == 2 good_v = vv for vv in xrange 0 n if s_comps_count s_comps vv == 2 for x in good_v c = s_comps x if c == x continue else tails c += tails x m = max s_comps_count s = 0 for x in good_v c = s_comps x if c == x tails x += 2 s += tails x tails x = - tails x print n print arr = + str arr print all_fr print order print cmp = + str s_comps print cnt = + str s_comps_count print good_comps print good_v print tails res = max s m print res = {0}, max = {1}, sum = {2} format res m s if false res2 = brute_force n arr all_fr if res != res2 print aaaaaa + res = + str res + res2 = + str res2 raise runtimeerror aaaaaa + str res + res2 = + str res2 else print good else print !!!skip return res 		59 149
def check_length l for vs in itertools combinations all l for order in itertools permutations vs if check_order order return true return false 		46 51
def visit v if v in visited return visited add v visit arr v order insert 0 v return 		74 80
def brute_force n arr all_fr b = 1 all = list range n def check_order order ll = len order for x in xrange ll cur = order x left = order ll + x - 1 % ll right = order x + 1 % ll if left != arr cur and right != arr cur return false return true def check_length l for vs in itertools combinations all l for order in itertools permutations vs if check_order order return true return false for l in xrange 2 n + 1 if check_length l b = l return b 		32 56
def main with open inputfilename as inpf random seed 0 with open outputfilename w as outf line = inpf readline testscount = int line for i in xrange 1 testscount + 1 print -------- {0}/{1} {2} -------------------------- format i testscount time time - starttime res = calcsingletest inpf print -------- {0}/{1} {2} -------------------------- format i testscount time time - starttime print  outf write case #{0}: {1}\n format i res outf flush 		152 164
def check_order order ll = len order for x in xrange ll cur = order x left = order ll + x - 1 % ll right = order x + 1 % ll if left != arr cur and right != arr cur return false return true 		36 44
def assign v root if s_comps v != - 1 return s_comps_count root += 1 s_comps v = root for v1 in all_fr v assign v1 root return 		88 95
