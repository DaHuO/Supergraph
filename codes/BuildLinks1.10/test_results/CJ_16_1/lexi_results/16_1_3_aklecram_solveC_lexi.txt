def cycle_length bffs kid visited = set n = 0 curr = kid while true if curr in visited if curr == kid return n else return 0 visited add curr curr = bffs curr n += 1 		56 68
def run pool = none inp = sys argv 1 outp = %s.out % inp split . 0 with open inp r as _file open outp w as out _cases = int _file readline arguments = for _case in range _cases n = int _file readline bffs = tuple int x for x in _file readline split  arguments append _case + 1 n bffs if pool == none results = list map solve_wrapper arguments else results = sorted list pool imap_unordered solve_wrapper arguments key = lambda r r 0 for _case result in results out write case #%s: %s\n % _case result 		9 29
def max_follower_line followers kid kbff todo = kid 0 result = 0 while true if len todo == 0 return result k n = todo pop result = max result n for f in followers k if f != kbff todo append f n + 1 		37 47
def reciprocal bffs result = set for kid in bffs if bffs bffs kid == kid result add kid return result 		49 54
def solve_wrapper args case_no _args = args print solving case #%s % case_no return case_no solve * _args 		31 34
def solve n bffs_list followers = defaultdict set bffs = dict i + 1 bffs_list i for i in range n for k v in bffs items followers v add k rs = reciprocal bffs result1 = len rs + sum max_follower_line followers r bffs r for r in rs result2 = max cycle_length bffs kid for kid in bffs return max result1 result2 		70 78
