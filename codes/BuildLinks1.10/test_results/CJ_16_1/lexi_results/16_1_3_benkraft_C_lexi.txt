def parse lines return map int line split for line in lines 1 2 		53 54
def solve testcase graph = i - 1 for i in testcase large_cycles two_cycles two_cycle_targets = cycles graph if large_cycles max_cycle = max map len large_cycles else max_cycle = 0 two_cycle_sizes = two_cycle_targets a + two_cycle_targets b + 2 for a b in two_cycles two_cycle_sizes sort return max max_cycle sum two_cycle_sizes 		40 50
def cycles graph cycle_members = set large_cycles = two_cycles = two_cycle_targets = for i in xrange len graph crumbs = seen = set while true if i in seen cycle = crumbs crumbs index i if len cycle > 2 large_cycles append cycle else two_cycles append cycle two_cycle_targets cycle 0 = len crumbs - 2 two_cycle_targets cycle 1 = 0 cycle_members update cycle break elif i in cycle_members if i in two_cycle_targets two_cycle_targets i = max two_cycle_targets i len crumbs break else crumbs append i seen add i i = graph i return large_cycles two_cycles two_cycle_targets 		6 37
