def data_iterator lines_to_read = none if not shell_pipe_flag with open data_file_name r as f_handle line_iter = f_handle xreadlines case_no = int line_iter next for idx in range case_no if not lines_to_read line_no = int line_iter next yield idx + 1 line_iter next strip for _ in range line_no * 2 - 1 else yield idx + 1 line_iter next strip for _ in range lines_to_read else import sys case_no = int sys stdin readline for idx in range case_no if not lines_to_read line_no = int sys stdin readline yield idx + 1 sys stdin readline strip for _ in range line_no else yield idx + 1 sys stdin readline strip for _ in range lines_to_read 		18 38
def solve case_data from collections import counter n = len case_data + 1 / 2 m = for line in case_data m append map int line split  n = for a in m for b in a n append b c = counter n o = for d in c if c d % 2 != 0 o append d o sort o = map str o rst =  join o return rst 		47 72
