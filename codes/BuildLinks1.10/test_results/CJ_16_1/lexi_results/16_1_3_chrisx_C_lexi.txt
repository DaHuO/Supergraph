def max_chain followers i follower_set = followers i follower_max = if len follower_set == 0 return 0 for follower in follower_set follower_max append max_chain followers follower return max follower_max + 1 		87 94
def solve n bffs followers = none for _ in range n followers append set for ind bff in enumerate bffs 1 followers bff add ind + 1 pairs = set for i in range 1 n + 1 if bffs bffs i == i if i < bffs i pair = i bffs i else pair = bffs i i pairs add pair pairs_max_len = for pair in pairs pair_len = 2 for member in pair other = pair 0 + pair 1 - member if len followers member == 1 continue assert len followers member > 1 follower_max = for follower in followers member if follower == other continue follower_max append max_chain followers follower pair_len += max follower_max + 1 pairs_max_len append pair_len if len pairs == 0 pair_sol = 0 else pair_sol = sum pairs_max_len circle_sol = 0 touched = set order = list range 1 n + 1 shuffle order for i in order if i in touched continue touched add i this_set = set this_set add i number = i while bffs number not in this_set touched add bffs number number = bffs number this_set add number first_repeat = bffs number number = first_repeat count = 1 while bffs number != first_repeat number = bffs number count += 1 circle_sol = max circle_sol count return max pair_sol circle_sol 		19 81
def parse input_file output_file with open input_file as f t = int f readline split 0 out = open output_file w for i in range t n = int f readline split 0 bffs = list map int f readline split sol = solve n none + bffs line = case # + str i + 1 + : + str sol print line out write line + \n return 		4 16
