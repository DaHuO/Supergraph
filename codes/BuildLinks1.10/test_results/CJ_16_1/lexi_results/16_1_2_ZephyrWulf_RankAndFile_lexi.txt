def rankandfile fin n = int fin readline obs = for i in range 2 * n - 1 obs append map int fin readline split grid = - 1 * n for _ in range n obs sort fill grid obs 0 0 0 n false for i in range n row = grid i j for j in range n if row not in obs return  join map str row else obs remove row for j in range n row = grid i j for i in range n if row not in obs return  join map str row else obs remove row 		99 121
def fill grid obs i j idx n skipped if idx == 0 grid 0 = obs 0 return fill grid obs 1 0 1 n skipped if idx == 2 * n - 1 return true if j < n possible = true for k in range n if grid k j == - 1 continue if grid k j != obs idx k possible = false break if possible resetcoord = for k in range n if grid k j == - 1 resetcoord append k j grid k j = obs idx k if fill grid obs i j + 1 idx + 1 n skipped return true else for c in resetcoord grid c 0 c 1 = - 1 if i < n possible = true for k in range n if grid i k == - 1 continue if grid i k != obs idx k possible = false break if possible resetcoord = for k in range n if grid i k == - 1 resetcoord append i k grid i k = obs idx k if fill grid obs i + 1 j idx + 1 n skipped return true else for c in resetcoord grid c 0 c 1 = - 1 if skipped return false if j + 1 < n possible = true for k in range n if grid k j + 1 == - 1 continue if grid k j + 1 != obs idx k possible = false break if possible resetcoord = for k in range n if grid k j + 1 == - 1 resetcoord append k j + 1 grid k j + 1 = obs idx k if fill grid obs i j + 2 idx + 1 n skipped return true else for c in resetcoord grid c 0 c 1 = - 1 if i + 1 < n possible = true for k in range n if grid i + 1 k == - 1 continue if grid i + 1 k != obs idx k possible = false break if possible resetcoord = for k in range n if grid i + 1 k == - 1 resetcoord append i + 1 k grid i + 1 k = obs idx k if fill grid obs i + 2 j idx + 1 n true return true else for c in resetcoord grid c 0 c 1 = - 1 return false 		1 97
