def find_root x bff oldx = - 1 seen = x l = 1 start = x while true bff = bff x if bff == oldx return l oldx x true elif bff == start return l start start false elif bff in seen return 0 0 0 false else seen add bff oldx = x x = bff l += 1 		6 25
def solve case n bff = case roots = result = 0 for x in range n l pair expandable = find_root x bff result = max result l if expandable oldl = roots get pair 0 roots pair = max l oldl chained = set chainedl = 0 for k v in roots items if k in chained continue k1 k2 = k otherl = roots get k2 k1 0 if otherl > 0 otherl -= 2 chainedl += v + otherl chained add k chained add k2 k1 return max result chainedl 		27 51
def read_case n = int raw_input bff = map int raw_input split return n x - 1 for x in bff 		1 4
