def get grid location thing if location >= len grid return none if thing == row return grid location else answer = for x in xrange len grid answer append grid x location return answer 		13 22
def add grid line location thing if thing == row grid location = line elif thing == column for x in xrange len line grid x location = line x 		24 29
def recurse grid x y data global bad global value if not data value = grid if x < len grid bad = x row if y < len grid bad = y column return true if not verify grid data return false store = copy deepcopy grid current = data pop check = get grid x row if ok current check add grid current x row if recurse grid x + 1 y data return true if x + 1 < n grid = copy deepcopy store check = get grid x + 1 row if ok current check add grid current x + 1 row if recurse grid x + 2 y data bad = x row return true grid = copy deepcopy store check = get grid y column if ok current check add grid current y column if recurse grid x y + 1 data return true if y + 1 < n grid = copy deepcopy store check = get grid y + 1 column if ok current check add grid current y + 1 column if recurse grid x y + 2 data bad = y column return true data append current return false 		65 119
def verify grid data no = 0 for line in grid if none in line good = false for d in data if ok line d good = true break if not good no = no + 1 if no == 2 return false for x in xrange len grid line = grid y x for y in xrange len grid if none in line good = false for d in data if ok line d good = true break if not good no = no + 1 if no == 2 return false return true 		31 58
def main n data data = d split for d in data for x in xrange len data for y in xrange len data 0 data x y = int data x y data = sorted data - 1 answer = none for _ in xrange n for _ in xrange n assert recurse answer 0 0 data return  join map str get value bad 0 bad 1 		121 131
def ok a b if a is none or b is none return false for x in xrange len a if a x and b x and a x != b x return false return true 		4 11
