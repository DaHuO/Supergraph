def check board for row in board for i in xrange len row - 1 if row i >= row i + 1 return false for i in range len board for j in range len board - 1 if board j i >= board j + 1 i return false return true 		4 23
def solve lines n for b in itertools combinations lines n new_b = list b new_b sort if check new_b found_board = new_b cols = for i in range n s = for e in found_board s append e i cols append s col_count = 0 no_col = none content_dict = defaultdict int for e in found_board content_dict tuple e += 1 for e in cols content_dict tuple e += 1 for l in lines content_dict tuple l -= 1 minus_count = 0 minus_ele = none for k in content_dict if content_dict k > 0 minus_count += 1 minus_ele = k if minus_count != 1 continue for e in found_board print e print content_dict print answer +  join map str minus_ele return  join map str minus_ele for line in lines if lines count line != 2 print board symmetrical must be +  join map str line return line 		25 84
