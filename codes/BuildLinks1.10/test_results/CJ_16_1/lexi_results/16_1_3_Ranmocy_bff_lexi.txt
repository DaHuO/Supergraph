def enum n f i cycle bff_of_i = f i bff_of_bff = f bff_of_i if bff_of_i in cycle if bff_of_bff == i for t in range n if not t in cycle cycle append t enum n f t cycle cycle pop else global result index = cycle index bff_of_i result = max result len cycle - index print f cycle len cycle - index index else cycle append bff_of_i enum n f bff_of_i cycle cycle pop 		11 32
def all_visited visited for t in visited if not t return false return true 		5 9
def search n m i visited depth = 1 for j in m i if not visited j visited j = true depth = max depth search n m j visited + 1 visited j = false return depth 		35 42
def solve n f global result result = 0 for i in range n enum n f i i reverse_map = for i in range n for i in range n reverse_map f i append i visited = false for i in range n result_for_btt_of_btt_is_me = 0 for i in range n if not visited i and not visited f f i and f f i == i visited i = true visited f i = true print i f i result_for_btt_of_btt_is_me += search n reverse_map i visited print result_for_btt_of_btt_is_me result_for_btt_of_btt_is_me += search n reverse_map f i visited print result_for_btt_of_btt_is_me return max result result_for_btt_of_btt_is_me 		44 65
