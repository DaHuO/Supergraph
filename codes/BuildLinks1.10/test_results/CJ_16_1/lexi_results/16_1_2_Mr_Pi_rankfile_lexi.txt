def get_answer f n = int f readline strip alllines = heights = set for i in xrange 2 * n - 1 line = map int f readline strip split alllines append tuple line heights update line if debug print start + str n +  + str alllines topcorner = min heights bottomcorner = max heights topcorner_lines = bottomcorner_lines = middle_lines = for line in alllines if line 0 == topcorner topcorner_lines append line elif line - 1 == bottomcorner bottomcorner_lines append line else middle_lines append line middle_lines = sorted middle_lines if len topcorner_lines == 1 if debug print case ans = check_answer topcorner_lines 0 + middle_lines + bottomcorner_lines 0 none bottomcorner_lines 1 none * n 0 if ans is none ans = check_answer topcorner_lines 0 + middle_lines + bottomcorner_lines 1 none bottomcorner_lines 0 none * n 0 elif len bottomcorner_lines == 1 if debug print case2 ans = check_answer topcorner_lines 0 + middle_lines + bottomcorner_lines 0 topcorner_lines 1 none none * n 0 if ans is none ans = check_answer topcorner_lines 1 + middle_lines + bottomcorner_lines 0 topcorner_lines 0 none none * n 0 else if debug print case3 ans = check_answer topcorner_lines 0 + middle_lines + bottomcorner_lines 0 topcorner_lines 1 bottomcorner_lines 1 none * n 0 if ans is none ans = check_answer topcorner_lines 1 + middle_lines + bottomcorner_lines 0 topcorner_lines 0 bottomcorner_lines 1 none * n 0 if ans is none ans = check_answer topcorner_lines 1 + middle_lines + bottomcorner_lines 1 topcorner_lines 0 bottomcorner_lines 0 none * n 0 if ans is none ans = check_answer topcorner_lines 0 + middle_lines + bottomcorner_lines 1 topcorner_lines 1 bottomcorner_lines 0 none * n 0 if ans is none raise exception answer is none! return  join map str ans 		126 170
def check_answer middle_lines col_lines left right grid rownum if debug print len middle_lines len col_lines len grid rownum if debug print middle_lines col_lines left right grid rownum if rownum == len grid ngrid = list izip * grid if left is none return make_answer ngrid col_lines + right elif right is none return make_answer ngrid left + col_lines else return make_answer ngrid left + col_lines + right if left is none x1 = none else x1 = left rownum if right is none x2 = none else x2 = right rownum if x1 is not none for i in xrange len middle_lines midline = middle_lines i if debug print midline if midline 0 != x1 continue elif midline 0 == x1 and x2 is not none and midline - 1 != x2 continue else grid rownum = midline ans = check_answer middle_lines i + 1 col_lines + middle_lines i left right grid rownum + 1 if ans is none continue else return ans if debug print check2 return none else for i in xrange len middle_lines midline = middle_lines i if debug print midline if midline - 1 != x2 continue else grid rownum = midline ans = check_answer middle_lines i + 1 col_lines + middle_lines i left right grid rownum + 1 if ans is none continue else return ans if debug print check3 return none 		25 86
def make_answer ngrid col_lines empty_line = none j = 0 for i in xrange len ngrid if j == len col_lines or ngrid i != col_lines j if empty_line is none empty_line = ngrid j else return none else j += 1 return empty_line 		11 22
