def components graph colors = none for x in range len graph def dfs pt col if colors pt != none return colors pt = col for ch in graph pt dfs ch col col = - 1 for pt in range len graph if colors pt == none col += 1 dfs pt col out = for x in range col + 1 for pt in range len graph out colors pt append pt return out 		10 30
def findchain pos noway maxdepth = 0 for ch in invgraph pos if ch == noway continue maxdepth = max maxdepth findchain2 ch return maxdepth + 1 		63 69
def symgraph graph out = dict for i in range len graph out i = for i in range len graph out i append graph i out graph i append i return out 		1 8
def cycle graph component seen = false for x in graph def dfs pos parent if seen pos return 1 pos false seen pos = true onceparent = true for ch in graph pos if ch == parent and onceparent onceparent = false continue out = dfs ch pos if out != none if pos == out 1 0 or out 2 return out 0 out 1 true return out 0 + 1 out 1 + pos false return none return dfs component 0 none - 1 		32 50
def chainlen graph couple assert len couple == 2 invgraph = for x in graph for i in range len graph invgraph graph i append i seen = false * len graph def findchain2 pos if len invgraph pos == 0 return 1 return max findchain2 x for x in invgraph pos + 1 def findchain pos noway maxdepth = 0 for ch in invgraph pos if ch == noway continue maxdepth = max maxdepth findchain2 ch return maxdepth + 1 return findchain couple 0 couple 1 + findchain couple 1 couple 0 		52 71
def solve input descr = input strip split  graph = int x - 1 for x in descr sym = symgraph graph comps = components sym compcycles = for comp in comps compcycles append cycle sym comp sumof2chains = 0 for clen couple in compcycles if clen == 2 sumof2chains += chainlen graph couple longestcycle = max x 0 for x in compcycles return max sumof2chains longestcycle 		73 91
def findchain2 pos if len invgraph pos == 0 return 1 return max findchain2 x for x in invgraph pos + 1 		59 62
def dfs pt col if colors pt != none return colors pt = col for ch in graph pt dfs ch col 		13 19
def dfs pos parent if seen pos return 1 pos false seen pos = true onceparent = true for ch in graph pos if ch == parent and onceparent onceparent = false continue out = dfs ch pos if out != none if pos == out 1 0 or out 2 return out 0 out 1 true return out 0 + 1 out 1 + pos false return none 		34 49
