def solution n bffs partitions = result = 0 validindices = chainparams = relevantchildren = for i in xrange n retval params = getchainstartingfromchild i bffs if retval validindices append i chainparams i = params 0 relevantchildren i = params 1 params 2 else result = max result params counter = n l = len validindices for i1 in xrange l index1 = validindices i1 for i2 in xrange i1 + 1 l index2 = validindices i2 if relevantchildren index1 0 == relevantchildren index2 1 and relevantchildren index1 1 == relevantchildren index2 0 validindices append counter chainparams counter = chainparams index1 union chainparams index2 counter += 1 return max result buildupoptimalcircle validindices chainparams 		100 125
def getchainstartingfromchild i bffs firstchild = i secondtolastchild = i lastchild = bffs i children = set firstchild lastchild while lastchild != bffs bffs lastchild if bffs lastchild in children if bffs lastchild == firstchild if len children == 2 return true children secondtolastchild lastchild else return false len children else return false 0 secondtolastchild = lastchild lastchild = bffs lastchild children add lastchild secondtolastchild = lastchild lastchild = bffs lastchild children add lastchild return true children secondtolastchild lastchild 		9 29
def buildupoptimalcircle validindices chainparams if len validindices == 0 return 0 validtransitions = for i in xrange len validindices index1 = validindices i validtransitions index1 = for j in xrange i + 1 len validindices index2 = validindices j if len chainparams index1 intersection chainparams index2 == 0 validtransitions index1 append index2 validtransitionsassets = for validindex in validindices validtransitionsassets validindex = set validtransitions validindex result = 0 selectedindexes = validindices 0 relativeindexes = 0 while true result = max result sum len chainparams x for x in selectedindexes appendedanother = false lastindex = selectedindexes - 1 for i in xrange len validtransitions lastindex success = true for selectedindex in selectedindexes if validtransitions lastindex i in validtransitionsassets selectedindex continue success = false break if success selectedindexes append validtransitions lastindex i relativeindexes append i appendedanother = true if not appendedanother while true if len selectedindexes == 1 if relativeindexes 0 == len validindices - 1 return result else relativeindexes 0 = relativeindexes 0 + 1 selectedindexes 0 = validindices relativeindexes 0 break previousrelativeindex = relativeindexes - 1 relativeindexes pop selectedindexes pop newlastelement = selectedindexes - 1 problemfixed = false for x in xrange previousrelativeindex + 1 len validtransitions newlastelement problemfixed = true for selectedindex in selectedindexes if validtransitions newlastelement x in validtransitionsassets selectedindex continue problemfixed = false break if problemfixed selectedindexes append validtransitions newlastelement x relativeindexes append x break if problemfixed break return result 		31 98
