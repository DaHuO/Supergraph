def flatten l return itertools chain from_iterable l 		4 5
def test x n v pos if v >= len x t = list map list zip * x for i in n if i not in t raise nameerror fail return x for i in n if x v pos == i pos try t = x t v = i nn = n nn remove i return test t nn v + 1 pos except nameerror continue raise nameerror fail 		7 24
def output_res caseno output f s = case #{}: {} format caseno output print s f write s + \n 		83 86
def solve n v x = res = n for i in range 0 v t = for j in range 0 v t append x x append t pos = 0 c = 0 v = min flatten n for i in n if i 0 == v c += 1 t = for i in n if i 0 == v xx = x xx 0 = i xx = list map list zip * xx nn = n nn remove i try t = test xx nn 0 pos break except nameerror if c == 1 for j in nn for h in range 1 len j if i h == j 0 cc = xx cc h = j cc = list map list zip * cc bb = n bb remove i try t = test cc bb 1 h break except nameerror continue continue z = for x in t z append x t = map list zip * t for x in t z append x for x in res z remove x return  join map str z 0 		28 80
