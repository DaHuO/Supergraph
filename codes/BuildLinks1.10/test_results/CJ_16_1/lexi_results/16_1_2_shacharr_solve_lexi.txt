def step_down scored_board remaining_items posted_lists wildcard_used if len remaining_items == 0 return scored_board l = remaining_items 0 for d in true false val = is_good_addition scored_board l posted_lists d d if val new_list = copy deepcopy posted_lists new_list d += 1 res = step_down generate_good_addition scored_board l posted_lists d d remaining_items 1 new_list wildcard_used if len res != 0 return res if not wildcard_used for d in true false new_list = copy deepcopy posted_lists new_list d += 1 if new_list d > len scored_board continue res = step_down scored_board remaining_items new_list true if len res != 0 return res return 		53 79
def is_good_addition score_board lst start_coord direction value = 1 if start_coord >= len score_board return false for i v in enumerate lst if direction if score_board i start_coord != v and score_board i start_coord != 0 return false for j in range len score_board if score_board j start_coord == v and j != i return false if score_board i j == v and j != start_coord return false if score_board i start_coord != 0 value += 1 else if score_board start_coord i != v and score_board start_coord i != 0 return false for j in range len score_board if score_board start_coord j == v and j != i return false if score_board j i == v and j != start_coord return false if score_board start_coord i != 0 value += 1 return value 		4 41
def align_lists possible_lists test_dir skip_first sorted_lists = sorted possible_lists score_board = list 0 * len sorted_lists 0 for x in range len sorted_lists 0 return step_down score_board sorted_lists 0 0 false 		82 91
def main it = fileinput input num_cases = int it next for i in range 1 num_cases + 1 size = int it next collect = for n in range 2 * size - 1 collect append int x for x in it next split full = align_lists collect 0 false assert len full > 0 full = sorted gen_lines full collect = sorted collect collect append none for x y in zip full collect if x != y print case #%d: %s % i  join str v for v in x break 		100 121
def gen_lines board collect = for x in range len board collect append board x y for y in range len board collect append board y x for y in range len board return collect 		93 98
def generate_good_addition score_board lst start_coord direction score_board = copy deepcopy score_board for i v in enumerate lst if direction score_board i start_coord = v else score_board start_coord i = v return score_board 		43 50
