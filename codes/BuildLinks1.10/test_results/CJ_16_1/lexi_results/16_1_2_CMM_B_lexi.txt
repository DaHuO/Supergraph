def check grid s isrow idx haszero = false for i in range len grid if isrow if grid idx i == s i pass elif grid idx i == 0 haszero = true if idx == 0 or s i > grid idx - 1 i and idx == len grid - 1 or s i < grid idx + 1 i pass else return false else if grid i idx == 0 haszero = true if grid i idx == s i or grid i idx == 0 pass else return false if grid i idx == s i pass elif grid i idx == 0 haszero = true if idx == 0 or s i > grid i idx - 1 and idx == len grid - 1 or s i < grid i idx + 1 pass else return false return true 		3 31
def recurse grid rc n rrr ccc if zz grid == false and len rc == 0 return grid for k in rc yes = false for idx in range n test = check grid k false idx if test and ccc idx == false yes = true test = check grid k true idx if test and rrr idx == false yes = true if not yes return false for idx in range n test = check grid rc 0 false idx if test and ccc idx == false ng = row for row in grid for j in range len grid ng j idx = rc 0 j rrrr = rrr cccc = ccc cccc idx = true q = recurse ng rc 1 n rrrr cccc if q != false return q test = check grid rc 0 true idx if test and rrr idx == false ng = row for row in grid for j in range len grid ng idx j = rc 0 j rrrr = rrr cccc = ccc rrrr idx = true q = recurse ng rc 1 n rrrr cccc if q != false return q return false 		39 89
def solve rc n grid = 0 * n for i in range n grid 0 = rc 0 c = recurse grid rc 1 n false * n false * n s = for i in range n s append tuple c i s append tuple c j i for j in range n for i in rc j = tuple i s remove j return s 0 		93 111
def zz grid for i in grid for j in i if j == 0 return true else return false 		33 37
