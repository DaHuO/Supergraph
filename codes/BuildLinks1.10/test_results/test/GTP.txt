& 1		<<= 1		Check 1		GetResult 1		PR 1		PS 1		RS 1		WINNER 1		main 1		map 1		min 1		split 1		sum 1		valid 1		works 1		x 1		{} 1		!= 2		#{}: 2		-= 2		/ 2		< 2		Case 2		None 2		T 2		any 2		format 2		get_counts 2		has_winner 2		input 2		int 2		ordering 2		print 2		row 2		solve 2		v 2		// 3		break 3		case_num 3		next 3		not 3		winner 3		False 4		N 4		True 4		find_winner 4		else 5		% 6		+= 6		3 6		c 6		counts 6		o 6		range 6		IMPOSSIBLE 7		n 7		out 7		while 7		> 8		curr 8		moves 8		result 8		b 9		def 9		t 9		a 10		for 10		in 10		- 11		S 12		append 12		elif 12		len 12		P 13		R 13		choice 13		l2 13		nx 13		p 16		r 16		s 18		* 21		and 22		0 23		L 24		return 24		if 25		+ 28		l 32		i 34		2 36		= 37		== 42		1 44		
and elif curr result in counts moves append out nx % for + * - while 1 0 3 2 if = > return == s L len choice P S R def IMPOSSIBLE else a c b i l o n p range r l2 t += 