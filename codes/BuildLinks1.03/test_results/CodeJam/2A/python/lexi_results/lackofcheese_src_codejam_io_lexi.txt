from __future__ import print_function 		1
import os 		3
import sys 		4
import inspect 		5
import subprocess 		6
import zipfile 		7
class MultiOutput object 		9
def __init__ self files 		19
self _files = list files 		21
def close self 		23
for f in self _files 		25
if f != sys stdout 		26
f close 		27
def write self data 		29
for f in self _files 		31
f write data 		32
if f == sys stdout 		34
f flush 		35
def process_input pfun p0 = lambda f int f readline None 		37
module_path = None argv = None 		38
if not argv 		59
argv = sys argv 1 		60
options = set 		62
for arg in argv 		63
if arg startswith - 		64
argv remove arg 		65
options update arg 1 		66
filename = argv 0 if argv else test.in 		67
targets = 		69
if d in options 		70
root ext = os path splitext filename 		71
if ext == .out 		72
root += .out 		73
targets append open root + .out w 		74
if not targets or c in options 		75
targets append sys stdout 		76
if n in options 		77
module_path = None 		78
f_out = MultiOutput targets 		79
with open filename as f_in 		81
num_cases other_data = p0 f_in 		82
for case_no in range 1 num_cases + 1 		83
pfun f_in f_out case_no other_data 		84
f_out close 		85
if module_path is not None 		87
make_archive module_path 		88
def make_archive module_path 		90
paths = set 		91
target = os path join os path split module_path 0 src.zip 		92
paths add os path realpath module_path 		93
for module_name in sys modules 		94
try 		95
path = inspect getsourcefile sys modules module_name 		96
if path startswith os environ GOOGLE_DRIVE 		97
paths add path 		98
except TypeError AttributeError 		99
pass 		100
print file = sys stderr 		101
try 		102
os remove target 		103
print Deleted {} - remaking format target file = sys stderr 		104
except OSError 		105
pass 		106
archive = zipfile ZipFile target w 		108
for path in paths 		109
filename = os path basename path 		110
archive write path filename 		111
print Added {} format filename file = sys stderr 		112
archive close 		113
