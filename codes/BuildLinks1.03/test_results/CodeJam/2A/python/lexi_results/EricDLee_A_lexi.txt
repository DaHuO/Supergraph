import os sys math fractions 		9
t = 		11
P PR 		12
R RS 		13
S PS 		14
def s N R P S 		17
if N == 0 		18
if P > 0 		19
return P 		20
elif R > 0 		21
return R 		22
else 		23
return S 		24
pr = P + R - S / 2 		25
ps = P + S - R / 2 		26
rs = R + S - P / 2 		27
if pr < 0 or ps < 0 or rs < 0 		28
return False 		29
last = s N - 1 rs pr ps 		30
if not last 		31
return False 		32
return  join t x for x in last 		33
def solve_case next 		36
N R P S = int n for n in next split 		38
ret = s N R P S 		39
if not ret 		40
return IMPOSSIBLE 		41
for n in range 1 N 		42
i = 2 ** n 		43
j = 2 ** N - n - 1 		44
b =  		45
for k in range j 		46
step = 2 ** N * k / j 		47
b +=  join sorted ret step step + i ret step + i step + 2 * i 		48
ret = b 		49
return ret 		50
def solve next emit 		59
cases = int next 		60
for case in range 1 cases + 1 		61
sol = solve_case next 		62
if isinstance sol list 		63
emit Case #{0}: format case 		64
for line in sol 		65
emit str line 		66
else 		67
emit Case #{0}: {1} format case str sol 		68
print {0} / {1} format case cases 		69
if __name__ == __main__ 		71
if len sys argv == 1 		72
print Usage: python {0} small format sys argv 0 		73
exit 		74
prefix = sys argv 0 - 3 + - + sys argv 1 		75
suffix = .in 		76
for file in os listdir os path dirname os path realpath __file__ 		77
if file startswith prefix and file endswith suffix 		78
print Loading  + file 		79
file_in = open file r 		80
file_out = open file - 3 + .out w 		81
solve lambda file_in readline strip lambda x file_out write str x + \n 		82
file_in close 		83
file_out close 		84
print Complete. 		85
