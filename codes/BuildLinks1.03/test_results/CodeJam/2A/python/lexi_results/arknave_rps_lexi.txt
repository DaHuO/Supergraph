def winner a b 		1
if a > b 		2
return winner b a 		3
if a == P and b == R 		4
return P 		5
if a == P and b == S 		6
return S 		7
if a == R and b == S 		8
return R 		9
def valid moves 		11
while len moves > 1 		12
n =  		13
for i in range 0 len moves 2 		14
if moves i == moves i + 1 		15
return False 		16
n += winner moves i moves i + 1 		17
moves = n 		18
return True 		19
def get_counts p r s 		21
counts = p r s 		22
while p + r + s > 1 		23
p s r = p + r - s // 2 p - r + s // 2 r - p + s // 2 		24
counts append p r s 		25
return counts 		27
def solve l n 		29
out =  		30
if l 0 		31
out = P 		32
elif l 1 		33
out = R 		34
else 		35
out = S 		36
for x in range n 		38
nx =  		39
for c in out 		40
if c == P 		41
nx += PR 		42
elif c == R 		43
nx += RS 		44
else 		45
nx += PS 		46
if len nx & len nx - 1 == 0 		47
l = 1 		48
while l < len nx 		49
a = - 2 * l 		50
b = - l 		51
nx = nx a + min nx a nx b + nx a b 		53
l <<= 1 		54
out = nx 		55
return out 		57
def main 		59
T = int input 		60
for case_num in range 1 T + 1 		61
n r p s = map int input split 		62
works = True 		63
counts = get_counts p r s 		64
if any any v < 0 for v in row for row in counts 		65
print Case #{}: IMPOSSIBLE format case_num 		66
else 		67
print Case #{}: {} format case_num solve counts - 1 n 		69
main 		71
