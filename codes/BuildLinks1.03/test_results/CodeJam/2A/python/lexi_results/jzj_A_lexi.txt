game = 		1
fight_table = - 1 * 8 for y in xrange 8 		2
def to_string state 		5
s =  		6
if state & 1 		7
s += P 		8
if state & 2 		9
s += R 		10
if state & 4 		11
s += S 		12
return state 		13
def to_state string 		16
result = 0 		17
for c in string 		18
if c == P 		19
result += 1 		20
elif c == R 		21
result += 2 		22
elif c == S 		23
result += 4 		24
return result 		25
def winner a b 		28
if a == b 		29
return  		30
if a > b 		31
a b = b a 		32
if a == P and b == R 		34
return P 		35
if a == P and b == S 		36
return S 		37
if a == R and b == S 		38
return R 		39
raise Exception 		40
def fight state1 state2 		43
if fight_table state1 state2 != - 1 		44
return fight_table state1 state2 		45
s1 = to_string state1 		46
s2 = to_string state2 		47
result = set 		48
for c1 in s1 		49
for c2 in s2 		50
result add winner c1 c2 		51
result remove  		52
return to_state  join result 		53
def get_game n p r res 		56
s = 1 << n - p - r 		57
if s < 0 		58
raise Exception 		59
if n p r res in game 		60
return game n p r res 		61
result = None 		62
if n == 0 		63
if p == 1 and res == P 		64
return P 		65
elif r == 1 and res == R 		66
return R 		67
elif s == 1 and res == S 		68
return S 		69
else 		70
return None 		71
n0 = n - 1 		72
for p0 in xrange p - 1 - 1 		73
for r0 in xrange r - 1 - 1 		74
s0 = 1 << n0 - p0 - r0 		75
if s0 < 0 or s0 > s 		76
continue 		77
for left_res in PRS 		78
for right_res in PRS 		79
if winner left_res right_res == res 		80
first_result = get_game n0 p0 r0 left_res 		81
second_result = get_game n0 p - p0 r - r0 right_res 		82
if first_result is None or second_result is None 		83
continue 		84
new_result = first_result + second_result 		85
if result is None 		86
result = new_result 		87
else 		88
result = min result new_result 		89
game n p r res = result 		90
return result 		91
def solve case_no 		94
n r p s = map int raw_input split 		95
answer = None 		96
for res in PRS 		97
cur_game = get_game n p r res 		98
if cur_game is not None 		99
if answer is None 		100
answer = cur_game 		101
else 		102
answer = min answer cur_game 		103
if answer is None 		104
answer = IMPOSSIBLE 		105
print Case #%d: %s % case_no answer 		106
def main 		109
T = int raw_input 		110
for case_no in xrange 1 T + 1 		111
solve case_no 		112
main 		115
