from common import * 		3
best = 0 1 0 P 1 0 0 R 0 0 1 S 		5
for n in range 1 13 		7
b = best n - 1 		8
best append 		9
keys = list b keys 		10
for k1 in keys 		11
for k2 in keys 		12
if k1 == k2 		13
continue 		14
k3 = k1 0 + k2 0 k1 1 + k2 1 k1 2 + k2 2 		15
if b k1 < b k2 		16
best n k3 = b k1 + b k2 		17
else 		18
best n k3 = b k2 + b k1 		19
def solvable p r s 		21
n = p + r + s 		22
if n == 1 		23
return P * p + R * r + S * s 		24
k = n // 2 		25
if p > k or r > k or s > k 		26
return False 		27
res = solvable p + r - k r + s - k s + p - k 		28
if res == False 		29
return res 		30
res2 =  		31
for c in res 		32
if c == P 		33
res2 += PR 		34
elif c == R 		35
res2 += RS 		36
elif c == S 		37
res2 += PS 		38
return res2 		39
def main casenum 		41
n r p s = readints 		42
if r p s in best n 		43
writecase casenum best n r p s 		44
else 		45
writecase casenum IMPOSSIBLE 		46
run main 		48
