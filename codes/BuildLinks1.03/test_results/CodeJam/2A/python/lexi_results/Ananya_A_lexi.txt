import fileinput 		1
winner = - 1 0 2 0 - 1 1 2 1 - 1 		3
other_index_arr = - 1 2 1 2 - 1 0 1 0 - 1 		4
int_to_char = P R S 		5
win_map = 		6
win_map P = PR 		7
win_map S = PS 		8
win_map R = RS 		9
def get_init_string last N 		11
if N == 0 		12
return last 		13
else 		14
new_one = win_map last 		15
s1 = get_init_string new_one 0 N - 1 		16
s2 = get_init_string new_one 1 N - 1 		17
if s1 < s2 		18
return s1 + s2 		19
else 		20
return s2 + s1 		21
def solve N counts 		23
while sum counts > 1 		25
min_index = counts index min counts 		26
max_index = counts index max counts 		27
assert min_index != max_index 		28
new_counts = 0 0 0 		30
other_index = other_index_arr min_index max_index 		31
assert other_index != - 1 and other_index != min_index and other_index != max_index 		32
amount = counts max_index - counts other_index 		33
if amount > counts min_index 		34
return IMPOSSIBLE 		35
counts min_index -= amount 		37
counts max_index -= amount 		38
new_counts winner max_index min_index += amount 		39
if counts min_index % 2 == 1 		40
return IMPOSSIBLE 		41
amount = counts min_index / 2 		43
new_counts winner min_index max_index += amount 		44
new_counts winner min_index other_index += amount 		45
counts max_index -= amount 		46
counts other_index -= amount 		47
assert counts max_index == counts other_index 		49
new_counts winner max_index other_index = counts max_index 		50
counts = new_counts 		51
last = counts index max counts 		53
assert counts last == 1 		54
answer = get_init_string int_to_char last N 		55
return answer 		56
num_cases = int raw_input 		58
for case in range 1 num_cases + 1 		59
inputs = raw_input split 		60
N = int inputs 0 		61
R = int inputs 1 		62
P = int inputs 2 		63
S = int inputs 3 		64
answer = solve N P R S 		65
print Case #%d: %s % case answer 		66
