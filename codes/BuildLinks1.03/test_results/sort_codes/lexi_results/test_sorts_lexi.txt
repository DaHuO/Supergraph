from __future__ import print_function 		7
import sys 		9
import random 		10
import pysort 		11
from timeit import timeit 		13
if sys version_info 0 < 3 		15
range = xrange 		16
def perform_swaps sequence n 		19
for _ in range n 		21
length = len sequence 		22
i = random randrange length 		23
j = i + 1 % length 		24
sequence i sequence j = sequence j sequence i 		25
return sequence 		26
def test sort sequence count = 100 		29
builtin = sorted sequence 		31
copy = sequence 		32
testrun = sort copy 		33
recieved = testrun if testrun else copy 		34
template = {} sort worked incorrectly. \nRecieved: {} \nExpected: {} 		35
error_message = template format sort __name__ recieved builtin 		36
assert testrun == builtin or copy == builtin error_message 		37
time = timeit lambda sort sequence number = count / count 		38
print {:>7.5f} : {} format time sort __name__ 		39
def test_all list_of_functions test_sequence prompt =  count = 100 		42
print prompt 		44
for sort in list_of_functions 		45
test sort test_sequence count 		46
print 		47
def main 		50
my_list = random randint 0 100 for _ in range 100 		52
almost_sorted = perform_swaps my_list 5 		53
already_sorted = sorted my_list 		54
all_same = 1 for _ in range 100 		55
sorts = sorted 		56
pysort Bubble bubble_naive 		57
pysort Bubble bubble_optimized 		58
pysort Bubble bubble_optimized_with_flag 		59
pysort Bubble bubble_final_position 		60
pysort Insertion insertion 		61
pysort Insertion insertion_optimized 		62
pysort Insertion insertion_optimized_alt 		63
pysort Quick quick_random 		64
pysort Quick quick_median 		65
pysort Quick quick_inplace_random 		66
pysort Quick quick_inplace_median 		67
pysort Quick quick_inplace_repeat 		68
pysort Merge merge_sort 		69
pysort Heap heap_sort 		70
test_all sorts my_list With a random shuffled list: 10 		71
test_all sorts almost_sorted With a list that is almost sorted: 10 		72
test_all sorts already_sorted With a list that is already sorted: 10 		73
test_all sorts all_same With a list containing all the same item: 10 		74
if __name__ == __main__ 		77
main 		78
