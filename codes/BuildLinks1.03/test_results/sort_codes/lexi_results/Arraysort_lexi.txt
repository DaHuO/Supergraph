def sorter myArray smallsize = 4 		4
def subsort array insertsize = smallsize 		14
if len array <= 1 		16
return array 		17
elif len array <= insertsize 		18
return insert_sort array 		19
else 		20
mid = len array // 2 		21
return mergesort subsort array mid subsort array mid 		22
def mergesort left right 		24
merged_list = list 		32
i = 0 		33
j = 0 		34
while i < len left and j < len right 		35
if left i < right j 		36
merged_list append left i 		37
i += 1 		38
else 		39
merged_list append right j 		40
j += 1 		41
merged_list extend left i 		42
merged_list extend right j 		43
return merged_list 		44
def insert_sort array 		46
for i in range 1 len array 		54
j = i 		55
while j != 0 and array j < array j - 1 		56
array j - 1 array j = array j array j - 1 		57
j -= 1 		58
return array 		59
return subsort myArray insertsize = smallsize 		61
if __name__ == __main__ 		65
from time import clock 		67
test = list reversed range 100 		68
def fastest_time array 		69
fastest_time = 999999999999 		73
fastest_len = 0 		74
for i in range 2 len test 		75
timer = 0 		76
testnum = 100 		77
for t in range testnum 		78
start = clock 		79
sorter test i 		80
stop = clock 		81
timer += stop - start 		82
timer = timer / testnum * 1000 		83
if timer < fastest_time 		84
fastest_time = timer 		85
fastest_len = i 		86
print Insert Sort on size {0} arrays took {1} time format i timer 		87
print Fastest was {0} with a time of {1} format fastest_len fastest_time 		88
