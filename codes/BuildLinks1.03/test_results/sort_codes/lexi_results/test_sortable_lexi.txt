import random 		1
import libpry 		2
import cStringIO 		3
from libsortvis import sortable algos 		4
class uTrackList libpry AutoTree 		7
def test_simple self 		8
l = 1 2 3 		9
t = sortable TrackList l 		10
assert t 0 path == 0 		11
t 0 t 1 = t 1 t 0 		12
t log 		13
assert t 1 path == 0 1 		14
class uAlgorithms libpry AutoTree 		17
N = 2 ** 5 		19
def test_bitonicsort self 		20
algos bitonicsort bitonicsort sortable TrackList range 2 ** 1 		21
algos bitonicsort bitonicsort sortable TrackList range 2 ** 3 		22
libpry raises AssertionError algos bitonicsort bitonicsort range 3 		23
libpry raises AssertionError algos bitonicsort bitonicsort range 9 		24
def test_all self 		26
seqs = 		27
range self N 		28
list reversed range self N 		29
l = range self N 		32
l 0 l - 1 = l - 1 l 0 		33
seqs append l 		34
for i in range 5 		36
l = range self N 		37
random shuffle l 		38
seqs append l 		39
for seq in seqs 		41
for k v in algos algorithms items 		42
l = sortable TrackList seq 		43
v l 		44
if not x i for x in l == range self N 		45
print l 		46
raise AssertionError %s failed to sort. % k 		47
class uReadPaths libpry AutoTree 		50
def test_read_paths self 		51
s = cStringIO StringIO 		52
1 2 3\n 		53
2 1 3\n 		54
r = sortable read_paths s 		56
for i in r 		57
if i i == 1 		58
assert i path == 0 1 		59
elif i i == 2 		60
assert i path == 1 0 		61
elif i i == 3 		62
assert i path == 2 2 		63
tests = 		66
uTrackList 		67
uAlgorithms 		68
uReadPaths 		69
