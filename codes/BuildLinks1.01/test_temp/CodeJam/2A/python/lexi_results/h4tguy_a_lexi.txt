def solve ( n , r , p , s ) : 		1
poss = [ ] 		2
for i in "RPS" : 		3
m = lex ( i , n ) 		4
cr = cp = cs = 0 		5
for j in m : 		6
if j == 'R' : 		7
cr += 1 		8
if j == 'S' : 		9
cs += 1 		10
if j == 'P' : 		11
cp += 1 		12
if ( cr == r and cs == s and cp == p ) : 		13
poss . append ( m ) 		14
if ( len ( poss ) == 0 ) : 		15
return "IMPOSSIBLE" 		16
return min ( poss ) 		17
beats = { 		19
"R" : "S" , 		20
"S" : "P" , 		21
"P" : "R" 		22
} 		23
def lex ( c , n ) : 		25
if n == 0 : 		26
return c 		27
p1 = lex ( c , n - 1 ) 		28
p2 = lex ( beats [ c ] , n - 1 ) 		29
if p1 < p2 : 		30
return p1 + p2 		31
return p2 + p1 		32
t = int ( raw_input ( ) ) 		34
for cas in xrange ( 1 , t + 1 ) : 		35
ans = solve ( * map ( int , raw_input ( ) . split ( ) ) ) 		36
print "Case #{}: {}" . format ( cas , ans ) 		37
