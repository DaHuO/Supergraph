def down_one_round ( players ) : 		3
new_players = [ ] 		4
for player in players : 		5
if player == "P" : 		6
new_players . append ( "P" ) 		7
new_players . append ( "R" ) 		8
if player == "R" : 		9
new_players . append ( "R" ) 		10
new_players . append ( "S" ) 		11
if player == "S" : 		12
new_players . append ( "P" ) 		13
new_players . append ( "S" ) 		14
return "" . join ( new_players ) 		15
def rps_sort ( answer ) : 		17
group_size = 4 		20
while group_size <= len ( answer ) : 		21
new_answer = [ ] 		23
for i in range ( len ( answer ) / group_size ) : 		24
group_pieces = [ answer [ i * group_size : i * group_size + group_size / 2 ] , answer [ i * group_size + group_size / 2 : ( i + 1 ) * group_size ] ] 		25
if group_pieces [ 1 ] < group_pieces [ 0 ] : 		26
temp = group_pieces [ 0 ] 		27
group_pieces [ 0 ] = group_pieces [ 1 ] 		28
group_pieces [ 1 ] = temp 		29
new_answer += group_pieces 		30
answer = "" . join ( new_answer ) 		33
group_size *= 2 		34
return answer 		36
for i in range ( 1 , 13 ) : 		39
print ( "[" ) 		41
for start in [ "P" , "R" , "S" ] : 		42
answer = start 		43
for j in range ( i ) : 		44
answer = down_one_round ( answer ) 		45
answer = rps_sort ( answer ) 		46
new_answer = [ answer . count ( "P" ) , answer . count ( "R" ) , answer . count ( "S" ) ] 		47
answer = new_answer 		48
print ( '\"' + str ( answer ) + '\",' ) 		49
print ( "]," ) 		50
