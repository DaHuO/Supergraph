import sys 		1
cmb = { 		3
'P' : 'PR' , 		4
'S' : 'PS' , 		5
'R' : 'RS' 		6
} ; 		7
solutions = dict ( ) 		9
for result in [ 'P' , 'S' , 'R' ] : 		11
key = ( result . count ( 'R' ) , result . count ( 'P' ) , result . count ( 'S' ) ) 		12
solutions [ key ] = result 		13
for i in range ( 13 ) : 		15
next = '' 		16
for r in result : 		18
next += cmb [ r ] ; 		19
result = next ; 		21
key = ( result . count ( 'R' ) , result . count ( 'P' ) , result . count ( 'S' ) ) 		23
solutions [ key ] = result ; 		24
def treesort ( str ) : 		26
if len ( str ) > 1 : 		27
mid = len ( str ) // 2 		28
a = treesort ( str [ mid : ] ) 		29
b = treesort ( str [ : mid ] ) 		30
if a < b : 		32
return a + b 		33
return b + a 		34
return str 		35
fin = open ( sys . argv [ 1 ] , 'r' ) if len ( sys . argv ) > 1 else sys . stdin 		37
T = int ( fin . readline ( ) ) 		39
for t in range ( 1 , T + 1 ) : 		41
N , R , P , S = map ( int , fin . readline ( ) . split ( ' ' ) ) 		42
key = ( R , P , S ) 		44
if key in solutions : 		45
str = solutions [ key ] 		46
print ( "Case #{}: {} " . format ( t , treesort ( str ) ) ) 		48
else : 		49
print ( "Case #{}: IMPOSSIBLE" . format ( t ) ) 		50
