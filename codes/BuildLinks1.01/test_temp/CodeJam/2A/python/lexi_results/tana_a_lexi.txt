tt = int ( raw_input ( ) ) 		1
def minz ( a1 , a2 ) : 		2
if a1 is None : 		3
return a2 		4
elif a2 is None : 		5
return a1 		6
else : 		7
return min ( a1 , a2 ) 		8
for t in xrange ( 1 , tt + 1 ) : 		10
n , rr , pp , ss = map ( int , raw_input ( ) . strip ( ) . split ( ) ) 		11
pow3 = [ 1 ] 		12
for i in xrange ( 1 , 1 << n ) : 		13
pow3 . append ( pow3 [ i - 1 ] * 3 ) 		14
xp = [ ] 		15
xr = [ ] 		16
xs = [ ] 		17
for i in xrange ( n + 1 ) : 		18
yp = [ ] 		19
yr = [ ] 		20
ys = [ ] 		21
for j in xrange ( ( 1 << n ) + 1 ) : 		22
yp . append ( [ None ] * ( ( 1 << n ) + 1 ) ) 		23
yr . append ( [ None ] * ( ( 1 << n ) + 1 ) ) 		24
ys . append ( [ None ] * ( ( 1 << n ) + 1 ) ) 		25
xp . append ( yp ) 		26
xr . append ( yr ) 		27
xs . append ( ys ) 		28
xp [ 0 ] [ 1 ] [ 0 ] = 0 		29
xr [ 0 ] [ 0 ] [ 1 ] = 1 		30
xs [ 0 ] [ 0 ] [ 0 ] = 2 		31
for i in xrange ( 1 , n + 1 ) : 		32
for j in xrange ( ( 1 << i ) + 1 ) : 		33
for k in xrange ( ( 1 << i ) + 1 ) : 		34
gp = None 		35
gr = None 		36
gs = None 		37
for j1 in xrange ( j + 1 ) : 		38
for k1 in xrange ( k + 1 ) : 		39
j2 = j - j1 		40
k2 = k - k1 		41
if ( xp [ i - 1 ] [ j1 ] [ k1 ] is not None ) and ( xr [ i - 1 ] [ j2 ] [ k2 ] is not None ) : 		42
gp = minz ( gp , xp [ i - 1 ] [ j1 ] [ k1 ] * pow3 [ 1 << ( i - 1 ) ] + xr [ i - 1 ] [ j2 ] [ k2 ] ) 		43
if ( xp [ i - 1 ] [ j1 ] [ k1 ] is not None ) and ( xs [ i - 1 ] [ j2 ] [ k2 ] is not None ) : 		44
gs = minz ( gs , xp [ i - 1 ] [ j1 ] [ k1 ] * pow3 [ 1 << ( i - 1 ) ] + xs [ i - 1 ] [ j2 ] [ k2 ] ) 		45
if ( xr [ i - 1 ] [ j1 ] [ k1 ] is not None ) and ( xp [ i - 1 ] [ j2 ] [ k2 ] is not None ) : 		46
gp = minz ( gp , xr [ i - 1 ] [ j1 ] [ k1 ] * pow3 [ 1 << ( i - 1 ) ] + xp [ i - 1 ] [ j2 ] [ k2 ] ) 		47
if ( xr [ i - 1 ] [ j1 ] [ k1 ] is not None ) and ( xs [ i - 1 ] [ j2 ] [ k2 ] is not None ) : 		48
gr = minz ( gr , xr [ i - 1 ] [ j1 ] [ k1 ] * pow3 [ 1 << ( i - 1 ) ] + xs [ i - 1 ] [ j2 ] [ k2 ] ) 		49
if ( xs [ i - 1 ] [ j1 ] [ k1 ] is not None ) and ( xp [ i - 1 ] [ j2 ] [ k2 ] is not None ) : 		50
gs = minz ( gs , xs [ i - 1 ] [ j1 ] [ k1 ] * pow3 [ 1 << ( i - 1 ) ] + xp [ i - 1 ] [ j2 ] [ k2 ] ) 		51
if ( xs [ i - 1 ] [ j1 ] [ k1 ] is not None ) and ( xr [ i - 1 ] [ j2 ] [ k2 ] is not None ) : 		52
gr = minz ( gr , xs [ i - 1 ] [ j1 ] [ k1 ] * pow3 [ 1 << ( i - 1 ) ] + xr [ i - 1 ] [ j2 ] [ k2 ] ) 		53
xp [ i ] [ j ] [ k ] = gp 		54
xr [ i ] [ j ] [ k ] = gr 		55
xs [ i ] [ j ] [ k ] = gs 		56
anx = [ ] 		57
if xp [ n ] [ pp ] [ rr ] is not None : 		58
anx . append ( xp [ n ] [ pp ] [ rr ] ) 		59
if xr [ n ] [ pp ] [ rr ] is not None : 		60
anx . append ( xr [ n ] [ pp ] [ rr ] ) 		61
if xs [ n ] [ pp ] [ rr ] is not None : 		62
anx . append ( xs [ n ] [ pp ] [ rr ] ) 		63
if len ( anx ) == 0 : 		64
ans = 'IMPOSSIBLE' 		65
else : 		66
m = min ( anx ) 		67
s = [ ] 		68
for i in xrange ( 1 << i ) : 		69
if m % 3 == 0 : 		70
s . append ( 'P' ) 		71
elif m % 3 == 1 : 		72
s . append ( 'R' ) 		73
else : 		74
s . append ( 'S' ) 		75
m /= 3 		76
ans = '' . join ( s [ : : - 1 ] ) 		77
print 'Case #%d: %s' % ( t , ans ) 		78
