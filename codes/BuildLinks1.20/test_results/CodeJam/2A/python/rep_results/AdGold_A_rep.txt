24 32:
rsp	15	6	28	19
get_tree	18	9	25	16
vals	2	0	41	32
n	3	0	40	31
r	4	0	39	30
p	5	0	38	29
s	6	0	37	28
=	7	0	36	27
tuple	8	0	35	26
map	9	0	34	25
int	10	1	33	24
vals	11	2	32	23
for	12	3	31	22
top	13	4	30	21
in	14	5	29	20
tree	16	7	27	18
=	17	8	26	17
top	19	10	24	15
n	20	11	23	14
if	21	12	22	13
tree	22	13	21	12
count	23	14	20	11
r	24	15	19	10
==	25	16	18	9
r	26	17	17	8
and	27	18	16	7
tree	28	19	15	6
count	29	20	14	5
s	30	21	13	4
==	31	22	12	3
s	32	23	11	2
and	33	24	10	1
tree	34	25	9	0
count	35	26	8	0
p	36	27	7	0
==	37	28	6	0
p	38	29	5	0
return	39	30	4	0
tree	40	31	3	0
return	41	32	2	0
impossible	42	33	1	0

13 21:
get_tree	1	0	37	29
get_tree	12	4	26	18
get_tree	19	11	19	11
if	4	0	34	26
depth	5	0	33	25
==	6	0	32	24
0	7	0	31	23
return	8	0	30	22
top	9	1	29	21
a	10	2	28	20
=	11	3	27	19
top	13	5	25	17
depth	14	6	24	16
-	15	7	23	15
1	16	8	22	14
b	17	9	21	13
=	18	10	20	12
beats	20	12	18	10
top	21	13	17	9
depth	22	14	16	8
-	23	15	15	7
1	24	16	14	6
if	25	17	13	5
a	26	18	12	4
<	27	19	11	3
b	28	20	10	2
return	29	21	9	1
a	30	22	8	0
+	31	23	7	0
b	32	24	6	0
else	33	25	5	0
return	34	26	4	0
b	35	27	3	0
+	36	28	2	0
a	37	29	1	0

