47 54:
nres	11	3	26	18
nres	21	13	16	8
nres	36	28	1	0
res	3	0	34	26
=	4	0	33	25
seq	5	0	32	24
while	6	0	31	23
len	7	0	30	22
res	8	0	29	21
>	9	1	28	20
1	10	2	27	19
=	12	4	25	17
for	13	5	24	16
i	14	6	23	15
in	15	7	22	14
range	16	8	21	13
len	17	9	20	12
res	18	10	19	11
//	19	11	18	10
2	20	12	17	9
append	22	14	15	7
winner	23	15	14	6
res	24	16	13	5
2	25	17	12	4
*	26	18	11	3
i	27	19	10	2
res	28	20	9	1
2	29	21	8	0
*	30	22	7	0
i	31	23	6	0
+	32	24	5	0
1	33	25	4	0
res	34	26	3	0
=	35	27	2	0

40 45:
exception	9	3	19	13
winner	1	0	27	21
a	2	0	26	20
b	3	0	25	19
if	4	0	24	18
a	5	0	23	17
==	6	0	22	16
b	7	1	21	15
raise	8	2	20	14
if	10	4	18	12
a	11	5	17	11
b	12	6	16	10
==	13	7	15	9
p	14	8	14	8
s	15	9	13	7
or	16	10	12	6
a	17	11	11	5
b	18	12	10	4
==	19	13	9	3
s	20	14	8	2
p	21	15	7	1
return	22	16	6	0
s	23	17	5	0
return	24	18	4	0
min	25	19	3	0
a	26	20	2	0
b	27	21	1	0

4 8:
before	11	8	4	1
new_seq	1	0	14	11
seq	2	0	13	10
res	3	0	12	9
=	4	1	11	8
for	5	2	10	7
c	6	3	9	6
in	7	4	8	5
seq	8	5	7	4
res	9	6	6	3
extend	10	7	5	2
c	12	9	3	0
return	13	10	2	0
res	14	11	1	0

22 26:
char_seq	1	0	15	11
chars	3	0	13	9
chars	12	8	4	0
=	5	1	11	7
for	6	2	10	6
c	7	3	9	5
in	8	4	8	4
seq	9	5	7	3
res	10	6	6	2
append	11	7	5	1
c	13	9	3	0
return	14	10	2	0
res	15	11	1	0

10 14:
final_seq	1	0	16	12
n	2	0	15	11
res	3	0	14	10
=	4	0	13	9
0	5	1	12	8
for	6	2	11	7
i	7	3	10	6
in	8	4	9	5
range	9	5	8	4
n	10	6	7	3
res	11	7	6	2
=	12	8	5	1
new_seq	13	9	4	0
res	14	10	3	0
return	15	11	2	0
res	16	12	1	0

16 20:
def	0	0	18	14
counts	1	0	17	13
seq	2	0	16	12
res	3	0	15	11
=	4	0	14	10
0	5	1	13	9
0	6	2	12	8
0	7	3	11	7
for	8	4	10	6
c	9	5	9	5
in	10	6	8	4
seq	11	7	7	3
res	12	8	6	2
c	13	9	5	1
+=	14	10	4	0
1	15	11	3	0
return	16	12	2	0
res	17	13	1	0

57 79:
final_seq	13	0	68	51
cou	15	0	66	49
cou	26	9	55	38
char_seq	29	12	52	35
cou	39	22	42	25
char_seq	42	25	39	22
cou	52	35	29	12
char_seq	55	38	26	9
sort_seq	70	53	11	0
input	9	0	72	55
split	10	0	71	54
seq	11	0	70	53
=	12	0	69	52
n	14	0	67	50
=	16	0	65	48
counts	17	0	64	47
seq	18	1	63	46
chseq	19	2	62	45
=	20	3	61	44
if	21	4	60	43
p	22	5	59	42
r	23	6	58	41
s	24	7	57	40
==	25	8	56	39
chseq	27	10	54	37
append	28	11	53	36
seq	30	13	51	34
p	31	14	50	33
r	32	15	49	32
s	33	16	48	31
if	34	17	47	30
r	35	18	46	29
s	36	19	45	28
p	37	20	44	27
==	38	21	43	26
chseq	40	23	41	24
append	41	24	40	23
seq	43	26	38	21
r	44	27	37	20
s	45	28	36	19
p	46	29	35	18
if	47	30	34	17
s	48	31	33	16
p	49	32	32	15
r	50	33	31	14
==	51	34	30	13
chseq	53	36	28	11
append	54	37	27	10
seq	56	39	25	8
s	57	40	24	7
p	58	41	23	6
r	59	42	22	5
if	60	43	21	4
len	61	44	20	3
chseq	62	45	19	2
==	63	46	18	1
0	64	47	17	0
return	65	48	16	0
impossible	66	49	15	0
chseq	67	50	14	0
=	68	51	13	0
map	69	52	12	0
chseq	71	54	10	0
res	72	55	9	0
=	73	56	8	0
join	74	57	7	0
min	75	58	6	0
chseq	76	59	5	0
check	77	60	4	0
res	78	61	3	0
return	79	62	2	0
res	80	63	1	0

28 38:
sort_seq	1	0	36	28
sort_seq	19	11	18	10
sort_seq	22	14	15	7
len	4	0	33	25
seq	5	0	32	24
==	6	0	31	23
1	7	0	30	22
return	8	0	29	21
seq	9	1	28	20
l	10	2	27	19
=	11	3	26	18
len	12	4	25	17
seq	13	5	24	16
//	14	6	23	15
2	15	7	22	14
a	16	8	21	13
b	17	9	20	12
=	18	10	19	11
seq	20	12	17	9
l	21	13	16	8
seq	23	15	14	6
l	24	16	13	5
if	25	17	12	4
a	26	18	11	3
<	27	19	10	2
b	28	20	9	1
return	29	21	8	0
a	30	22	7	0
+	31	23	6	0
b	32	24	5	0
return	33	25	4	0
b	34	26	3	0
+	35	27	2	0
a	36	28	1	0

