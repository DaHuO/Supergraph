22 25:
error	17	13	1	0
combine	1	0	17	13
x	2	0	16	12
y	3	0	15	11
if	4	0	14	10
none	5	1	13	9
in	6	2	12	8
x	7	3	11	7
y	8	4	10	6
return	9	5	9	5
none	10	6	8	4
return	11	7	7	3
winner	12	8	6	2
get	13	9	5	1
x	14	10	4	0
+	15	11	3	0
y	16	12	2	0

10 11:
forbidden_child	1	0	8	6
forbidden_child_	5	3	4	2

35 45:
^	27	17	20	10
error	32	22	15	5
i	2	0	45	35
x	3	0	44	34
assert	4	0	43	33
0	5	0	42	32
<=	6	0	41	31
i	7	0	40	30
<	8	0	39	29
1	9	0	38	28
<<	10	0	37	27
n	11	1	36	26
j	12	2	35	25
=	13	3	34	24
last	14	4	33	23
+	15	5	32	22
i	16	6	31	21
while	17	7	30	20
j	18	8	29	19
!=	19	9	28	18
0	20	10	27	17
y	21	11	26	16
=	22	12	25	15
combine	23	13	24	14
x	24	14	23	13
ans	25	15	22	12
j	26	16	21	11
1	28	18	19	9
if	29	19	18	8
y	30	20	17	7
==	31	21	16	6
return	33	23	14	4
false	34	24	13	3
ans	35	25	12	2
j	36	26	11	1
=	37	27	10	0
x	38	28	9	0
x	39	29	8	0
=	40	30	7	0
y	41	31	6	0
j	42	32	5	0
/=	43	33	4	0
2	44	34	3	0
return	45	35	2	0
true	46	36	1	0

47 63:
assign	1	0	47	37
assign	32	22	16	6
x	3	0	45	35
if	4	0	44	34
i	5	0	43	33
==	6	0	42	32
1	7	0	41	31
<<	8	0	40	30
n	9	0	39	29
return	10	0	38	28
true	11	1	37	27
if	12	2	36	26
amt	13	3	35	25
x	14	4	34	24
==	15	5	33	23
0	16	6	32	22
return	17	7	31	21
false	18	8	30	20
amt	19	9	29	19
x	20	10	28	18
-=	21	11	27	17
1	22	12	26	16
if	23	13	25	15
update	24	14	24	14
i	25	15	23	13
x	26	16	22	12
for	27	17	21	11
x2	28	18	20	10
in	29	19	19	9
prs	30	20	18	8
if	31	21	17	7
i	33	23	15	5
+	34	24	14	4
1	35	25	13	3
x2	36	26	12	2
return	37	27	11	1
true	38	28	10	0
update	39	29	9	0
i	40	30	8	0
none	41	31	7	0
amt	42	32	6	0
x	43	33	5	0
+=	44	34	4	0
1	45	35	3	0
return	46	36	2	0
false	47	37	1	0

65 68:
assign	7	4	5	2
solve	1	0	11	8
for	2	0	10	7
x	3	0	9	6
in	4	1	8	5
prs	5	2	7	4
if	6	3	6	3
0	8	5	4	1
x	9	6	3	0
return	10	7	2	0
true	11	8	1	0

27 73:
^	76	42	94	60
error	81	47	89	55
assign	97	63	73	39
assign	128	94	42	8
assign	151	117	19	0
xrange	5	0	165	131
1	6	0	164	130
1	7	0	163	129
+	8	0	162	128
int	9	0	161	127
raw_input	10	0	160	126
print	11	0	159	125
case	12	0	158	124
#%d:	13	0	157	123
%	14	0	156	122
t	15	0	155	121
n	16	0	154	120
r	17	0	153	119
p	18	0	152	118
s	19	0	151	117
=	20	0	150	116
map	21	0	149	115
int	22	0	148	114
raw_input	23	0	147	113
split	24	0	146	112
amt	25	0	145	111
=	26	0	144	110
p	27	0	143	109
p	28	0	142	108
r	29	0	141	107
r	30	0	140	106
s	31	0	139	105
s	32	0	138	104
ans	33	0	137	103
=	34	0	136	102
none	35	1	135	101
*	36	2	134	100
1	37	3	133	99
<<	38	4	132	98
n	39	5	131	97
+	40	6	130	96
1	41	7	129	95
+	42	8	128	94
1	43	9	127	93
last	44	10	126	92
=	45	11	125	91
1	46	12	124	90
<<	47	13	123	89
n	48	14	122	88
def	49	15	121	87
update	50	16	120	86
i	51	17	119	85
x	52	18	118	84
assert	53	19	117	83
0	54	20	116	82
<=	55	21	115	81
i	56	22	114	80
<	57	23	113	79
1	58	24	112	78
<<	59	25	111	77
n	60	26	110	76
j	61	27	109	75
=	62	28	108	74
last	63	29	107	73
+	64	30	106	72
i	65	31	105	71
while	66	32	104	70
j	67	33	103	69
!=	68	34	102	68
0	69	35	101	67
y	70	36	100	66
=	71	37	99	65
combine	72	38	98	64
x	73	39	97	63
ans	74	40	96	62
j	75	41	95	61
1	77	43	93	59
if	78	44	92	58
y	79	45	91	57
==	80	46	90	56
return	82	48	88	54
false	83	49	87	53
ans	84	50	86	52
j	85	51	85	51
=	86	52	84	50
x	87	53	83	49
x	88	54	82	48
=	89	55	81	47
y	90	56	80	46
j	91	57	79	45
/=	92	58	78	44
2	93	59	77	43
return	94	60	76	42
true	95	61	75	41
def	96	62	74	40
i	98	64	72	38
x	99	65	71	37
if	100	66	70	36
i	101	67	69	35
==	102	68	68	34
1	103	69	67	33
<<	104	70	66	32
n	105	71	65	31
return	106	72	64	30
true	107	73	63	29
if	108	74	62	28
amt	109	75	61	27
x	110	76	60	26
==	111	77	59	25
0	112	78	58	24
return	113	79	57	23
false	114	80	56	22
amt	115	81	55	21
x	116	82	54	20
-=	117	83	53	19
1	118	84	52	18
if	119	85	51	17
update	120	86	50	16
i	121	87	49	15
x	122	88	48	14
for	123	89	47	13
x2	124	90	46	12
in	125	91	45	11
prs	126	92	44	10
if	127	93	43	9
i	129	95	41	7
+	130	96	40	6
1	131	97	39	5
x2	132	98	38	4
return	133	99	37	3
true	134	100	36	2
update	135	101	35	1
i	136	102	34	0
none	137	103	33	0
amt	138	104	32	0
x	139	105	31	0
+=	140	106	30	0
1	141	107	29	0
return	142	108	28	0
false	143	109	27	0
def	144	110	26	0
solve	145	111	25	0
for	146	112	24	0
x	147	113	23	0
in	148	114	22	0
prs	149	115	21	0
if	150	116	20	0
0	152	118	18	0
x	153	119	17	0
return	154	120	16	0
true	155	121	15	0
if	156	122	14	0
solve	157	123	13	0
print	158	124	12	0
join	159	125	11	0
ans	160	126	10	0
last	161	127	9	0
last	162	128	8	0
+	163	129	7	0
1	164	130	6	0
<<	165	131	5	0
n	166	132	4	0
else	167	133	3	0
print	168	134	2	0
impossible	169	135	1	0

