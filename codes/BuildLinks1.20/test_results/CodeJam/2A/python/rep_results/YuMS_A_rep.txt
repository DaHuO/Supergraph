44 48:
pattern	6	1	19	14
pattern	12	7	13	8
n	2	0	23	18
r	3	0	22	17
p	4	0	21	16
s	5	0	20	15
=	7	2	18	13
patterns	8	3	17	12
n	9	4	16	11
if	10	5	15	10
sorted	11	6	14	9
!=	13	8	12	7
sorted	14	9	11	6
r	15	10	10	5
p	16	11	9	4
s	17	12	8	3
return	18	13	7	2
impossible	19	14	6	1
return	20	15	5	0
generate	21	16	4	0
r	22	17	3	0
p	23	18	2	0
s	24	19	1	0

50 56:
generateall	7	0	30	22
{1}	29	21	8	0
global	2	0	35	27
patterns	3	0	34	26
t	4	0	33	25
=	5	0	32	24
input	6	0	31	23
12	8	0	29	21
for	9	1	28	20
i	10	2	27	19
in	11	3	26	18
xrange	12	4	25	17
1	13	5	24	16
t	14	6	23	15
+	15	7	22	14
1	16	8	21	13
n	17	9	20	12
r	18	10	19	11
p	19	11	18	10
s	20	12	17	9
=	21	13	16	8
map	22	14	15	7
int	23	15	14	6
raw_input	24	16	13	5
split	25	17	12	4
print	26	18	11	3
case	27	19	10	2
#{0}:	28	20	9	1
format	30	22	7	0
i	31	23	6	0
solve	32	24	5	0
n	33	25	4	0
r	34	26	3	0
p	35	27	2	0
s	36	28	1	0

22 42:
piece0	32	7	90	65
piece1	44	19	78	53
piece0	60	35	62	37
piece1	72	47	50	25
piece0	85	60	37	12
piece1	97	72	25	0
piece0	110	85	12	0
piece1	112	87	10	0
piece0	114	89	8	0
piece1	116	91	6	0
piece1	119	94	3	0
piece0	121	96	1	0
1	12	0	110	85
if	13	0	109	84
r	14	0	108	83
==	15	0	107	82
1	16	0	106	81
return	17	0	105	80
r	18	0	104	79
elif	19	0	103	78
p	20	0	102	77
==	21	0	101	76
1	22	0	100	75
return	23	0	99	74
p	24	0	98	73
else	25	0	97	72
return	26	1	96	71
s	27	2	95	70
if	28	3	94	69
r	29	4	93	68
==	30	5	92	67
s	31	6	91	66
=	33	8	89	64
generate	34	9	88	63
canbe	35	10	87	62
r	36	11	86	61
0	37	12	85	60
canbe	38	13	84	59
p	39	14	83	58
0	40	15	82	57
canbe	41	16	81	56
s	42	17	80	55
1	43	18	79	54
=	45	20	77	52
generate	46	21	76	51
canbe	47	22	75	50
r	48	23	74	49
1	49	24	73	48
canbe	50	25	72	47
p	51	26	71	46
0	52	27	70	45
canbe	53	28	69	44
s	54	29	68	43
0	55	30	67	42
elif	56	31	66	41
r	57	32	65	40
==	58	33	64	39
p	59	34	63	38
=	61	36	61	36
generate	62	37	60	35
canbe	63	38	59	34
r	64	39	58	33
0	65	40	57	32
canbe	66	41	56	31
p	67	42	55	30
1	68	43	54	29
canbe	69	44	53	28
s	70	45	52	27
0	71	46	51	26
=	73	48	49	24
generate	74	49	48	23
canbe	75	50	47	22
r	76	51	46	21
1	77	52	45	20
canbe	78	53	44	19
p	79	54	43	18
0	80	55	42	17
canbe	81	56	41	16
s	82	57	40	15
0	83	58	39	14
else	84	59	38	13
=	86	61	36	11
generate	87	62	35	10
canbe	88	63	34	9
r	89	64	33	8
0	90	65	32	7
canbe	91	66	31	6
p	92	67	30	5
0	93	68	29	4
canbe	94	69	28	3
s	95	70	27	2
1	96	71	26	1
=	98	73	24	0
generate	99	74	23	0
canbe	100	75	22	0
r	101	76	21	0
0	102	77	20	0
canbe	103	78	19	0
p	104	79	18	0
1	105	80	17	0
canbe	106	81	16	0
s	107	82	15	0
0	108	83	14	0
if	109	84	13	0
<	111	86	11	0
return	113	88	9	0
+	115	90	7	0
else	117	92	5	0
return	118	93	4	0
+	120	95	2	0

5 19:
generateall	1	0	69	55
thisone	22	8	48	34
thisone	30	16	40	26
thisone	39	25	31	17
thisone	46	32	24	10
canbe	6	0	64	50
patterns	7	0	63	49
append	8	0	62	48
1	9	0	61	47
0	10	0	60	46
0	11	0	59	45
for	12	0	58	44
i	13	0	57	43
in	14	0	56	42
range	15	1	55	41
n	16	2	54	40
last	17	3	53	39
=	18	4	52	38
patterns	19	5	51	37
-	20	6	50	36
1	21	7	49	35
=	23	9	47	33
last	24	10	46	32
for	25	11	45	31
j	26	12	44	30
in	27	13	43	29
range	28	14	42	28
3	29	15	41	27
j	31	17	39	25
=	32	18	38	24
last	33	19	37	23
j	34	20	36	22
+	35	21	35	21
2	36	22	34	20
%	37	23	33	19
3	38	24	32	18
j	40	26	30	16
+=	41	27	29	15
last	42	28	28	14
j	43	29	27	13
patterns	44	30	26	12
append	45	31	25	11
for	47	33	23	9
i	48	34	22	8
in	49	35	21	7
range	50	36	20	6
n	51	37	19	5
0	52	38	18	4
-	53	39	17	3
1	54	40	16	2
for	55	41	15	1
j	56	42	14	0
in	57	43	13	0
range	58	44	12	0
3	59	45	11	0
canbe	60	46	10	0
patterns	61	47	9	0
i	62	48	8	0
j	63	49	7	0
append	64	50	6	0
patterns	65	51	5	0
i	66	52	4	0
-	67	53	3	0
1	68	54	2	0
j	69	55	1	0

