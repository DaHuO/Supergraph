73 86:
optimal	1	0	34	27
old_seq	6	0	29	22
reorder_seq	24	17	11	4
old_seq	30	23	5	0
true	5	0	30	23
=	7	0	28	21
seq	8	1	27	20
for	9	2	26	19
i	10	3	25	18
in	11	4	24	17
range	12	5	23	16
1	13	6	22	15
length	14	7	21	14
+	15	8	20	13
1	16	9	19	12
distance	17	10	18	11
=	18	11	17	10
2	19	12	16	9
**	20	13	15	8
i	21	14	14	7
seq	22	15	13	6
=	23	16	12	5
seq	25	18	10	3
distance	26	19	9	2
if	27	20	8	1
seq	28	21	7	0
==	29	22	6	0
return	31	24	4	0
seq	32	25	3	0
return	33	26	2	0
seq	34	27	1	0

21 31:
istie	1	0	47	37
istie	46	36	2	0
if	3	0	45	35
len	4	0	44	34
seq	5	0	43	33
<=	6	0	42	32
1	7	0	41	31
return	8	0	40	30
false	9	0	39	29
new_seq	10	0	38	28
=	11	1	37	27
for	12	2	36	26
i	13	3	35	25
in	14	4	34	24
range	15	5	33	23
0	16	6	32	22
len	17	7	31	21
seq	18	8	30	20
2	19	9	29	19
result	20	10	28	18
=	21	11	27	17
add	22	12	26	16
seq	23	13	25	15
i	24	14	24	14
seq	25	15	23	13
i	26	16	22	12
+	27	17	21	11
1	28	18	20	10
if	29	19	19	9
result	30	20	18	8
==	31	21	17	7
0	32	22	16	6
return	33	23	15	5
true	34	24	14	4
else	35	25	13	3
new_seq	36	26	12	2
append	37	27	11	1
add	38	28	10	0
seq	39	29	9	0
i	40	30	8	0
seq	41	31	7	0
i	42	32	6	0
+	43	33	5	0
1	44	34	4	0
return	45	35	3	0
new_seq	47	37	1	0

49 57:
constructtree	1	0	78	62
constructtree	18	2	61	45
constructtree	27	11	52	36
constructtree	40	24	39	23
constructtree	49	33	30	14
constructtree	62	46	17	1
constructtree	71	55	8	0
depth	8	0	71	55
==	9	0	70	54
0	10	0	69	53
return	11	0	68	52
root	12	0	67	51
if	13	0	66	50
root	14	0	65	49
==	15	0	64	48
1	16	0	63	47
return	17	1	62	46
1	19	3	60	44
depth	20	4	59	43
-	21	5	58	42
1	22	6	57	41
p	23	7	56	40
r	24	8	55	39
s	25	9	54	38
+	26	10	53	37
2	28	12	51	35
depth	29	13	50	34
-	30	14	49	33
1	31	15	48	32
p	32	16	47	31
r	33	17	46	30
s	34	18	45	29
if	35	19	44	28
root	36	20	43	27
==	37	21	42	26
2	38	22	41	25
return	39	23	40	24
2	41	25	38	22
depth	42	26	37	21
-	43	27	36	20
1	44	28	35	19
p	45	29	34	18
r	46	30	33	17
s	47	31	32	16
+	48	32	31	15
3	50	34	29	13
depth	51	35	28	12
-	52	36	27	11
1	53	37	26	10
p	54	38	25	9
r	55	39	24	8
s	56	40	23	7
if	57	41	22	6
root	58	42	21	5
==	59	43	20	4
3	60	44	19	3
return	61	45	18	2
1	63	47	16	0
depth	64	48	15	0
-	65	49	14	0
1	66	50	13	0
p	67	51	12	0
r	68	52	11	0
s	69	53	10	0
+	70	54	9	0
3	72	56	7	0
depth	73	57	6	0
-	74	58	5	0
1	75	59	4	0
p	76	60	3	0
r	77	61	2	0
s	78	62	1	0

6 17:
error!	53	41	3	0
add	1	0	55	43
a	2	0	54	42
b	3	0	53	41
if	4	0	52	40
a	5	0	51	39
==	6	0	50	38
b	7	0	49	37
return	8	0	48	36
0	9	0	47	35
if	10	0	46	34
min	11	0	45	33
a	12	0	44	32
b	13	1	43	31
==	14	2	42	30
1	15	3	41	29
and	16	4	40	28
max	17	5	39	27
a	18	6	38	26
b	19	7	37	25
==	20	8	36	24
2	21	9	35	23
return	22	10	34	22
2	23	11	33	21
if	24	12	32	20
min	25	13	31	19
a	26	14	30	18
b	27	15	29	17
==	28	16	28	16
1	29	17	27	15
and	30	18	26	14
max	31	19	25	13
a	32	20	24	12
b	33	21	23	11
==	34	22	22	10
3	35	23	21	9
return	36	24	20	8
1	37	25	19	7
if	38	26	18	6
min	39	27	17	5
a	40	28	16	4
b	41	29	15	3
==	42	30	14	2
2	43	31	13	1
and	44	32	12	0
max	45	33	11	0
a	46	34	10	0
b	47	35	9	0
==	48	36	8	0
3	49	37	7	0
return	50	38	6	0
3	51	39	5	0
print	52	40	4	0
return	54	42	2	0
0	55	43	1	0

34 46:
transform	1	0	46	36
newseq	6	0	41	31
newseq	16	6	31	21
newseq	26	16	21	11
newseq	36	26	11	1
newseq	43	33	4	0
for	8	0	39	29
s	9	0	38	28
in	10	0	37	27
seq	11	1	36	26
if	12	2	35	25
s	13	3	34	24
==	14	4	33	23
1	15	5	32	22
+=	17	7	30	20
p	18	8	29	19
p	19	9	28	18
-=	20	10	27	17
1	21	11	26	16
if	22	12	25	15
s	23	13	24	14
==	24	14	23	13
2	25	15	22	12
+=	27	17	20	10
r	28	18	19	9
r	29	19	18	8
-=	30	20	17	7
1	31	21	16	6
if	32	22	15	5
s	33	23	14	4
==	34	24	13	3
3	35	25	12	2
+=	37	27	10	0
s	38	28	9	0
s	39	29	8	0
-=	40	30	7	0
1	41	31	6	0
return	42	32	5	0
p	44	34	3	0
r	45	35	2	0
s	46	36	1	0

60 70:
reorder_seq	1	0	78	62
parta	18	2	61	45
partb	29	13	50	34
partb	37	21	42	26
parta	39	23	40	24
partb	49	33	30	14
parta	51	35	28	12
partb	56	40	23	7
parta	58	42	21	5
parta	68	52	11	0
partb	70	54	9	0
seq	12	0	67	51
+	13	0	66	50
1	14	0	65	49
2	15	0	64	48
*	16	0	63	47
distance	17	1	62	46
=	19	3	60	44
seq	20	4	59	43
i	21	5	58	42
-	22	6	57	41
2	23	7	56	40
*	24	8	55	39
distance	25	9	54	38
i	26	10	53	37
-	27	11	52	36
distance	28	12	51	35
=	30	14	49	33
seq	31	15	48	32
i	32	16	47	31
-	33	17	46	30
distance	34	18	45	29
i	35	19	44	28
if	36	20	43	27
<	38	22	41	25
new_seq	40	24	39	23
=	41	25	38	22
seq	42	26	37	21
i	43	27	36	20
-	44	28	35	19
2	45	29	34	18
*	46	30	33	17
distance	47	31	32	16
+	48	32	31	15
+	50	34	29	13
+	52	36	27	11
seq	53	37	26	10
i	54	38	25	9
if	55	39	24	8
>=	57	41	22	6
new_seq	59	43	20	4
=	60	44	19	3
seq	61	45	18	2
i	62	46	17	1
-	63	47	16	0
2	64	48	15	0
*	65	49	14	0
distance	66	50	13	0
+	67	51	12	0
+	69	53	10	0
+	71	55	8	0
seq	72	56	7	0
i	73	57	6	0
seq	74	58	5	0
=	75	59	4	0
new_seq	76	60	3	0
return	77	61	2	0
seq	78	62	1	0

