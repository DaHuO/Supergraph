4 13:
sort_rps	1	0	45	35
sort_rps	19	9	27	17
sort_rps	27	17	19	9
if	4	0	42	32
n	5	0	41	31
==	6	0	40	30
0	7	0	39	29
return	8	0	38	28
x	9	0	37	27
k	10	0	36	26
=	11	1	35	25
2	12	2	34	24
**	13	3	33	23
n	14	4	32	22
-	15	5	31	21
1	16	6	30	20
a	17	7	29	19
=	18	8	28	18
x	20	10	26	16
k	21	11	25	15
n	22	12	24	14
-	23	13	23	13
1	24	14	22	12
b	25	15	21	11
=	26	16	20	10
x	28	18	18	8
k	29	19	17	7
n	30	20	16	6
-	31	21	15	5
1	32	22	14	4
if	33	23	13	3
a	34	24	12	2
<	35	25	11	1
b	36	26	10	0
return	37	27	9	0
a	38	28	8	0
+	39	29	7	0
b	40	30	6	0
else	41	31	5	0
return	42	32	4	0
b	43	33	3	0
+	44	34	2	0
a	45	35	1	0

29 39:
compute	1	0	52	41
n	2	0	51	40
r	3	0	50	39
p	4	0	49	38
s	5	0	48	37
x	6	0	47	36
=	7	0	46	35
make	8	0	45	34
n	9	0	44	33
r	10	0	43	32
r	11	0	42	31
p	12	1	41	30
s	13	2	40	29
if	14	3	39	28
x	15	4	38	27
is	16	5	37	26
not	17	6	36	25
none	18	7	35	24
return	19	8	34	23
x	20	9	33	22
x	21	10	32	21
=	22	11	31	20
make	23	12	30	19
n	24	13	29	18
p	25	14	28	17
r	26	15	27	16
p	27	16	26	15
s	28	17	25	14
if	29	18	24	13
x	30	19	23	12
is	31	20	22	11
not	32	21	21	10
none	33	22	20	9
return	34	23	19	8
x	35	24	18	7
x	36	25	17	6
=	37	26	16	5
make	38	27	15	4
n	39	28	14	3
s	40	29	13	2
r	41	30	12	1
p	42	31	11	0
s	43	32	10	0
if	44	33	9	0
x	45	34	8	0
is	46	35	7	0
not	47	36	6	0
none	48	37	5	0
return	49	38	4	0
x	50	39	3	0
return	51	40	2	0
impossible	52	41	1	0

42 44:
def	0	0	19	15
parse	1	0	18	14
n	2	0	17	13
r	3	0	16	12
p	4	0	15	11
s	5	1	14	10
=	6	2	13	9
map	7	3	12	8
int	8	4	11	7
sys	9	5	10	6
stdin	10	6	9	5
readline	11	7	8	4
strip	12	8	7	3
split	13	9	6	2
return	14	10	5	1
n	15	11	4	0
r	16	12	3	0
p	17	13	2	0
s	18	14	1	0

15 26:
sort_rps	71	56	3	0
make	1	0	73	58
n	2	0	72	57
x	3	0	71	56
r	4	0	70	55
p	5	0	69	54
s	6	0	68	53
m	7	0	67	52
=	8	0	66	51
r	9	0	65	50
rs	10	0	64	49
p	11	0	63	48
pr	12	0	62	47
s	13	0	61	46
ps	14	0	60	45
for	15	0	59	44
i	16	1	58	43
in	17	2	57	42
xrange	18	3	56	41
n	19	4	55	40
x	20	5	54	39
=	21	6	53	38
join	22	7	52	37
map	23	8	51	36
lambda	24	9	50	35
a	25	10	49	34
m	26	11	48	33
a	27	12	47	32
x	28	13	46	31
counts	29	14	45	30
=	30	15	44	29
0	31	16	43	28
0	32	17	42	27
0	33	18	41	26
for	34	19	40	25
a	35	20	39	24
in	36	21	38	23
x	37	22	37	22
if	38	23	36	21
a	39	24	35	20
==	40	25	34	19
r	41	26	33	18
counts	42	27	32	17
0	43	28	31	16
+=	44	29	30	15
1	45	30	29	14
if	46	31	28	13
a	47	32	27	12
==	48	33	26	11
p	49	34	25	10
counts	50	35	24	9
1	51	36	23	8
+=	52	37	22	7
1	53	38	21	6
if	54	39	20	5
a	55	40	19	4
==	56	41	18	3
s	57	42	17	2
counts	58	43	16	1
2	59	44	15	0
+=	60	45	14	0
1	61	46	13	0
if	62	47	12	0
counts	63	48	11	0
!=	64	49	10	0
r	65	50	9	0
p	66	51	8	0
s	67	52	7	0
return	68	53	6	0
none	69	54	5	0
return	70	55	4	0
x	72	57	2	0
n	73	58	1	0

