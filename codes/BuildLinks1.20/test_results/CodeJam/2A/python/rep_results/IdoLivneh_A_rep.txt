96 97:
list_to_int	1	0	9	7
part_of_list_to_int	4	2	6	4

125 134:
list_index_in_sorted_with_position	1	0	50	39
list_len	5	0	46	35
list_len	10	0	41	30
list_len	25	14	26	15
list_index_in_sorted_with_position	31	20	20	9
list_len	33	22	18	7
list_index_in_sorted_with_position	40	29	11	0
list_len	42	31	9	0
list_len	48	37	3	0
1	12	1	39	28
if	13	2	38	27
a_list	14	3	37	26
0	15	4	36	25
==	16	5	35	24
value	17	6	34	23
return	18	7	33	22
pos	19	8	32	21
return	20	9	31	20
-	21	10	30	19
1	22	11	29	18
if	23	12	28	17
a_list	24	13	27	16
/	26	15	25	14
2	27	16	24	13
>	28	17	23	12
value	29	18	22	11
return	30	19	21	10
a_list	32	21	19	8
/	34	23	17	6
2	35	24	16	5
value	36	25	15	4
pos	37	26	14	3
else	38	27	13	2
return	39	28	12	1
a_list	41	30	10	0
/	43	32	8	0
2	44	33	7	0
value	45	34	6	0
pos	46	35	5	0
+	47	36	4	0
/	49	38	2	0
2	50	39	1	0

259 278:
start_time	3	0	38	29
output.txt	9	0	32	23
wb	10	1	31	22
case_index	14	5	27	18
iterate_cases_1lpc	17	8	24	15
time:%.02f	22	13	19	10
case_index	24	15	17	8
start_time	28	19	13	4
calc_result	31	22	10	1

109 110:
list_to_float	1	0	9	7
part_of_list_to_float	4	2	6	4

62 84:
iterate_cases_glpc	1	0	78	62
filepath	2	0	77	61
with	3	0	76	60
file	4	0	75	59
filepath	5	0	74	58
rb	6	0	73	57
as	7	0	72	56
f_in	8	0	71	55
case_counter	9	0	70	54
=	10	0	69	53
0	11	0	68	52
new_case	12	0	67	51
=	13	0	66	50
true	14	0	65	49
for	15	0	64	48
line_index	16	0	63	47
line	17	1	62	46
in	18	2	61	45
enumerate	19	3	60	44
f_in	20	4	59	43
if	21	5	58	42
line_index	22	6	57	41
==	23	7	56	40
0	24	8	55	39
continue	25	9	54	38
if	26	10	53	37
new_case	27	11	52	36
new_case	28	12	51	35
=	29	13	50	34
false	30	14	49	33
case_counter	31	15	48	32
+=	32	16	47	31
1	33	17	46	30
case	34	18	45	29
=	35	19	44	28
assert	36	20	43	27
len	37	21	42	26
line	38	22	41	25
strip	39	23	40	24
split	40	24	39	23
	41	25	38	22
==	42	26	37	21
1	43	27	36	20
lines_left	44	28	35	19
=	45	29	34	18
int	46	30	33	17
line	47	31	32	16
strip	48	32	31	15
if	49	33	30	14
not	50	34	29	13
lines_left	51	35	28	12
new_case	52	36	27	11
=	53	37	26	10
true	54	38	25	9
yield	55	39	24	8
case_counter	56	40	23	7
case	57	41	22	6
continue	58	42	21	5
if	59	43	20	4
lines_left	60	44	19	3
lines_left	61	45	18	2
-=	62	46	17	1
1	63	47	16	0
case	64	48	15	0
append	65	49	14	0
line	66	50	13	0
strip	67	51	12	0
split	68	52	11	0
	69	53	10	0
if	70	54	9	0
not	71	55	8	0
lines_left	72	56	7	0
new_case	73	57	6	0
=	74	58	5	0
true	75	59	4	0
yield	76	60	3	0
case_counter	77	61	2	0
case	78	62	1	0

169 186:
def	0	0	72	57
choice	1	0	71	56
a	2	0	70	55
b	3	0	69	54
assert	4	0	68	53
a	5	0	67	52
>=	6	0	66	51
b	7	0	65	50
res	8	0	64	49
=	9	0	63	48
1	10	0	62	47
if	11	0	61	46
b	12	0	60	45
>	13	0	59	44
a	14	0	58	43
-	15	0	57	42
b	16	1	56	41
for	17	2	55	40
i	18	3	54	39
in	19	4	53	38
xrange	20	5	52	37
b	21	6	51	36
+	22	7	50	35
1	23	8	49	34
a	24	9	48	33
+	25	10	47	32
1	26	11	46	31
res	27	12	45	30
*=	28	13	44	29
i	29	14	43	28
for	30	15	42	27
i	31	16	41	26
in	32	17	40	25
xrange	33	18	39	24
1	34	19	38	23
a	35	20	37	22
-	36	21	36	21
b	37	22	35	20
+	38	23	34	19
1	39	24	33	18
res	40	25	32	17
/=	41	26	31	16
i	42	27	30	15
else	43	28	29	14
for	44	29	28	13
i	45	30	27	12
in	46	31	26	11
xrange	47	32	25	10
a	48	33	24	9
-	49	34	23	8
b	50	35	22	7
+	51	36	21	6
1	52	37	20	5
a	53	38	19	4
+	54	39	18	3
1	55	40	17	2
res	56	41	16	1
*=	57	42	15	0
i	58	43	14	0
for	59	44	13	0
i	60	45	12	0
in	61	46	11	0
xrange	62	47	10	0
1	63	48	9	0
b	64	49	8	0
+	65	50	7	0
1	66	51	6	0
res	67	52	5	0
/=	68	53	4	0
i	69	54	3	0
return	70	55	2	0
res	71	56	1	0

193 206:
def	0	0	53	42
my_sort	1	0	52	41
result	2	0	51	40
if	3	0	50	39
len	4	0	49	38
result	5	0	48	37
==	6	0	47	36
1	7	0	46	35
return	8	0	45	34
result	9	0	44	33
if	10	0	43	32
len	11	0	42	31
result	12	1	41	30
==	13	2	40	29
2	14	3	39	28
result	15	4	38	27
sort	16	5	37	26
return	17	6	36	25
result	18	7	35	24
res	19	8	34	23
=	20	9	33	22
a	21	10	32	21
=	22	11	31	20
my_sort	23	12	30	19
result	24	13	29	18
len	25	14	28	17
result	26	15	27	16
/	27	16	26	15
2	28	17	25	14
b	29	18	24	13
=	30	19	23	12
my_sort	31	20	22	11
result	32	21	21	10
len	33	22	20	9
result	34	23	19	8
/	35	24	18	7
2	36	25	17	6
m	37	26	16	5
=	38	27	15	4
a	39	28	14	3
b	40	29	13	2
m	41	30	12	1
sort	42	31	11	0
res	43	32	10	0
extend	44	33	9	0
m	45	34	8	0
0	46	35	7	0
res	47	36	6	0
extend	48	37	5	0
m	49	38	4	0
1	50	39	3	0
return	51	40	2	0
res	52	41	1	0

99 107:
part_of_list_to_float	1	0	30	23
flags	3	0	28	21
flags	9	2	22	15
flags	19	12	12	5
array	6	0	25	18
==	7	0	24	17
len	8	1	23	16
output	10	3	21	14
=	11	4	20	13
for	12	5	19	12
index	13	6	18	11
elem	14	7	17	10
in	15	8	16	9
enumerate	16	9	15	8
array	17	10	14	7
if	18	11	13	6
index	20	13	11	4
output	21	14	10	3
append	22	15	9	2
float	23	16	8	1
elem	24	17	7	0
else	25	18	6	0
output	26	19	5	0
append	27	20	4	0
elem	28	21	3	0
return	29	22	2	0
output	30	23	1	0

144 151:
gcd	1	0	14	11
a	2	0	13	10
b	3	0	12	9
while	4	1	11	8
b	5	2	10	7
a	6	3	9	6
b	7	4	8	5
=	8	5	7	4
b	9	6	6	3
a	10	7	5	2
%	11	8	4	1
b	12	9	3	0
return	13	10	2	0
a	14	11	1	0

136 137:
list_index_in_sorted_list	1	0	8	6
list_index_in_sorted_with_position	5	3	4	2

112 123:
get_max_array_on_index	1	0	48	38
elem_len	4	0	45	35
elem_len	12	2	37	27
elem_len	18	8	31	21
max_sub	22	12	27	17
max_elem	27	17	22	12
max_sub	39	29	10	0
max_sub	40	30	9	0
max_elem	44	34	5	0
max_elem	48	38	1	0

12 17:
iterate_cases_1lpc	1	0	25	19
filepath	2	0	24	18
with	3	0	23	17
file	4	0	22	16
filepath	5	0	21	15
rb	6	0	20	14
as	7	1	19	13
f_in	8	2	18	12
for	9	3	17	11
line_index	10	4	16	10
line	11	5	15	9
in	12	6	14	8
enumerate	13	7	13	7
f_in	14	8	12	6
if	15	9	11	5
line_index	16	10	10	4
==	17	11	9	3
0	18	12	8	2
continue	19	13	7	1
yield	20	14	6	0
line_index	21	15	5	0
line	22	16	4	0
strip	23	17	3	0
split	24	18	2	0
	25	19	1	0

208 247:
real_result	118	90	20	0
tran	120	92	18	0
real_result	132	104	6	0
tran	134	106	4	0
real_result	137	109	1	0
elems	5	0	133	105
=	6	0	132	104
p	7	0	131	103
r	8	0	130	102
s	9	0	129	101
result	10	0	128	100
=	11	0	127	99
if	12	0	126	98
max	13	0	125	97
elems	14	0	124	96
-	15	0	123	95
min	16	0	122	94
elems	17	0	121	93
>=	18	0	120	92
2	19	0	119	91
return	20	0	118	90
impossible	21	0	117	89
if	22	0	116	88
elems	23	0	115	87
count	24	0	114	86
max	25	0	113	85
elems	26	0	112	84
==	27	0	111	83
1	28	0	110	82
j	29	1	109	81
=	30	2	108	80
elems	31	3	107	79
index	32	4	106	78
max	33	5	105	77
elems	34	6	104	76
if	35	7	103	75
j	36	8	102	74
==	37	9	101	73
1	38	10	100	72
i	39	11	99	71
=	40	12	98	70
0	41	13	97	69
else	42	14	96	68
i	43	15	95	67
=	44	16	94	66
j	45	17	93	65
elif	46	18	92	64
elems	47	19	91	63
count	48	20	90	62
max	49	21	89	61
elems	50	22	88	60
==	51	23	87	59
2	52	24	86	58
j	53	25	85	57
=	54	26	84	56
elems	55	27	83	55
index	56	28	82	54
max	57	29	81	53
elems	58	30	80	52
-	59	31	79	51
1	60	32	78	50
i	61	33	77	49
=	62	34	76	48
j	63	35	75	47
+	64	36	74	46
1	65	37	73	45
%	66	38	72	44
3	67	39	71	43
elif	68	40	70	42
elems	69	41	69	41
count	70	42	68	40
max	71	43	67	39
elems	72	44	66	38
==	73	45	65	37
3	74	46	64	36
i	75	47	63	35
=	76	48	62	34
0	77	49	61	33
while	78	50	60	32
true	79	51	59	31
if	80	52	58	30
elems	81	53	57	29
==	82	54	56	28
0	83	55	55	27
0	84	56	54	26
0	85	57	53	25
break	86	58	52	24
if	87	59	51	23
elems	88	60	50	22
i	89	61	49	21
==	90	62	48	20
0	91	63	47	19
i	92	64	46	18
=	93	65	45	17
i	94	66	44	16
+	95	67	43	15
1	96	68	42	14
%	97	69	41	13
3	98	70	40	12
continue	99	71	39	11
result	100	72	38	10
append	101	73	37	9
i	102	74	36	8
elems	103	75	35	7
i	104	76	34	6
-=	105	77	33	5
1	106	78	32	4
i	107	79	31	3
=	108	80	30	2
i	109	81	29	1
+	110	82	28	0
1	111	83	27	0
%	112	84	26	0
3	113	85	25	0
result	114	86	24	0
=	115	87	23	0
my_sort	116	88	22	0
result	117	89	21	0
=	119	91	19	0
=	121	93	17	0
0	122	94	16	0
p	123	95	15	0
1	124	96	14	0
r	125	97	13	0
2	126	98	12	0
s	127	99	11	0
for	128	100	10	0
r	129	101	9	0
in	130	102	8	0
result	131	103	7	0
+=	133	105	5	0
r	135	107	3	0
return	136	108	2	0

139 142:
copy_list	1	0	9	7
list	2	0	8	6
res	3	1	7	5
=	4	2	6	4
res	5	3	5	3
extend	6	4	4	2
list	7	5	3	1
return	8	6	2	0
res	9	7	1	0

249 257:
calc_result	1	0	22	17
list_to_int	11	6	12	7
result	3	0	20	15
=	4	0	19	14
none	5	0	18	13
n	6	1	17	12
r	7	2	16	11
p	8	3	15	10
s	9	4	14	9
=	10	5	13	8
case	12	7	11	6
result	13	8	10	5
=	14	9	9	4
solve	15	10	8	3
p	16	11	7	2
r	17	12	6	1
s	18	13	5	0
print	19	14	4	0
result	20	15	3	0
return	21	16	2	0
result	22	17	1	0

154 167:
get_primes	1	0	38	30
primes_filename	7	0	32	24
readlines	15	7	24	16
create	32	24	7	0
bigger	34	26	5	0
prime	35	27	4	0
rb	8	0	31	23
as	9	1	30	22
f	10	2	29	21
for	11	3	28	20
line	12	4	27	19
in	13	5	26	18
f	14	6	25	17
p	16	8	23	15
=	17	9	22	14
int	18	10	21	13
line	19	11	20	12
strip	20	12	19	11
if	21	13	18	10
p	22	14	17	9
>	23	15	16	8
n	24	16	15	7
break	25	17	14	6
primes	26	18	13	5
append	27	19	12	4
p	28	20	11	3
else	29	21	10	2
raise	30	22	9	1
valueerror	31	23	8	0
a	33	25	6	0
file	36	28	3	0
return	37	29	2	0
primes	38	30	1	0

32 60:
iterate_cases_subsections	1	0	95	75
num_of_subs	3	0	93	73
new_sub_case	32	12	64	44
sub_cases_left	35	15	61	41
num_of_subs	37	17	59	39
new_sub_case	44	24	52	32
new_sub_case	45	25	51	31
sub_case	48	28	48	28
sub_case	69	49	27	7
sub_case	80	60	16	0
sub_cases_left	81	61	15	0
new_sub_case	84	64	12	0
sub_cases_left	89	69	7	0
true	15	0	81	61
for	16	0	80	60
line_index	17	0	79	59
line	18	0	78	58
in	19	0	77	57
enumerate	20	0	76	56
f_in	21	1	75	55
if	22	2	74	54
line_index	23	3	73	53
==	24	4	72	52
0	25	5	71	51
continue	26	6	70	50
if	27	7	69	49
new_case	28	8	68	48
new_case	29	9	67	47
=	30	10	66	46
false	31	11	65	45
=	33	13	63	43
true	34	14	62	42
=	36	16	60	40
case_counter	38	18	58	38
+=	39	19	57	37
1	40	20	56	36
case	41	21	55	35
=	42	22	54	34
if	43	23	53	33
=	46	26	50	30
false	47	27	49	29
=	49	29	47	27
assert	50	30	46	26
len	51	31	45	25
line	52	32	44	24
strip	53	33	43	23
split	54	34	42	22
	55	35	41	21
==	56	36	40	20
1	57	37	39	19
lines_left	58	38	38	18
=	59	39	37	17
int	60	40	36	16
line	61	41	35	15
strip	62	42	34	14
continue	63	43	33	13
if	64	44	32	12
lines_left	65	45	31	11
lines_left	66	46	30	10
-=	67	47	29	9
1	68	48	28	8
append	70	50	26	6
line	71	51	25	5
strip	72	52	24	4
split	73	53	23	3
	74	54	22	2
if	75	55	21	1
not	76	56	20	0
lines_left	77	57	19	0
case	78	58	18	0
append	79	59	17	0
-=	82	62	14	0
1	83	63	13	0
=	85	65	11	0
true	86	66	10	0
if	87	67	9	0
not	88	68	8	0
new_case	90	70	6	0
=	91	71	5	0
true	92	72	4	0
yield	93	73	3	0
case_counter	94	74	2	0
case	95	75	1	0

19 30:
iterate_cases_nlpc	1	0	44	35
filepath	2	0	43	34
n	3	0	42	33
with	4	0	41	32
file	5	0	40	31
filepath	6	0	39	30
rb	7	0	38	29
as	8	0	37	28
f_in	9	0	36	27
case_counter	10	1	35	26
=	11	2	34	25
1	12	3	33	24
case	13	4	32	23
=	14	5	31	22
for	15	6	30	21
line_index	16	7	29	20
line	17	8	28	19
in	18	9	27	18
enumerate	19	10	26	17
f_in	20	11	25	16
if	21	12	24	15
line_index	22	13	23	14
==	23	14	22	13
0	24	15	21	12
continue	25	16	20	11
case	26	17	19	10
append	27	18	18	9
line	28	19	17	8
strip	29	20	16	7
split	30	21	15	6
	31	22	14	5
if	32	23	13	4
not	33	24	12	3
line_index	34	25	11	2
%	35	26	10	1
n	36	27	9	0
yield	37	28	8	0
case_counter	38	29	7	0
case	39	30	6	0
case_counter	40	31	5	0
+=	41	32	4	0
1	42	33	3	0
case	43	34	2	0
=	44	35	1	0

86 94:
part_of_list_to_int	1	0	30	23
flags	3	0	28	21
flags	9	2	22	15
flags	19	12	12	5
array	6	0	25	18
==	7	0	24	17
len	8	1	23	16
output	10	3	21	14
=	11	4	20	13
for	12	5	19	12
index	13	6	18	11
elem	14	7	17	10
in	15	8	16	9
enumerate	16	9	15	8
array	17	10	14	7
if	18	11	13	6
index	20	13	11	4
output	21	14	10	3
append	22	15	9	2
int	23	16	8	1
elem	24	17	7	0
else	25	18	6	0
output	26	19	5	0
append	27	20	4	0
elem	28	21	3	0
return	29	22	2	0
output	30	23	1	0

