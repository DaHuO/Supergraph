50 63:
fo	6	0	63	49
time0	11	0	58	44
ti	21	7	48	34
time1	25	11	44	30
read_input	31	17	38	24
ti	39	25	30	16
%.3f	47	33	22	8
time1	52	38	17	3
fo	53	39	16	2
%.3f	59	45	10	0
time0	64	50	5	0
fo	67	53	2	0
time	14	0	55	41
t	15	1	54	40
=	16	2	53	39
int	17	3	52	38
fi	18	4	51	37
readline	19	5	50	36
for	20	6	49	35
in	22	8	47	33
range	23	9	46	32
t	24	10	45	31
=	26	12	43	29
time	27	13	42	28
time	28	14	41	27
t	29	15	40	26
=	30	16	39	25
fi	32	18	37	23
ans	33	19	36	22
=	34	20	35	21
case	35	21	34	20
#%d:	36	22	33	19
%s	37	23	32	18
%	38	24	31	17
+	40	26	29	15
1	41	27	28	14
solve	42	28	27	13
*	43	29	26	12
t	44	30	25	11
print	45	31	24	10
ans	46	32	23	9
%	48	34	21	7
time	49	35	20	6
time	50	36	19	5
-	51	37	18	4
write	54	40	15	1
ans	55	41	14	0
+	56	42	13	0
\n	57	43	12	0
print	58	44	11	0
%	60	46	9	0
time	61	47	8	0
time	62	48	7	0
-	63	49	6	0
fi	65	51	4	0
close	66	52	3	0
close	68	54	1	0

8 38:
spr	46	0	184	138
rsp	59	13	171	125
spr	113	67	117	71
rsp	126	80	104	58
p	4	0	226	180
s	5	0	225	179
m	6	0	224	178
=	7	0	223	177
2	8	0	222	176
**	9	0	221	175
n	10	0	220	174
-	11	0	219	173
2	12	0	218	172
/	13	0	217	171
2	14	0	216	170
if	15	0	215	169
m	16	0	214	168
%	17	0	213	167
3	18	0	212	166
==	19	0	211	165
0	20	0	210	164
if	21	0	209	163
r	22	0	208	162
==	23	0	207	161
p	24	0	206	160
-	25	0	205	159
1	26	0	204	158
and	27	0	203	157
p	28	0	202	156
==	29	0	201	155
s	30	0	200	154
res	31	0	199	153
=	32	0	198	152
prs	33	0	197	151
elif	34	0	196	150
p	35	0	195	149
==	36	0	194	148
r	37	0	193	147
-	38	0	192	146
1	39	0	191	145
and	40	0	190	144
r	41	0	189	143
==	42	0	188	142
s	43	0	187	141
res	44	0	186	140
=	45	0	185	139
elif	47	1	183	137
s	48	2	182	136
==	49	3	181	135
p	50	4	180	134
-	51	5	179	133
1	52	6	178	132
and	53	7	177	131
p	54	8	176	130
==	55	9	175	129
r	56	10	174	128
res	57	11	173	127
=	58	12	172	126
else	60	14	170	124
return	61	15	169	123
impossible	62	16	168	122
r1	63	17	167	121
=	64	18	166	120
join	65	19	165	119
i	66	20	164	118
+	67	21	163	117
i	68	22	162	116
for	69	23	161	115
i	70	24	160	114
in	71	25	159	113
res	72	26	158	112
r2	73	27	157	111
=	74	28	156	110
list	75	29	155	109
res	76	30	154	108
2	77	31	153	107
+	78	32	152	106
r1	79	33	151	105
*	80	34	150	104
m	81	35	149	103
/	82	36	148	102
3	83	37	147	101
+	84	38	146	100
res	85	39	145	99
0	86	40	144	98
else	87	41	143	97
if	88	42	142	96
r	89	43	141	95
==	90	44	140	94
p	91	45	139	93
+	92	46	138	92
1	93	47	137	91
and	94	48	136	90
p	95	49	135	89
==	96	50	134	88
s	97	51	133	87
res	98	52	132	86
=	99	53	131	85
prs	100	54	130	84
elif	101	55	129	83
p	102	56	128	82
==	103	57	127	81
r	104	58	126	80
+	105	59	125	79
1	106	60	124	78
and	107	61	123	77
r	108	62	122	76
==	109	63	121	75
s	110	64	120	74
res	111	65	119	73
=	112	66	118	72
elif	114	68	116	70
s	115	69	115	69
==	116	70	114	68
p	117	71	113	67
+	118	72	112	66
1	119	73	111	65
and	120	74	110	64
p	121	75	109	63
==	122	76	108	62
r	123	77	107	61
res	124	78	106	60
=	125	79	105	59
else	127	81	103	57
return	128	82	102	56
impossible	129	83	101	55
r1	130	84	100	54
=	131	85	99	53
join	132	86	98	52
i	133	87	97	51
+	134	88	96	50
i	135	89	95	49
for	136	90	94	48
i	137	91	93	47
in	138	92	92	46
res	139	93	91	45
*	140	94	90	44
m	141	95	89	43
/	142	96	88	42
3	143	97	87	41
+	144	98	86	40
1	145	99	85	39
r2	146	100	84	38
=	147	101	83	37
list	148	102	82	36
r1	149	103	81	35
1	150	104	80	34
2	151	105	79	33
**	152	106	78	32
n	153	107	77	31
+	154	108	76	30
1	155	109	75	29
for	156	110	74	28
i	157	111	73	27
in	158	112	72	26
range	159	113	71	25
1	160	114	70	24
n	161	115	69	23
+	162	116	68	22
1	163	117	67	21
for	164	118	66	20
j	165	119	65	19
in	166	120	64	18
range	167	121	63	17
0	168	122	62	16
2	169	123	61	15
**	170	124	60	14
n	171	125	59	13
2	172	126	58	12
**	173	127	57	11
i	174	128	56	10
step	175	129	55	9
=	176	130	54	8
2	177	131	53	7
**	178	132	52	6
i	179	133	51	5
-	180	134	50	4
1	181	135	49	3
if	182	136	48	2
r2	183	137	47	1
j	184	138	46	0
j	185	139	45	0
+	186	140	44	0
step	187	141	43	0
>	188	142	42	0
r2	189	143	41	0
j	190	144	40	0
+	191	145	39	0
step	192	146	38	0
j	193	147	37	0
+	194	148	36	0
step	195	149	35	0
*	196	150	34	0
2	197	151	33	0
r2	198	152	32	0
j	199	153	31	0
j	200	154	30	0
+	201	155	29	0
step	202	156	28	0
r2	203	157	27	0
j	204	158	26	0
+	205	159	25	0
step	206	160	24	0
j	207	161	23	0
+	208	162	22	0
step	209	163	21	0
*	210	164	20	0
2	211	165	19	0
=	212	166	18	0
r2	213	167	17	0
j	214	168	16	0
+	215	169	15	0
step	216	170	14	0
j	217	171	13	0
+	218	172	12	0
step	219	173	11	0
*	220	174	10	0
2	221	175	9	0
r2	222	176	8	0
j	223	177	7	0
j	224	178	6	0
+	225	179	5	0
step	226	180	4	0
return	227	181	3	0
join	228	182	2	0
r2	229	183	1	0

42 48:
read_input	1	0	62	49
readarray	12	0	51	38
readmatrix	21	8	42	29
readlines	36	23	27	14
readarray	56	43	7	0
type	6	0	57	44
type	7	0	56	43
fi	8	0	55	42
readline	9	0	54	41
-	10	0	53	40
1	11	0	52	39
=	13	0	50	37
lambda	14	1	49	36
type	15	2	48	35
map	16	3	47	34
type	17	4	46	33
fi	18	5	45	32
readline	19	6	44	31
split	20	7	43	30
=	22	9	41	28
lambda	23	10	40	27
type	24	11	39	26
x	25	12	38	25
map	26	13	37	24
type	27	14	36	23
fi	28	15	35	22
readline	29	16	34	21
split	30	17	33	20
for	31	18	32	19
i	32	19	31	18
in	33	20	30	17
range	34	21	29	16
x	35	22	28	15
=	37	24	26	13
lambda	38	25	25	12
type	39	26	24	11
x	40	27	23	10
type	41	28	22	9
fi	42	29	21	8
readline	43	30	20	7
-	44	31	19	6
1	45	32	18	5
for	46	33	17	4
i	47	34	16	3
in	48	35	15	2
range	49	36	14	1
x	50	37	13	0
n	51	38	12	0
r	52	39	11	0
p	53	40	10	0
s	54	41	9	0
=	55	42	8	0
int	57	44	6	0
return	58	45	5	0
n	59	46	4	0
r	60	47	3	0
p	61	48	2	0
s	62	49	1	0

