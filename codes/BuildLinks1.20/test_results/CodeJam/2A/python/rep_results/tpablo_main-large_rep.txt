32 33:
getword	9	7	1	0
get	1	0	9	7
self	2	0	8	6
t	3	1	7	5
=	4	2	6	4
str	5	3	5	3
return	6	4	4	2
t	7	5	3	1
self	8	6	2	0

48 49:
def	0	0	21	16
read	1	0	20	15
self	2	0	19	14
reader	3	0	18	13
self	4	0	17	12
n	5	0	16	11
self	6	1	15	10
r	7	2	14	9
self	8	3	13	8
p	9	4	12	7
self	10	5	11	6
s	11	6	10	5
=	12	7	9	4
reader	13	8	8	3
get	14	9	7	2
int	15	10	6	1
for	16	11	5	0
_	17	12	4	0
in	18	13	3	0
range	19	14	2	0
4	20	15	1	0

20 22:
def	0	0	11	8
__init__	1	0	10	7
self	2	0	9	6
handle	3	0	8	5
self	4	1	7	4
handle	5	2	6	3
=	6	3	5	2
handle	7	4	4	1
self	8	5	3	0
buf	9	6	2	0
=	10	7	1	0

147 166:
inputfn	3	0	96	76
inputname	9	0	90	70
inputfn	11	0	88	68
inputfn	15	0	84	64
endswith	16	0	83	63
inputfn	19	0	80	60
testsdir	20	0	79	59
inputname	22	2	77	57
_split	24	4	75	55
isdir	29	9	70	50
testsdir	30	10	69	49
mkdir	32	12	67	47
testsdir	33	13	66	46
inputfn	37	17	62	42
tests	43	23	56	36
tests	53	33	46	26
testfn	56	36	43	23
testsdir	61	41	38	18
%.5d.pickle	62	42	37	17
exists	69	49	30	10

108 132:
wc	38	16	68	46
wc	58	36	48	26
impossible\n	67	45	39	17
wc	76	54	30	8
impossible\n	87	65	19	0
makerow	92	70	14	0
fix	98	76	8	0
#%d:	7	0	99	77
%	8	0	98	76
self	9	0	97	75
case	10	0	96	74
n	11	0	95	73
p	12	0	94	72
r	13	0	93	71
s	14	0	92	70
=	15	0	91	69
self	16	0	90	68
n	17	0	89	67
self	18	0	88	66
p	19	0	87	65
self	20	0	86	64
r	21	0	85	63
self	22	0	84	62
s	23	1	83	61
c	24	2	82	60
=	25	3	81	59
2	26	4	80	58
**	27	5	79	57
n	28	6	78	56
w	29	7	77	55
=	30	8	76	54
sorted	31	9	75	53
r	32	10	74	52
r	33	11	73	51
p	34	12	72	50
p	35	13	71	49
s	36	14	70	48
s	37	15	69	47
=	39	17	67	45
w	40	18	66	44
0	41	19	65	43
for	42	20	64	42
w	43	21	63	41
in	44	22	62	40
w	45	23	61	39
if	46	24	60	38
n	47	25	59	37
%	48	26	58	36
2	49	27	57	35
==	50	28	56	34
0	51	29	55	33
t	52	30	54	32
=	53	31	53	31
c	54	32	52	30
//	55	33	51	29
3	56	34	50	28
if	57	35	49	27
!=	59	37	47	25
t	60	38	46	24
t	61	39	45	23
t	62	40	44	22
+	63	41	43	21
1	64	42	42	20
handle	65	43	41	19
write	66	44	40	18
return	68	46	38	16
else	69	47	37	15
t	70	48	36	14
=	71	49	35	13
c	72	50	34	12
//	73	51	33	11
3	74	52	32	10
if	75	53	31	9
!=	77	55	29	7
t	78	56	28	6
t	79	57	27	5
+	80	58	26	4
1	81	59	25	3
t	82	60	24	2
+	83	61	23	1
1	84	62	22	0
handle	85	63	21	0
write	86	64	20	0
return	88	66	18	0
row	89	67	17	0
=	90	68	16	0
self	91	69	15	0
w	93	71	13	0
n	94	72	12	0
row	95	73	11	0
=	96	74	10	0
self	97	75	9	0
row	99	77	7	0
handle	100	78	6	0
write	101	79	5	0
join	102	80	4	0
row	103	81	3	0
+	104	82	2	0
\n	105	83	1	0

45 46:
def	0	0	8	6
__init__	1	0	7	5
self	2	0	6	4
case	3	1	5	3
self	4	2	4	2
case	5	3	3	1
=	6	4	2	0
case	7	5	1	0

99 106:
fix	1	0	43	34
fix	22	13	22	13
fix	28	19	16	7
l	4	0	40	31
=	5	0	39	30
len	6	0	38	29
row	7	0	37	28
if	8	0	36	27
l	9	0	35	26
==	10	1	34	25
1	11	2	33	24
return	12	3	32	23
row	13	4	31	22
h	14	5	30	21
=	15	6	29	20
l	16	7	28	19
//	17	8	27	18
2	18	9	26	17
a	19	10	25	16
=	20	11	24	15
self	21	12	23	14
row	23	14	21	12
h	24	15	20	11
b	25	16	19	10
=	26	17	18	9
self	27	18	17	8
row	29	20	15	6
h	30	21	14	5
if	31	22	13	4
a	32	23	12	3
>	33	24	11	2
b	34	25	10	1
a	35	26	9	0
b	36	27	8	0
=	37	28	7	0
b	38	29	6	0
a	39	30	5	0
return	40	31	4	0
a	41	32	3	0
+	42	33	2	0
b	43	34	1	0

35 41:
getword	1	0	48	38
re	28	18	21	11
search	29	19	20	10
endofword	31	21	18	8
lstrip	46	36	3	0
and	6	0	43	33
not	7	0	42	32
self	8	0	41	31
buf	9	0	40	30
self	10	0	39	29
buf	11	1	38	28
=	12	2	37	27
self	13	3	36	26
handle	14	4	35	25
readline	15	5	34	24
strip	16	6	33	23
if	17	7	32	22
not	18	8	31	21
self	19	9	30	20
handle	20	10	29	19
and	21	11	28	18
not	22	12	27	17
self	23	13	26	16
buf	24	14	25	15
return	25	15	24	14
p	26	16	23	13
=	27	17	22	12
self	30	20	19	9
self	32	22	17	7
buf	33	23	16	6
start	34	24	15	5
word	35	25	14	4
=	36	26	13	3
self	37	27	12	2
buf	38	28	11	1
p	39	29	10	0
self	40	30	9	0
buf	41	31	8	0
=	42	32	7	0
self	43	33	6	0
buf	44	34	5	0
p	45	35	4	0
return	47	37	2	0
word	48	38	1	0

193 206:
master	1	0	81	64
prog	3	0	79	62
inputfn	4	0	78	61
testfns	8	0	74	57
semaphore	12	0	70	53
mp	14	0	68	51
boundedsemaphore	15	0	67	50
jobs	17	0	65	48
clean_results	20	3	62	45
testfn	22	5	60	43
testfns	24	7	58	41
testname	25	8	57	40
testfn	27	10	55	38
7	29	12	53	36
testoutfn	30	13	52	35
testname	32	15	50	33
exists	38	21	44	27

209 220:
argparse	4	0	65	51
argumentparser	5	0	64	50
description	6	0	63	49
some	9	0	60	46
gcj	10	0	59	45
task.	11	0	58	44
metavar	15	1	54	40
--test-case	20	6	49	35
-p	23	9	46	32
--clean-pickles	24	10	45	31
store_true	27	13	42	28
-r	30	16	39	25
--clean-results	31	17	38	24
store_true	34	20	35	21

24 25:
bool	4	2	3	1
ok	1	0	6	4
self	2	0	5	3
return	3	1	4	2
self	5	3	2	0
handle	6	4	1	0

51 57:
def	0	0	65	52
win	1	0	64	51
self	2	0	63	50
l	3	0	62	49
r	4	0	61	48
if	5	0	60	47
l	6	0	59	46
==	7	0	58	45
p	8	0	57	44
and	9	0	56	43
r	10	0	55	42
==	11	0	54	41
r	12	0	53	40
return	13	0	52	39
p	14	1	51	38
if	15	2	50	37
l	16	3	49	36
==	17	4	48	35
p	18	5	47	34
and	19	6	46	33
r	20	7	45	32
==	21	8	44	31
s	22	9	43	30
return	23	10	42	29
s	24	11	41	28
if	25	12	40	27
l	26	13	39	26
==	27	14	38	25
r	28	15	37	24
and	29	16	36	23
r	30	17	35	22
==	31	18	34	21
p	32	19	33	20
return	33	20	32	19
p	34	21	31	18
if	35	22	30	17
l	36	23	29	16
==	37	24	28	15
r	38	25	27	14
and	39	26	26	13
r	40	27	25	12
==	41	28	24	11
s	42	29	23	10
return	43	30	22	9
r	44	31	21	8
if	45	32	20	7
l	46	33	19	6
==	47	34	18	5
s	48	35	17	4
and	49	36	16	3
r	50	37	15	2
==	51	38	14	1
p	52	39	13	0
return	53	40	12	0
s	54	41	11	0
if	55	42	10	0
l	56	43	9	0
==	57	44	8	0
s	58	45	7	0
and	59	46	6	0
r	60	47	5	0
==	61	48	4	0
r	62	49	3	0
return	63	50	2	0
r	64	51	1	0

135 144:
slave	1	0	42	33
testfn	3	0	40	31
testname	7	0	36	27
testfn	9	0	34	25
7	11	2	32	23
testtmpfn	12	3	31	22
testname	14	5	29	20
.tmp	16	7	27	18
load	20	11	23	14

27 30:
getline	1	0	18	14
self	2	0	17	13
if	3	0	16	12
self	4	0	15	11
buf	5	1	14	10
return	6	2	13	9
self	7	3	12	8
buf	8	4	11	7
if	9	5	10	6
self	10	6	9	5
handle	11	7	8	4
return	12	8	7	3
self	13	9	6	2
handle	14	10	5	1
readline	15	11	4	0
-	16	12	3	0
1	17	13	2	0
return	18	14	1	0

169 178:
runsolvemode	1	0	43	34
semaphore	2	0	42	33
prog	3	0	41	32
inputfn	4	0	40	31
testfn	5	0	39	30
testname	6	0	38	29
testfn	8	0	36	27
7	10	1	34	25
semaphore	11	2	33	24

59 66:
def	0	0	50	40
ok	1	0	49	39
self	2	0	48	38
a	3	0	47	37
if	4	0	46	36
len	5	0	45	35
a	6	0	44	34
<=	7	0	43	33
1	8	0	42	32
return	9	0	41	31
true	10	0	40	30
b	11	1	39	29
=	12	2	38	28
for	13	3	37	27
i	14	4	36	26
in	15	5	35	25
range	16	6	34	24
len	17	7	33	23
a	18	8	32	22
//	19	9	31	21
2	20	10	30	20
l	21	11	29	19
r	22	12	28	18
=	23	13	27	17
a	24	14	26	16
2	25	15	25	15
*	26	16	24	14
i	27	17	23	13
a	28	18	22	12
2	29	19	21	11
*	30	20	20	10
i	31	21	19	9
+	32	22	18	8
1	33	23	17	7
if	34	24	16	6
l	35	25	15	5
==	36	26	14	4
r	37	27	13	3
return	38	28	12	2
false	39	29	11	1
b	40	30	10	0
append	41	31	9	0
self	42	32	8	0
win	43	33	7	0
l	44	34	6	0
r	45	35	5	0
return	46	36	4	0
self	47	37	3	0
ok	48	38	2	0
b	49	39	1	0

181 190:
merge	1	0	54	43
inputfn	2	0	53	42
testfns	3	0	52	41
inputname	4	0	51	40
inputfn	6	0	49	38
inputfn	10	0	45	34
endswith	11	0	44	33
inputfn	14	3	41	30
outputfn	15	4	40	29
inputname	17	6	38	27
outputfn	23	12	32	21

68 97:
makerow	1	0	194	155
wc	13	0	182	143
makerow	74	35	121	82
makerow	125	86	70	31
if	5	0	190	151
n	6	0	189	150
==	7	0	188	149
0	8	0	187	148
return	9	0	186	147
w	10	0	185	146
2	11	0	184	145
1	12	0	183	144
=	14	0	181	142
w	15	0	180	141
0	16	0	179	140
for	17	0	178	139
w	18	0	177	138
in	19	0	176	137
w	20	0	175	136
if	21	0	174	135
n	22	0	173	134
%	23	0	172	133
2	24	0	171	132
==	25	0	170	131
0	26	0	169	130
t	27	0	168	129
=	28	0	167	128
len	29	0	166	127
w	30	0	165	126
//	31	0	164	125
3	32	0	163	124
h	33	0	162	123
=	34	0	161	122
t	35	0	160	121
+	36	0	159	120
1	37	0	158	119
//	38	0	157	118
2	39	0	156	117
ww	40	1	155	116
=	41	2	154	115
h	42	3	153	114
-	43	4	152	113
1	44	5	151	112
self	45	6	150	111
win	46	7	149	110
w	47	8	148	109
0	48	9	147	108
1	49	10	146	107
w	50	11	145	106
1	51	12	144	105
1	52	13	143	104
h	53	14	142	103
self	54	15	141	102
win	55	16	140	101
w	56	17	139	100
0	57	18	138	99
1	58	19	137	98
w	59	20	136	97
2	60	21	135	96
1	61	22	134	95
h	62	23	133	94
self	63	24	132	93
win	64	25	131	92
w	65	26	130	91
1	66	27	129	90
1	67	28	128	89
w	68	29	127	88
2	69	30	126	87
1	70	31	125	86
nr	71	32	124	85
=	72	33	123	84
self	73	34	122	83
ww	75	36	120	81
n	76	37	119	80
-	77	38	118	79
1	78	39	117	78
else	79	40	116	77
t	80	41	115	76
=	81	42	114	75
len	82	43	113	74
w	83	44	112	73
//	84	45	111	72
3	85	46	110	71
h	86	47	109	70
=	87	48	108	69
t	88	49	107	68
//	89	50	106	67
2	90	51	105	66
ww	91	52	104	65
=	92	53	103	64
h	93	54	102	63
self	94	55	101	62
win	95	56	100	61
w	96	57	99	60
0	97	58	98	59
1	98	59	97	58
w	99	60	96	57
1	100	61	95	56
1	101	62	94	55
h	102	63	93	54
self	103	64	92	53
win	104	65	91	52
w	105	66	90	51
0	106	67	89	50
1	107	68	88	49
w	108	69	87	48
2	109	70	86	47
1	110	71	85	46
h	111	72	84	45
+	112	73	83	44
1	113	74	82	43
self	114	75	81	42
win	115	76	80	41
w	116	77	79	40
1	117	78	78	39
1	118	79	77	38
w	119	80	76	37
2	120	81	75	36
1	121	82	74	35
nr	122	83	73	34
=	123	84	72	33
self	124	85	71	32
ww	126	87	69	30
n	127	88	68	29
-	128	89	67	28
1	129	90	66	27
ret	130	91	65	26
=	131	92	64	25
for	132	93	63	24
a	133	94	62	23
in	134	95	61	22
nr	135	96	60	21
if	136	97	59	20
a	137	98	58	19
==	138	99	57	18
self	139	100	56	17
win	140	101	55	16
w	141	102	54	15
0	142	103	53	14
1	143	104	52	13
w	144	105	51	12
1	145	106	50	11
1	146	107	49	10
ret	147	108	48	9
+=	148	109	47	8
w	149	110	46	7
0	150	111	45	6
1	151	112	44	5
w	152	113	43	4
1	153	114	42	3
1	154	115	41	2
if	155	116	40	1
a	156	117	39	0
==	157	118	38	0
self	158	119	37	0
win	159	120	36	0
w	160	121	35	0
0	161	122	34	0
1	162	123	33	0
w	163	124	32	0
2	164	125	31	0
1	165	126	30	0
ret	166	127	29	0
+=	167	128	28	0
w	168	129	27	0
0	169	130	26	0
1	170	131	25	0
w	171	132	24	0
2	172	133	23	0
1	173	134	22	0
if	174	135	21	0
a	175	136	20	0
==	176	137	19	0
self	177	138	18	0
win	178	139	17	0
w	179	140	16	0
1	180	141	15	0
1	181	142	14	0
w	182	143	13	0
2	183	144	12	0
1	184	145	11	0
ret	185	146	10	0
+=	186	147	9	0
w	187	148	8	0
1	188	149	7	0
1	189	150	6	0
w	190	151	5	0
2	191	152	4	0
1	192	153	3	0
return	193	154	2	0
ret	194	155	1	0

