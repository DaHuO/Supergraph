56 91:
get_game	1	0	182	145
exception	20	0	163	126
game	27	0	156	119
game	29	0	154	117
n0	74	37	109	72
p0	80	43	103	66
r0	89	52	94	57
s0	97	60	86	49
n0	101	64	82	45
p0	103	66	80	43
r0	105	68	78	41
s0	107	70	76	39
s0	111	74	72	35
left_res	116	79	67	30
right_res	120	83	63	26
left_res	125	88	58	21
right_res	126	89	57	20
first_result	129	92	54	17
get_game	131	94	52	15
n0	132	95	51	14
p0	133	96	50	13
r0	134	97	49	12
left_res	135	98	48	11
second_result	136	99	47	10
get_game	138	101	45	8
n0	139	102	44	7
p0	142	105	41	4
r0	145	108	38	1
right_res	146	109	37	0
first_result	148	111	35	0
second_result	152	115	31	0
new_result	156	119	27	0
first_result	158	121	25	0
second_result	160	123	23	0
new_result	167	130	16	0
new_result	173	136	10	0
game	174	137	9	0

5 13:
to_string	1	0	27	21
state	2	0	26	20
s	3	0	25	19
=	4	0	24	18
if	5	0	23	17
state	6	0	22	16
&	7	1	21	15
1	8	2	20	14
s	9	3	19	13
+=	10	4	18	12
p	11	5	17	11
if	12	6	16	10
state	13	7	15	9
&	14	8	14	8
2	15	9	13	7
s	16	10	12	6
+=	17	11	11	5
r	18	12	10	4
if	19	13	9	3
state	20	14	8	2
&	21	15	7	1
4	22	16	6	0
s	23	17	5	0
+=	24	18	4	0
s	25	19	3	0
return	26	20	2	0
state	27	21	1	0

109 112:
def	0	0	16	12
main	1	0	15	11
t	2	0	14	10
=	3	0	13	9
int	4	0	12	8
raw_input	5	1	11	7
for	6	2	10	6
case_no	7	3	9	5
in	8	4	8	4
xrange	9	5	7	3
1	10	6	6	2
t	11	7	5	1
+	12	8	4	0
1	13	9	3	0
solve	14	10	2	0
case_no	15	11	1	0

28 40:
exception	49	39	1	0
winner	1	0	49	39
a	2	0	48	38
b	3	0	47	37
if	4	0	46	36
a	5	0	45	35
==	6	0	44	34
b	7	0	43	33
return	8	0	42	32
if	9	0	41	31
a	10	0	40	30
>	11	1	39	29
b	12	2	38	28
a	13	3	37	27
b	14	4	36	26
=	15	5	35	25
b	16	6	34	24
a	17	7	33	23
if	18	8	32	22
a	19	9	31	21
==	20	10	30	20
p	21	11	29	19
and	22	12	28	18
b	23	13	27	17
==	24	14	26	16
r	25	15	25	15
return	26	16	24	14
p	27	17	23	13
if	28	18	22	12
a	29	19	21	11
==	30	20	20	10
p	31	21	19	9
and	32	22	18	8
b	33	23	17	7
==	34	24	16	6
s	35	25	15	5
return	36	26	14	4
s	37	27	13	3
if	38	28	12	2
a	39	29	11	1
==	40	30	10	0
r	41	31	9	0
and	42	32	8	0
b	43	33	7	0
==	44	34	6	0
s	45	35	5	0
return	46	36	4	0
r	47	37	3	0
raise	48	38	2	0

94 106:
cur_game	19	7	39	27
get_game	21	9	37	25
cur_game	27	15	31	19
cur_game	37	25	21	9
cur_game	43	31	15	3
p	5	0	53	41
s	6	0	52	40
=	7	0	51	39
map	8	0	50	38
int	9	0	49	37
raw_input	10	0	48	36
split	11	0	47	35
answer	12	0	46	34
=	13	1	45	33
none	14	2	44	32
for	15	3	43	31
res	16	4	42	30
in	17	5	41	29
prs	18	6	40	28
=	20	8	38	26
n	22	10	36	24
p	23	11	35	23
r	24	12	34	22
res	25	13	33	21
if	26	14	32	20
is	28	16	30	18
not	29	17	29	17
none	30	18	28	16
if	31	19	27	15
answer	32	20	26	14
is	33	21	25	13
none	34	22	24	12
answer	35	23	23	11
=	36	24	22	10
else	38	26	20	8
answer	39	27	19	7
=	40	28	18	6
min	41	29	17	5
answer	42	30	16	4
if	44	32	14	2
answer	45	33	13	1
is	46	34	12	0
none	47	35	11	0
answer	48	36	10	0
=	49	37	9	0
impossible	50	38	8	0
print	51	39	7	0
case	52	40	6	0
#%d:	53	41	5	0
%s	54	42	4	0
%	55	43	3	0
case_no	56	44	2	0
answer	57	45	1	0

43 53:
fight	1	0	44	35
state1	2	0	43	34
state2	3	0	42	33
fight_table	5	0	40	31
state1	6	0	39	30
state2	7	0	38	29
fight_table	12	3	33	24
state1	13	4	32	23
state2	14	5	31	22

16 25:
to_state	1	0	32	25
string	2	0	31	24
result	3	0	30	23
=	4	0	29	22
0	5	0	28	21
for	6	0	27	20
c	7	0	26	19
in	8	1	25	18
string	9	2	24	17
if	10	3	23	16
c	11	4	22	15
==	12	5	21	14
p	13	6	20	13
result	14	7	19	12
+=	15	8	18	11
1	16	9	17	10
elif	17	10	16	9
c	18	11	15	8
==	19	12	14	7
r	20	13	13	6
result	21	14	12	5
+=	22	15	11	4
2	23	16	10	3
elif	24	17	9	2
c	25	18	8	1
==	26	19	7	0
s	27	20	6	0
result	28	21	5	0
+=	29	22	4	0
4	30	23	3	0
return	31	24	2	0
result	32	25	1	0

