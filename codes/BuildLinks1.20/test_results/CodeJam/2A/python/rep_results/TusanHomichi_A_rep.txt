55 60:
find_min	18	12	8	2
solve	1	0	25	19
n	2	0	24	18
r	3	0	23	17
p	4	0	22	16
s	5	0	21	15
=	6	0	20	14
map	7	1	19	13
int	8	2	18	12
raw_input	9	3	17	11
split	10	4	16	10
	11	5	15	9
if	12	6	14	8
check	13	7	13	7
p	14	8	12	6
r	15	9	11	5
s	16	10	10	4
return	17	11	9	3
p	19	13	7	1
r	20	14	6	0
s	21	15	5	0
prs	22	16	4	0
else	23	17	3	0
return	24	18	2	0
impossible	25	19	1	0

14 20:
solve_pair	1	0	32	25
p	2	0	31	24
if	3	0	30	23
p	4	0	29	22
==	5	0	28	21
pr	6	0	27	20
or	7	0	26	19
p	8	1	25	18
==	9	2	24	17
rp	10	3	23	16
return	11	4	22	15
p	12	5	21	14
if	13	6	20	13
p	14	7	19	12
==	15	8	18	11
ps	16	9	17	10
or	17	10	16	9
p	18	11	15	8
==	19	12	14	7
sp	20	13	13	6
return	21	14	12	5
s	22	15	11	4
if	23	16	10	3
p	24	17	9	2
==	25	18	8	1
rs	26	19	7	0
or	27	20	6	0
p	28	21	5	0
==	29	22	4	0
sr	30	23	3	0
return	31	24	2	0
r	32	25	1	0

3 12:
def	0	0	58	46
check	1	0	57	45
p	2	0	56	44
r	3	0	55	43
s	4	0	54	42
if	5	0	53	41
p	6	0	52	40
+	7	0	51	39
r	8	0	50	38
+	9	0	49	37
s	10	0	48	36
==	11	0	47	35
1	12	0	46	34
return	13	1	45	33
true	14	2	44	32
pairs	15	3	43	31
=	16	4	42	30
p	17	5	41	29
+	18	6	40	28
r	19	7	39	27
+	20	8	38	26
s	21	9	37	25
/	22	10	36	24
2	23	11	35	23
pr	24	12	34	22
=	25	13	33	21
pairs	26	14	32	20
-	27	15	31	19
s	28	16	30	18
ps	29	17	29	17
=	30	18	28	16
pairs	31	19	27	15
-	32	20	26	14
r	33	21	25	13
rs	34	22	24	12
=	35	23	23	11
pairs	36	24	22	10
-	37	25	21	9
p	38	26	20	8
if	39	27	19	7
pr	40	28	18	6
<	41	29	17	5
0	42	30	16	4
or	43	31	15	3
ps	44	32	14	2
<	45	33	13	1
0	46	34	12	0
or	47	35	11	0
rs	48	36	10	0
<	49	37	9	0
0	50	38	8	0
return	51	39	7	0
false	52	40	6	0
return	53	41	5	0
check	54	42	4	0
pr	55	43	3	0
rs	56	44	2	0
ps	57	45	1	0

22 53:
find_min	1	0	149	119
new_ord	56	26	94	64
solve_pair	58	28	92	62
solve_pair	65	35	85	55
solve_pair	72	42	78	48
find_min	80	50	70	40
new_ord	84	54	66	36
+	8	0	142	112
r	9	0	141	111
+	10	0	140	110
s	11	0	139	109
==	12	0	138	108
1	13	0	137	107
if	14	0	136	106
p	15	0	135	105
==	16	0	134	104
1	17	0	133	103
return	18	0	132	102
p	19	0	131	101
if	20	0	130	100
r	21	0	129	99
==	22	0	128	98
1	23	0	127	97
return	24	0	126	96
r	25	0	125	95
if	26	0	124	94
s	27	0	123	93
==	28	0	122	92
1	29	0	121	91
return	30	0	120	90
s	31	1	119	89
pairs	32	2	118	88
=	33	3	117	87
p	34	4	116	86
+	35	5	115	85
r	36	6	114	84
+	37	7	113	83
s	38	8	112	82
/	39	9	111	81
2	40	10	110	80
pr	41	11	109	79
=	42	12	108	78
pairs	43	13	107	77
-	44	14	106	76
s	45	15	105	75
ps	46	16	104	74
=	47	17	103	73
pairs	48	18	102	72
-	49	19	101	71
r	50	20	100	70
rs	51	21	99	69
=	52	22	98	68
pairs	53	23	97	67
-	54	24	96	66
p	55	25	95	65
=	57	27	93	63
order	59	29	91	61
0	60	30	90	60
+	61	31	89	59
order	62	32	88	58
1	63	33	87	57
+	64	34	86	56
order	66	36	84	54
0	67	37	83	53
+	68	38	82	52
order	69	39	81	51
2	70	40	80	50
+	71	41	79	49
order	73	43	77	47
1	74	44	76	46
+	75	45	75	45
order	76	46	74	44
2	77	47	73	43
s	78	48	72	42
=	79	49	71	41
pr	81	51	69	39
rs	82	52	68	38
ps	83	53	67	37
ret	85	55	65	35
=	86	56	64	34
for	87	57	63	33
c	88	58	62	32
in	89	59	61	31
s	90	60	60	30
if	91	61	59	29
c	92	62	58	28
==	93	63	57	27
p	94	64	56	26
if	95	65	55	25
order	96	66	54	24
find	97	67	53	23
p	98	68	52	22
<	99	69	51	21
order	100	70	50	20
find	101	71	49	19
r	102	72	48	18
ret	103	73	47	17
+=	104	74	46	16
pr	105	75	45	15
else	106	76	44	14
ret	107	77	43	13
+=	108	78	42	12
rp	109	79	41	11
if	110	80	40	10
c	111	81	39	9
==	112	82	38	8
r	113	83	37	7
if	114	84	36	6
order	115	85	35	5
find	116	86	34	4
r	117	87	33	3
<	118	88	32	2
order	119	89	31	1
find	120	90	30	0
s	121	91	29	0
ret	122	92	28	0
+=	123	93	27	0
rs	124	94	26	0
else	125	95	25	0
ret	126	96	24	0
+=	127	97	23	0
sr	128	98	22	0
if	129	99	21	0
c	130	100	20	0
==	131	101	19	0
s	132	102	18	0
if	133	103	17	0
order	134	104	16	0
find	135	105	15	0
s	136	106	14	0
<	137	107	13	0
order	138	108	12	0
find	139	109	11	0
p	140	110	10	0
ret	141	111	9	0
+=	142	112	8	0
sp	143	113	7	0
else	144	114	6	0
ret	145	115	5	0
+=	146	116	4	0
ps	147	117	3	0
return	148	118	2	0
ret	149	119	1	0

