18 31:
def	0	0	49	39
generate	1	0	48	38
start	2	0	47	37
rs	3	0	46	36
ss	4	0	45	35
ps	5	0	44	34
n	6	0	43	33
ans	7	0	42	32
=	8	0	41	31
start	9	0	40	30
while	10	0	39	29
n	11	1	38	28
>	12	2	37	27
0	13	3	36	26
ans1	14	4	35	25
=	15	5	34	24
for	16	6	33	23
s	17	7	32	22
in	18	8	31	21
ans	19	9	30	20
s1	20	10	29	19
rs	21	11	28	18
ss	22	12	27	17
ps	23	13	26	16
=	24	14	25	15
expand	25	15	24	14
s	26	16	23	13
rs	27	17	22	12
ss	28	18	21	11
ps	29	19	20	10
n	30	20	19	9
if	31	21	18	8
s1	32	22	17	7
is	33	23	16	6
none	34	24	15	5
return	35	25	14	4
none	36	26	13	3
ans1	37	27	12	2
+=	38	28	11	1
s1	39	29	10	0
ans	40	30	9	0
=	41	31	8	0
join	42	32	7	0
ans1	43	33	6	0
n	44	34	5	0
-=	45	35	4	0
1	46	36	3	0
return	47	37	2	0
ans	48	38	1	0

45 46:
filter	9	3	17	11
get_possible_starts	20	14	6	0
n	2	0	24	18
r	3	0	23	17
p	4	0	22	16
s	5	0	21	15
return	6	0	20	14
min	7	1	19	13
list	8	2	18	12
none	10	4	16	10
generate	11	5	15	9
ss	12	6	14	8
r	13	7	13	7
s	14	8	12	6
p	15	9	11	5
n	16	10	10	4
for	17	11	9	3
ss	18	12	8	2
in	19	13	7	1
r	21	15	5	0
p	22	16	4	0
s	23	17	3	0
or	24	18	2	0
impossible	25	19	1	0

4 15:
def	0	0	69	55
expand	1	0	68	54
s	2	0	67	53
rs	3	0	66	52
ss	4	0	65	51
ps	5	0	64	50
n	6	0	63	49
ans	7	0	62	48
=	8	0	61	47
none	9	0	60	46
if	10	0	59	45
s	11	0	58	44
==	12	0	57	43
s	13	0	56	42
and	14	0	55	41
ps	15	1	54	40
>	16	2	53	39
0	17	3	52	38
ans	18	4	51	37
=	19	5	50	36
ps	20	6	49	35
if	21	7	48	34
n	22	8	47	33
<=	23	9	46	32
2	24	10	45	31
else	25	11	44	30
sp	26	12	43	29
ps	27	13	42	28
-=	28	14	41	27
1	29	15	40	26
elif	30	16	39	25
s	31	17	38	24
==	32	18	37	23
p	33	19	36	22
and	34	20	35	21
rs	35	21	34	20
>	36	22	33	19
0	37	23	32	18
ans	38	24	31	17
=	39	25	30	16
pr	40	26	29	15
rs	41	27	28	14
-=	42	28	27	13
1	43	29	26	12
elif	44	30	25	11
s	45	31	24	10
==	46	32	23	9
r	47	33	22	8
and	48	34	21	7
ss	49	35	20	6
>	50	36	19	5
0	51	37	18	4
ans	52	38	17	3
=	53	39	16	2
rs	54	40	15	1
if	55	41	14	0
n	56	42	13	0
==	57	43	12	0
1	58	44	11	0
else	59	45	10	0
sr	60	46	9	0
ss	61	47	8	0
-=	62	48	7	0
1	63	49	6	0
return	64	50	5	0
ans	65	51	4	0
rs	66	52	3	0
ss	67	53	2	0
ps	68	54	1	0

49 53:
def	0	0	37	29
main	1	0	36	28
t	2	0	35	27
=	3	0	34	26
int	4	0	33	25
input	5	0	32	24
for	6	0	31	23
i	7	0	30	22
in	8	0	29	21
range	9	1	28	20
1	10	2	27	19
t	11	3	26	18
+	12	4	25	17
1	13	5	24	16
n	14	6	23	15
r	15	7	22	14
p	16	8	21	13
s	17	9	20	12
=	18	10	19	11
int	19	11	18	10
x	20	12	17	9
for	21	13	16	8
x	22	14	15	7
in	23	15	14	6
input	24	16	13	5
split	25	17	12	4
print	26	18	11	3
case	27	19	10	2
#{}:	28	20	9	1
{}	29	21	8	0
format	30	22	7	0
i	31	23	6	0
solve	32	24	5	0
n	33	25	4	0
r	34	26	3	0
p	35	27	2	0
s	36	28	1	0

34 42:
get_possible_starts	1	0	29	23
r	2	0	28	22
p	3	0	27	21
s	4	0	26	20
ans	5	0	25	19
=	6	0	24	18
if	7	1	23	17
r	8	2	22	16
>	9	3	21	15
0	10	4	20	14
ans	11	5	19	13
append	12	6	18	12
r	13	7	17	11
if	14	8	16	10
s	15	9	15	9
>	16	10	14	8
0	17	11	13	7
ans	18	12	12	6
append	19	13	11	5
s	20	14	10	4
if	21	15	9	3
p	22	16	8	2
>	23	17	7	1
0	24	18	6	0
ans	25	19	5	0
append	26	20	4	0
p	27	21	3	0
return	28	22	2	0
ans	29	23	1	0

