34 43:
candidate	9	0	40	30
candidate	26	16	23	13
candidate	35	25	14	4
candidate	36	26	13	3
candidate	46	36	3	0
candidate	48	38	1	0
s	6	0	43	33
=	7	0	42	32
t	8	0	41	31
=	10	0	39	29
none	11	1	38	28
for	12	2	37	27
c	13	3	36	26
in	14	4	35	25
best	15	5	34	24
if	16	6	33	23
best	17	7	32	22
c	18	8	31	21
n	19	9	30	20
1	20	10	29	19
==	21	11	28	18
r	22	12	27	17
p	23	13	26	16
s	24	14	25	15
if	25	15	24	14
==	27	17	22	12
none	28	18	21	11
or	29	19	20	10
best	30	20	19	9
c	31	21	18	8
n	32	22	17	7
0	33	23	16	6
<	34	24	15	5
=	37	27	12	2
best	38	28	11	1
c	39	29	10	0
n	40	30	9	0
0	41	31	8	0
return	42	32	7	0
impossible	43	33	6	0
if	44	34	5	0
not	45	35	4	0
else	47	37	2	0

14 15:
add_tuple	1	0	16	12
x	2	0	15	11
y	3	0	14	10
return	4	0	13	9
tuple	5	1	12	8
x	6	2	11	7
i	7	3	10	6
+	8	4	9	5
y	9	5	8	4
i	10	6	7	3
for	11	7	6	2
i	12	8	5	1
in	13	9	4	0
range	14	10	3	0
len	15	11	2	0
x	16	12	1	0

9 12:
def	0	0	14	11
order	1	0	13	10
x	2	0	12	9
y	3	0	11	8
if	4	1	10	7
x	5	2	9	6
<	6	3	8	5
y	7	4	7	4
return	8	5	6	3
x	9	6	5	2
y	10	7	4	1
return	11	8	3	0
y	12	9	2	0
x	13	10	1	0

