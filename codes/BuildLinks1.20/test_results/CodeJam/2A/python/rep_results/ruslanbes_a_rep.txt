25 78:
itemgetter	110	51	182	123
pairs2	155	96	137	78
pairs1	162	103	130	71
pairs2	168	109	124	65
sortpair	173	114	119	60
pairs1	184	125	108	49
sortpair	187	128	105	46
pairs2	198	139	94	35
sortpair	201	142	91	32
pairs1	216	157	76	17
blocksize	253	194	39	0
blocksize	264	205	28	0
blocksize	270	211	22	0
sortpair	272	213	20	0
blocksize	276	217	16	0
blocksize	281	222	11	0
blocksize	288	229	4	0
int	17	0	275	216
raw_input	18	0	274	215
split	19	0	273	214
total	20	0	272	213
=	21	0	271	212
r	22	0	270	211
+	23	0	269	210
p	24	0	268	209
+	25	0	267	208
s	26	0	266	207
l	27	0	265	206
=	28	0	264	205
if	29	0	263	204
n	30	0	262	203
==	31	0	261	202
1	32	0	260	201
l	33	0	259	200
=	34	0	258	199
p	35	0	257	198
*	36	0	256	197
p	37	0	255	196
+	38	0	254	195
r	39	0	253	194
*	40	0	252	193
r	41	0	251	192
+	42	0	250	191
s	43	0	249	190
*	44	0	248	189
s	45	0	247	188
if	46	0	246	187
l	47	0	245	186
0	48	0	244	185
==	49	0	243	184
l	50	0	242	183
1	51	0	241	182
output	52	0	240	181
t	53	0	239	180
none	54	0	238	179
else	55	0	237	178
output	56	0	236	177
t	57	0	235	176
l	58	0	234	175
continue	59	0	233	174
if	60	1	232	173
p	61	2	231	172
>	62	3	230	171
r	63	4	229	170
+	64	5	228	169
s	65	6	227	168
or	66	7	226	167
r	67	8	225	166
>	68	9	224	165
p	69	10	223	164
+	70	11	222	163
s	71	12	221	162
or	72	13	220	161
s	73	14	219	160
>	74	15	218	159
p	75	16	217	158
+	76	17	216	157
r	77	18	215	156
output	78	19	214	155
t	79	20	213	154
none	80	21	212	153
continue	81	22	211	152
if	82	23	210	151
p	83	24	209	150
==	84	25	208	149
0	85	26	207	148
or	86	27	206	147
r	87	28	205	146
==	88	29	204	145
0	89	30	203	144
or	90	31	202	143
s	91	32	201	142
==	92	33	200	141
0	93	34	199	140
output	94	35	198	139
t	95	36	197	138
none	96	37	196	137
continue	97	38	195	136
players	98	39	194	135
=	99	40	193	134
p	100	41	192	133
p	101	42	191	132
r	102	43	190	131
r	103	44	189	130
s	104	45	188	129
s	105	46	187	128
players	106	47	186	127
sort	107	48	185	126
key	108	49	184	125
=	109	50	183	124
1	111	52	181	122
reverse	112	53	180	121
=	113	54	179	120
true	114	55	178	119
d	115	56	177	118
=	116	57	176	117
total	117	58	175	116
/	118	59	174	115
3	119	60	173	114
r	120	61	172	113
=	121	62	171	112
total	122	63	170	111
-	123	64	169	110
3	124	65	168	109
*	125	66	167	108
d	126	67	166	107
if	127	68	165	106
players	128	69	164	105
2	129	70	163	104
1	130	71	162	103
!=	131	72	161	102
d	132	73	160	101
or	133	74	159	100
players	134	75	158	99
0	135	76	157	98
1	136	77	156	97
!=	137	78	155	96
d	138	79	154	95
+	139	80	153	94
1	140	81	152	93
or	141	82	151	92
players	142	83	150	91
1	143	84	149	90
1	144	85	148	89
!=	145	86	147	88
d	146	87	146	87
+	147	88	145	86
r	148	89	144	85
==	149	90	143	84
2	150	91	142	83
output	151	92	141	82
t	152	93	140	81
none	153	94	139	80
continue	154	95	138	79
=	156	97	136	77
players	157	98	135	76
0	158	99	134	75
1	159	100	133	74
/	160	101	132	73
2	161	102	131	72
=	163	104	129	70
players	164	105	128	69
0	165	106	127	68
1	166	107	126	67
-	167	108	125	66
pairs	169	110	123	64
=	170	111	122	63
key	171	112	121	62
=	172	113	120	61
players	174	115	118	59
0	175	116	117	58
0	176	117	116	57
+	177	118	115	56
players	178	119	114	55
1	179	120	113	54
0	180	121	112	53
pairs	181	122	111	52
append	182	123	110	51
key	183	124	109	50
key	185	126	107	48
=	186	127	106	47
players	188	129	104	45
0	189	130	103	44
0	190	131	102	43
+	191	132	101	42
players	192	133	100	41
2	193	134	99	40
0	194	135	98	39
pairs	195	136	97	38
append	196	137	96	37
key	197	138	95	36
key	199	140	93	34
=	200	141	92	33
players	202	143	90	31
1	203	144	89	30
0	204	145	88	29
+	205	146	87	28
players	206	147	86	27
2	207	148	85	26
0	208	149	84	25
pairs	209	150	83	24
append	210	151	82	23
key	211	152	81	22
players	212	153	80	21
1	213	154	79	20
1	214	155	78	19
-	215	156	77	18
l	217	158	75	16
=	218	159	74	15
for	219	160	73	14
i	220	161	72	13
in	221	162	71	12
xrange	222	163	70	11
total	223	164	69	10
/	224	165	68	9
2	225	166	67	8
i1	226	167	66	7
=	227	168	65	6
i	228	169	64	5
%	229	170	63	4
3	230	171	62	3
if	231	172	61	2
pairs	232	173	60	1
i1	233	174	59	0
1	234	175	58	0
>	235	176	57	0
0	236	177	56	0
l	237	178	55	0
+=	238	179	54	0
pairs	239	180	53	0
i1	240	181	52	0
0	241	182	51	0
pairs	242	183	50	0
i1	243	184	49	0
1	244	185	48	0
-=	245	186	47	0
1	246	187	46	0
for	247	188	45	0
j	248	189	44	0
in	249	190	43	0
xrange	250	191	42	0
2	251	192	41	0
n	252	193	40	0
=	254	195	38	0
2	255	196	37	0
**	256	197	36	0
j	257	198	35	0
for	258	199	34	0
i	259	200	33	0
in	260	201	32	0
xrange	261	202	31	0
total	262	203	30	0
/	263	204	29	0
l	265	206	27	0
=	266	207	26	0
l	267	208	25	0
i	268	209	24	0
*	269	210	23	0
+	271	212	21	0
l	273	214	19	0
i	274	215	18	0
*	275	216	17	0
i	277	218	15	0
+	278	219	14	0
1	279	220	13	0
*	280	221	12	0
+	282	223	10	0
l	283	224	9	0
i	284	225	8	0
+	285	226	7	0
1	286	227	6	0
*	287	228	5	0
output	289	230	3	0
t	290	231	2	0
l	291	232	1	0

6 10:
casestr	4	0	28	21
status	15	8	17	10
outputline	25	18	7	0
casestr	27	20	5	0
status	29	22	3	0
outputline	31	24	1	0
#	7	0	25	18
+	8	1	24	17
str	9	2	23	16
t	10	3	22	15
+	11	4	21	14
1	12	5	20	13
+	13	6	19	12
:	14	7	18	11
=	16	9	16	9
str	17	10	15	8
res	18	11	14	7
if	19	12	13	6
res	20	13	12	5
!=	21	14	11	4
none	22	15	10	3
else	23	16	9	2
impossible	24	17	8	1
=	26	19	6	0
+	28	21	4	0
print	30	23	2	0

14 23:
sortpair	1	0	26	20
pair	2	0	25	19
n	3	0	24	18
=	4	0	23	17
len	5	0	22	16
pair	6	0	21	15
/	7	1	20	14
2	8	2	19	13
l	9	3	18	12
=	10	4	17	11
pair	11	5	16	10
n	12	6	15	9
r	13	7	14	8
=	14	8	13	7
pair	15	9	12	6
n	16	10	11	5
if	17	11	10	4
l	18	12	9	3
>	19	13	8	2
r	20	14	7	1
return	21	15	6	0
r	22	16	5	0
+	23	17	4	0
l	24	18	3	0
return	25	19	2	0
pair	26	20	1	0

