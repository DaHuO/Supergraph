4 13:
convert	1	0	38	30
error	35	27	4	0
if	3	0	36	28
s	4	0	35	27
==	5	0	34	26
pr	6	0	33	25
or	7	0	32	24
s	8	0	31	23
==	9	1	30	22
rp	10	2	29	21
return	11	3	28	20
p	12	4	27	19
elif	13	5	26	18
s	14	6	25	17
==	15	7	24	16
ps	16	8	23	15
or	17	9	22	14
s	18	10	21	13
==	19	11	20	12
sp	20	12	19	11
return	21	13	18	10
s	22	14	17	9
elif	23	15	16	8
s	24	16	15	7
==	25	17	14	6
rs	26	18	13	5
or	27	19	12	4
s	28	20	11	3
==	29	21	10	2
sr	30	22	9	1
return	31	23	8	0
r	32	24	7	0
else	33	25	6	0
print	34	26	5	0
s	36	28	3	0
return	37	29	2	0
p	38	30	1	0

44 63:
subst	6	0	64	50
subst	32	18	38	24
subst	48	34	22	8
subst	60	46	10	0
news	4	0	66	52
=	5	0	65	51
=	7	0	63	49
lis	8	0	62	48
0	9	0	61	47
2	10	0	60	46
lis	11	0	59	45
1	12	0	58	44
lis	13	0	57	43
0	14	0	56	42
+	15	1	55	41
lis	16	2	54	40
2	17	3	53	39
for	18	4	52	38
j	19	5	51	37
in	20	6	50	36
range	21	7	49	35
len	22	8	48	34
s	23	9	47	33
if	24	10	46	32
s	25	11	45	31
j	26	12	44	30
==	27	13	43	29
p	28	14	42	28
if	29	15	41	27
pr	30	16	40	26
in	31	17	39	25
news	33	19	37	23
+=	34	20	36	22
pr	35	21	35	21
else	36	22	34	20
news	37	23	33	19
+=	38	24	32	18
rp	39	25	31	17
elif	40	26	30	16
s	41	27	29	15
j	42	28	28	14
==	43	29	27	13
s	44	30	26	12
if	45	31	25	11
ps	46	32	24	10
in	47	33	23	9
news	49	35	21	7
+=	50	36	20	6
ps	51	37	19	5
else	52	38	18	4
news	53	39	17	3
+=	54	40	16	2
sp	55	41	15	1
else	56	42	14	0
if	57	43	13	0
rs	58	44	12	0
in	59	45	11	0
news	61	47	9	0
+=	62	48	8	0
rs	63	49	7	0
else	64	50	6	0
news	65	51	5	0
+=	66	52	4	0
sr	67	53	3	0
return	68	54	2	0
news	69	55	1	0

67 94:
math	16	0	89	68
ceil	17	0	88	67
math	25	4	80	59
floor	26	5	79	58
p	4	0	101	80
s	5	0	100	79
=	6	0	99	78
int	7	0	98	77
e	8	0	97	76
for	9	0	96	75
e	10	0	95	74
in	11	0	94	73
input	12	0	93	72
split	13	0	92	71
up	14	0	91	70
=	15	0	90	69
2	18	0	87	66
**	19	0	86	65
n	20	0	85	64
/	21	0	84	63
3	22	1	83	62
low	23	2	82	61
=	24	3	81	60
2	27	6	78	57
**	28	7	77	56
n	29	8	76	55
/	30	9	75	54
3	31	10	74	53
if	32	11	73	52
r	33	12	72	51
<	34	13	71	50
low	35	14	70	49
or	36	15	69	48
r	37	16	68	47
>	38	17	67	46
up	39	18	66	45
return	40	19	65	44
impossible	41	20	64	43
if	42	21	63	42
p	43	22	62	41
<	44	23	61	40
low	45	24	60	39
or	46	25	59	38
p	47	26	58	37
>	48	27	57	36
up	49	28	56	35
return	50	29	55	34
impossible	51	30	54	33
if	52	31	53	32
s	53	32	52	31
<	54	33	51	30
low	55	34	50	29
or	56	35	49	28
s	57	36	48	27
>	58	37	47	26
up	59	38	46	25
return	60	39	45	24
impossible	61	40	44	23
nup	62	41	43	22
=	63	42	42	21
nlow	64	43	41	20
=	65	44	40	19
if	66	45	39	18
p	67	46	38	17
==	68	47	37	16
up	69	48	36	15
nup	70	49	35	14
append	71	50	34	13
p	72	51	33	12
else	73	52	32	11
nlow	74	53	31	10
append	75	54	30	9
p	76	55	29	8
if	77	56	28	7
r	78	57	27	6
==	79	58	26	5
up	80	59	25	4
nup	81	60	24	3
append	82	61	23	2
r	83	62	22	1
else	84	63	21	0
nlow	85	64	20	0
append	86	65	19	0
r	87	66	18	0
if	88	67	17	0
s	89	68	16	0
==	90	69	15	0
up	91	70	14	0
nup	92	71	13	0
append	93	72	12	0
s	94	73	11	0
else	95	74	10	0
nlow	96	75	9	0
append	97	76	8	0
s	98	77	7	0
return	99	78	6	0
order	100	79	5	0
nup	101	80	4	0
nlow	102	81	3	0
n	103	82	2	0
prs	104	83	1	0

15 42:
strin	99	73	28	2
convert	108	82	19	0
strin	125	99	2	0
low	3	0	124	98
n	4	0	123	97
lis	5	0	122	96
if	6	0	121	95
n	7	0	120	94
==	8	0	119	93
0	9	0	118	92
return	10	0	117	91
up	11	0	116	90
0	12	0	115	89
nup	13	0	114	88
=	14	0	113	87
nlow	15	0	112	86
=	16	0	111	85
if	17	0	110	84
len	18	0	109	83
up	19	0	108	82
==	20	0	107	81
1	21	0	106	80
if	22	0	105	79
p	23	0	104	78
==	24	0	103	77
up	25	0	102	76
0	26	0	101	75
nup	27	1	100	74
=	28	2	99	73
p	29	3	98	72
s	30	4	97	71
nlow	31	5	96	70
=	32	6	95	69
r	33	7	94	68
if	34	8	93	67
r	35	9	92	66
==	36	10	91	65
up	37	11	90	64
0	38	12	89	63
nup	39	13	88	62
=	40	14	87	61
r	41	15	86	60
p	42	16	85	59
nlow	43	17	84	58
=	44	18	83	57
s	45	19	82	56
if	46	20	81	55
s	47	21	80	54
==	48	22	79	53
up	49	23	78	52
0	50	24	77	51
nup	51	25	76	50
=	52	26	75	49
r	53	27	74	48
s	54	28	73	47
nlow	55	29	72	46
=	56	30	71	45
p	57	31	70	44
elif	58	32	69	43
len	59	33	68	42
low	60	34	67	41
==	61	35	66	40
1	62	36	65	39
if	63	37	64	38
p	64	38	63	37
==	65	39	62	36
low	66	40	61	35
0	67	41	60	34
nlow	68	42	59	33
=	69	43	58	32
p	70	44	57	31
s	71	45	56	30
nup	72	46	55	29
=	73	47	54	28
r	74	48	53	27
if	75	49	52	26
r	76	50	51	25
==	77	51	50	24
low	78	52	49	23
0	79	53	48	22
nlow	80	54	47	21
=	81	55	46	20
r	82	56	45	19
p	83	57	44	18
nup	84	58	43	17
=	85	59	42	16
s	86	60	41	15
if	87	61	40	14
s	88	62	39	13
==	89	63	38	12
low	90	64	37	11
0	91	65	36	10
nlow	92	66	35	9
=	93	67	34	8
r	94	68	33	7
s	95	69	32	6
nup	96	70	31	5
=	97	71	30	4
p	98	72	29	3
=	100	74	27	1
order	101	75	26	0
nup	102	76	25	0
nlow	103	77	24	0
n	104	78	23	0
-	105	79	22	0
1	106	80	21	0
join	107	81	20	0
e	109	83	18	0
for	110	84	17	0
e	111	85	16	0
in	112	86	15	0
lis	113	87	14	0
0	114	88	13	0
2	115	89	12	0
lis	116	90	11	0
0	117	91	10	0
+	118	92	9	0
lis	119	93	8	0
2	120	94	7	0
lis	121	95	6	0
1	122	96	5	0
return	123	97	4	0
replace	124	98	3	0
lis	126	100	1	0

