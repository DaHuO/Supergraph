12 13:
def	0	0	20	16
input	1	0	19	15
self	2	0	18	14
self	3	0	17	13
n	4	0	16	12
self	5	1	15	11
r	6	2	14	10
self	7	3	13	9
p	8	4	12	8
self	9	5	11	7
s	10	6	10	6
=	11	7	9	5
int	12	8	8	4
_	13	9	7	3
for	14	10	6	2
_	15	11	5	1
in	16	12	4	0
stdin	17	13	3	0
readline	18	14	2	0
split	19	15	1	0

59 64:
caseindex	3	0	24	18
caseindex	9	3	18	12
impossible\n	18	12	9	3
stdout	4	0	23	17
write	5	0	22	16
case	6	0	21	15
#%d:	7	1	20	14
%	8	2	19	13
if	10	4	17	11
len	11	5	16	10
self	12	6	15	9
result	13	7	14	8
==	14	8	13	7
0	15	9	12	6
stdout	16	10	11	5
write	17	11	10	4
else	19	13	8	2
stdout	20	14	7	1
write	21	15	6	0
%s\n	22	16	5	0
%	23	17	4	0
join	24	18	3	0
self	25	19	2	0
result	26	20	1	0

5 10:
caseindex	9	4	13	8
exe	16	11	6	1
caseindex	19	14	3	0
casenum	3	0	19	14
=	4	0	18	13
int	5	0	17	12
stdin	6	1	16	11
readline	7	2	15	10
for	8	3	14	9
in	10	5	12	7
range	11	6	11	6
casenum	12	7	10	5
self	13	8	9	4
input	14	9	8	3
self	15	10	7	2
self	17	12	5	0
output	18	13	4	0
+	20	15	2	0
1	21	16	1	0

15 31:
exe	1	0	94	75
oper	3	0	92	73
code	19	0	76	57
code	30	11	65	46
oper	52	33	43	24
s	7	0	88	69
self	8	0	87	68
length	9	0	86	67
=	10	0	85	66
1	11	0	84	65
<<	12	0	83	64
self	13	0	82	63
n	14	0	81	62
self	15	0	80	61
result	16	0	79	60
=	17	0	78	59
for	18	0	77	58
in	20	1	75	56
range	21	2	74	55
3	22	3	73	54
**	23	4	72	53
self	24	5	71	52
length	25	6	70	51
order	26	7	69	50
=	27	8	68	49
tmp	28	9	67	48
=	29	10	66	47
counts	31	12	64	45
=	32	13	63	44
0	33	14	62	43
0	34	15	61	42
0	35	16	60	41
for	36	17	59	40
i	37	18	58	39
in	38	19	57	38
range	39	20	56	37
self	40	21	55	36
length	41	22	54	35
r	42	23	53	34
=	43	24	52	33
tmp	44	25	51	32
%	45	26	50	31
3	46	27	49	30
tmp	47	28	48	29
/=	48	29	47	28
3	49	30	46	27
order	50	31	45	26
append	51	32	44	25
r	53	34	42	23
counts	54	35	41	22
r	55	36	40	21
+=	56	37	39	20
1	57	38	38	19
if	58	39	37	18
counts	59	40	36	17
0	60	41	35	16
==	61	42	34	15
self	62	43	33	14
p	63	44	32	13
and	64	45	31	12
counts	65	46	30	11
1	66	47	29	10
==	67	48	28	9
self	68	49	27	8
r	69	50	26	7
and	70	51	25	6
counts	71	52	24	5
2	72	53	23	4
==	73	54	22	3
self	74	55	21	2
s	75	56	20	1
if	76	57	19	0
self	77	58	18	0
check	78	59	17	0
order	79	60	16	0
if	80	61	15	0
len	81	62	14	0
self	82	63	13	0
result	83	64	12	0
==	84	65	11	0
0	85	66	10	0
or	86	67	9	0
self	87	68	8	0
result	88	69	7	0
>	89	70	6	0
order	90	71	5	0
self	91	72	4	0
result	92	73	3	0
=	93	74	2	0
order	94	75	1	0

33 57:
tmp1	12	0	104	80
tmp1	108	84	8	0
tmp1	113	89	3	0
order	3	0	113	89
tmp	4	0	112	88
=	5	0	111	87
order	6	0	110	86
while	7	0	109	85
len	8	0	108	84
tmp	9	0	107	83
>	10	0	106	82
1	11	0	105	81
=	13	0	103	79
for	14	0	102	78
i	15	0	101	77
in	16	0	100	76
range	17	0	99	75
len	18	0	98	74
tmp	19	0	97	73
>>	20	0	96	72
1	21	0	95	71
a	22	0	94	70
=	23	0	93	69
tmp	24	0	92	68
i	25	1	91	67
*	26	2	90	66
2	27	3	89	65
b	28	4	88	64
=	29	5	87	63
tmp	30	6	86	62
i	31	7	85	61
*	32	8	84	60
2	33	9	83	59
+	34	10	82	58
1	35	11	81	57
if	36	12	80	56
a	37	13	79	55
==	38	14	78	54
b	39	15	77	53
return	40	16	76	52
false	41	17	75	51
if	42	18	74	50
a	43	19	73	49
==	44	20	72	48
p	45	21	71	47
and	46	22	70	46
b	47	23	69	45
==	48	24	68	44
r	49	25	67	43
c	50	26	66	42
=	51	27	65	41
p	52	28	64	40
elif	53	29	63	39
a	54	30	62	38
==	55	31	61	37
p	56	32	60	36
and	57	33	59	35
b	58	34	58	34
==	59	35	57	33
s	60	36	56	32
c	61	37	55	31
=	62	38	54	30
s	63	39	53	29
elif	64	40	52	28
a	65	41	51	27
==	66	42	50	26
r	67	43	49	25
and	68	44	48	24
b	69	45	47	23
==	70	46	46	22
p	71	47	45	21
c	72	48	44	20
=	73	49	43	19
p	74	50	42	18
elif	75	51	41	17
a	76	52	40	16
==	77	53	39	15
r	78	54	38	14
and	79	55	37	13
b	80	56	36	12
==	81	57	35	11
s	82	58	34	10
c	83	59	33	9
=	84	60	32	8
r	85	61	31	7
elif	86	62	30	6
a	87	63	29	5
==	88	64	28	4
s	89	65	27	3
and	90	66	26	2
b	91	67	25	1
==	92	68	24	0
p	93	69	23	0
c	94	70	22	0
=	95	71	21	0
s	96	72	20	0
elif	97	73	19	0
a	98	74	18	0
==	99	75	17	0
s	100	76	16	0
and	101	77	15	0
b	102	78	14	0
==	103	79	13	0
r	104	80	12	0
c	105	81	11	0
=	106	82	10	0
r	107	83	9	0
append	109	85	7	0
c	110	86	6	0
tmp	111	87	5	0
=	112	88	4	0
return	114	90	2	0
true	115	91	1	0

