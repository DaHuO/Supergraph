49 51:
solve_case	1	0	18	14
n	2	0	17	13
r	3	0	16	12
p	4	0	15	11
s	5	1	14	10
if	6	2	13	9
not	7	3	12	8
okay	8	4	11	7
r	9	5	10	6
p	10	6	9	5
s	11	7	8	4
return	12	8	7	3
impossible	13	9	6	2
return	14	10	5	1
build	15	11	4	0
r	16	12	3	0
p	17	13	2	0
s	18	14	1	0

22 23:
readint	1	0	5	3
return	2	0	4	2
int	3	1	3	1
fi	4	2	2	0
readline	5	3	1	0

53 59:
def	0	0	52	41
okay	1	0	51	40
s	2	0	50	39
if	3	0	49	38
len	4	0	48	37
s	5	0	47	36
==	6	0	46	35
1	7	0	45	34
return	8	0	44	33
true	9	0	43	32
t	10	0	42	31
=	11	0	41	30
for	12	1	40	29
i	13	2	39	28
in	14	3	38	27
range	15	4	37	26
len	16	5	36	25
s	17	6	35	24
//	18	7	34	23
2	19	8	33	22
if	20	9	32	21
s	21	10	31	20
2	22	11	30	19
*	23	12	29	18
i	24	13	28	17
==	25	14	27	16
s	26	15	26	15
2	27	16	25	14
*	28	17	24	13
i	29	18	23	12
+	30	19	22	11
1	31	20	21	10
return	32	21	20	9
false	33	22	19	8
t	34	23	18	7
=	35	24	17	6
t	36	25	16	5
+	37	26	15	4
winner	38	27	14	3
s	39	28	13	2
2	40	29	12	1
*	41	30	11	0
i	42	31	10	0
s	43	32	9	0
2	44	33	8	0
*	45	34	7	0
i	46	35	6	0
+	47	36	5	0
1	48	37	4	0
return	49	38	3	0
okay	50	39	2	0
t	51	40	1	0

28 29:
read_case	1	0	3	2

72 76:
print_solution	1	0	21	16
solve_case	5	0	17	12
msg	9	4	13	8
msg	19	14	3	0
msg	21	16	1	0

25 26:
readints	1	0	10	7
return	2	0	9	6
int	3	0	8	5
x	4	1	7	4
for	5	2	6	3
x	6	3	5	2
in	7	4	4	1
fi	8	5	3	0
readline	9	6	2	0
split	10	7	1	0

62 63:
def	0	0	12	9
winner	1	0	11	8
a	2	0	10	7
b	3	0	9	6
return	4	1	8	5
w	5	2	7	4
min	6	3	6	3
a	7	4	5	2
b	8	5	4	1
max	9	6	3	0
a	10	7	2	0
b	11	8	1	0

31 34:
def	0	0	38	30
okay	1	0	37	29
r	2	0	36	28
p	3	0	35	27
s	4	0	34	26
if	5	0	33	25
r	6	0	32	24
+	7	0	31	23
p	8	0	30	22
+	9	1	29	21
s	10	2	28	20
<=	11	3	27	19
2	12	4	26	18
return	13	5	25	17
max	14	6	24	16
r	15	7	23	15
p	16	8	22	14
s	17	9	21	13
<	18	10	20	12
2	19	11	19	11
return	20	12	18	10
p	21	13	17	9
<=	22	14	16	8
r	23	15	15	7
+	24	16	14	6
s	25	17	13	5
and	26	18	12	4
r	27	19	11	3
<=	28	20	10	2
s	29	21	9	1
+	30	22	8	0
p	31	23	7	0
and	32	24	6	0
s	33	25	5	0
<=	34	26	4	0
p	35	27	3	0
+	36	28	2	0
r	37	29	1	0

65 70:
solve_case	1	0	40	31
sss	6	0	35	26
sss	29	20	12	3
p	4	0	37	28
s	5	0	36	27
=	7	0	34	25
r	8	0	33	24
*	9	0	32	23
r	10	1	31	22
+	11	2	30	21
p	12	3	29	20
*	13	4	28	19
p	14	5	27	18
+	15	6	26	17
s	16	7	25	16
*	17	8	24	15
s	18	9	23	14
poss	19	10	22	13
=	20	11	21	12
sorted	21	12	20	11
join	22	13	19	10
x	23	14	18	9
for	24	15	17	8
x	25	16	16	7
in	26	17	15	6
itertools	27	18	14	5
permutations	28	19	13	4
for	30	21	11	2
p	31	22	10	1
in	32	23	9	0
poss	33	24	8	0
if	34	25	7	0
okay	35	26	6	0
p	36	27	5	0
return	37	28	4	0
p	38	29	3	0
return	39	30	2	0
impossible	40	31	1	0

40 47:
sss	22	5	60	43
spair	29	12	53	36
outcome	30	13	52	35
sss	62	45	20	3
???	81	64	1	0
print	5	0	77	60
r	6	0	76	59
p	7	0	75	58
s	8	0	74	57
if	9	0	73	56
r	10	0	72	55
+	11	0	71	54
p	12	0	70	53
+	13	0	69	52
s	14	0	68	51
==	15	0	67	50
1	16	0	66	49
return	17	0	65	48
for	18	1	64	47
r	19	2	63	46
p	20	3	62	45
s	21	4	61	44
rr	23	6	59	42
rp	24	7	58	41
rs	25	8	57	40
in	26	9	56	39
zip	27	10	55	38
pairs	28	11	54	37
if	31	14	51	34
r	32	15	50	33
<=	33	16	49	32
r	34	17	48	31
and	35	18	47	30
s	36	19	46	29
<=	37	20	45	28
s	38	21	44	27
and	39	22	43	26
p	40	23	42	25
<=	41	24	41	24
p	42	25	40	23
if	43	26	39	22
okay	44	27	38	21
r	45	28	37	20
-	46	29	36	19
r	47	30	35	18
+	48	31	34	17
rr	49	32	33	16
s	50	33	32	15
-	51	34	31	14
s	52	35	30	13
+	53	36	29	12
rs	54	37	28	11
p	55	38	27	10
-	56	39	26	9
p	57	40	25	8
+	58	41	24	7
rp	59	42	23	6
continue	60	43	22	5
return	61	44	21	4
+	63	46	19	2
build	64	47	18	1
r	65	48	17	0
-	66	49	16	0
r	67	50	15	0
+	68	51	14	0
rr	69	52	13	0
p	70	53	12	0
-	71	54	11	0
p	72	55	10	0
+	73	56	9	0
rp	74	57	8	0
s	75	58	7	0
-	76	59	6	0
s	77	60	5	0
+	78	61	4	0
rs	79	62	3	0
return	80	63	2	0

