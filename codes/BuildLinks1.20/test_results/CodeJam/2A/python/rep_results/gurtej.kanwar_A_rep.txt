41 58:
one	35	22	27	14
two	42	29	20	7
one	50	37	12	0
two	52	39	10	0
one	54	41	8	0
two	56	43	6	0
two	59	46	3	0
one	61	48	1	0
return	8	0	54	41
top	9	0	53	40
else	10	0	52	39
if	11	0	51	38
top	12	0	50	37
==	13	0	49	36
p	14	1	48	35
other	15	2	47	34
=	16	3	46	33
r	17	4	45	32
elif	18	5	44	31
top	19	6	43	30
==	20	7	42	29
r	21	8	41	28
other	22	9	40	27
=	23	10	39	26
s	24	11	38	25
elif	25	12	37	24
top	26	13	36	23
==	27	14	35	22
s	28	15	34	21
other	29	16	33	20
=	30	17	32	19
p	31	18	31	18
else	32	19	30	17
assert	33	20	29	16
false	34	21	28	15
=	36	23	26	13
maketree	37	24	25	12
top	38	25	24	11
n	39	26	23	10
-	40	27	22	9
1	41	28	21	8
=	43	30	19	6
maketree	44	31	18	5
other	45	32	17	4
n	46	33	16	3
-	47	34	15	2
1	48	35	14	1
if	49	36	13	0
<	51	38	11	0
return	53	40	9	0
+	55	42	7	0
else	57	44	5	0
return	58	45	4	0
+	60	47	2	0

5 13:
propcounts	1	0	41	32
tot	6	0	36	27
tot	22	13	20	11
tot	27	18	15	6
tot	39	30	3	0
=	7	0	35	26
0	8	0	34	25
for	9	0	33	24
i	10	1	32	23
in	11	2	31	22
range	12	3	30	21
n	13	4	29	20
-	14	5	28	19
1	15	6	27	18
-	16	7	26	17
1	17	8	25	16
if	18	9	24	15
i	19	10	23	14
in	20	11	22	13
counts	21	12	21	12
+=	23	14	19	10
counts	24	15	18	9
i	25	16	17	8
if	26	17	16	7
>	28	19	14	5
0	29	20	13	4
and	30	21	12	3
i	31	22	11	2
>	32	23	10	1
0	33	24	9	0
newcounts	34	25	8	0
i	35	26	7	0
-	36	27	6	0
1	37	28	5	0
=	38	29	4	0
return	40	31	2	0
newcounts	41	32	1	0

17 39:
getcounts	1	0	77	61
css	15	0	63	47
css	49	33	29	13
propcounts	55	39	23	7
css	60	44	18	2
memo	6	0	72	56
return	7	0	71	55
memo	8	0	70	54
n	9	0	69	53
cs	10	0	68	52
=	11	0	67	51
0	12	0	66	50
0	13	0	65	49
0	14	0	64	48
=	16	0	62	46
cur	17	1	61	45
=	18	2	60	44
0	19	3	59	43
counts	20	4	58	42
=	21	5	57	41
for	22	6	56	40
i	23	7	55	39
in	24	8	54	38
range	25	9	53	37
n	26	10	52	36
+	27	11	51	35
1	28	12	50	34
assert	29	13	49	33
i	30	14	48	32
<=	31	15	47	31
n	32	16	46	30
counts	33	17	45	29
i	34	18	44	28
=	35	19	43	27
1	36	20	42	26
while	37	21	41	25
counts	38	22	40	24
cs	39	23	39	23
cur	40	24	38	22
%	41	25	37	21
3	42	26	36	20
+=	43	27	35	19
counts	44	28	34	18
0	45	29	33	17
cur	46	30	32	16
+=	47	31	31	15
1	48	32	30	14
append	50	34	28	12
counts	51	35	27	11
0	52	36	26	10
counts	53	37	25	9
=	54	38	24	8
counts	56	40	22	6
n	57	41	21	5
assert	58	42	20	4
len	59	43	19	3
==	61	45	17	1
n	62	46	16	0
+	63	47	15	0
1	64	48	14	0
assert	65	49	13	0
len	66	50	12	0
cs	67	51	11	0
==	68	52	10	0
3	69	53	9	0
memo	70	54	8	0
n	71	55	7	0
=	72	56	6	0
tuple	73	57	5	0
cs	74	58	4	0
return	75	59	3	0
memo	76	60	2	0
n	77	61	1	0

