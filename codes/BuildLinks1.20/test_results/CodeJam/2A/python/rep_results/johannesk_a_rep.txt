4 5:
def	0	0	12	9
combine	1	0	11	8
a	2	0	10	7
b	3	0	9	6
return	4	1	8	5
min	5	2	7	4
a	6	3	6	3
+	7	4	5	2
b	8	5	4	1
b	9	6	3	0
+	10	7	2	0
a	11	8	1	0

21 25:
cumul	1	0	18	14
xs	2	0	17	13
c	3	0	16	12
=	4	0	15	11
0	5	1	14	10
*	6	2	13	9
3	7	3	12	8
for	8	4	11	7
x	9	5	10	6
in	10	6	9	5
xs	11	7	8	4
c	12	8	7	3
x	13	9	6	2
+=	14	10	5	1
1	15	11	4	0
return	16	12	3	0
tuple	17	13	2	0
c	18	14	1	0

36 37:
def	0	0	7	5
parse	1	0	6	4
return	2	0	5	3
map	3	1	4	2
int	4	2	3	1
input	5	3	2	0
split	6	4	1	0

7 15:
mkposs	1	0	20	15
mkposs	16	11	5	0
if	3	0	18	13
n	4	0	17	12
==	5	0	16	11
0	6	1	15	10
return	7	2	14	9
0	8	3	13	8
1	9	4	12	7
1	10	5	11	6
2	11	6	10	5
0	12	7	9	4
2	13	8	8	3
a	14	9	7	2
=	15	10	6	1
n	17	12	4	0
-	18	13	3	0
1	19	14	2	0
return	20	15	1	0

33 34:
def	0	0	13	10
solve	1	0	12	9
n	2	0	11	8
r	3	0	10	7
p	4	1	9	6
s	5	2	8	5
return	6	3	7	4
ans	7	4	6	3
get	8	5	5	2
p	9	6	4	1
r	10	7	3	0
s	11	8	2	0
impossible	12	9	1	0

