69 71:
read_decimal_list	1	0	14	11
decimal	9	6	6	3
decimal	10	7	5	2

46 48:
def	0	0	13	10
__init__	1	0	12	9
self	2	0	11	8
filename	3	0	10	7
self	4	1	9	6
f	5	2	8	5
=	6	3	7	4
open	7	4	6	3
filename	8	5	5	2
self	9	6	4	1
linenum	10	7	3	0
=	11	8	2	0
1	12	9	1	0

53 55:
read_float	1	0	12	9
self	2	0	11	8
self	3	0	10	7
linenum	4	1	9	6
+=	5	2	8	5
1	6	3	7	4
return	7	4	6	3
float	8	5	5	2
self	9	6	4	1
f	10	7	3	0
readline	11	8	2	0
strip	12	9	1	0

72 74:
read_str_list	1	0	11	8
self	2	0	10	7
self	3	0	9	6
linenum	4	1	8	5
+=	5	2	7	4
1	6	3	6	3
return	7	4	5	2
self	8	5	4	1
f	9	6	3	0
readline	10	7	2	0
split	11	8	1	0

56 58:
read_decimal	1	0	13	10
decimal	8	5	6	3
decimal	9	6	5	2

66 68:
read_float_list	1	0	13	10
self	2	0	12	9
self	3	0	11	8
linenum	4	1	10	7
+=	5	2	9	6
1	6	3	8	5
return	7	4	7	4
map	8	5	6	3
float	9	6	5	2
self	10	7	4	1
f	11	8	3	0
readline	12	9	2	0
split	13	10	1	0

63 65:
read_int_list	1	0	13	10
self	2	0	12	9
self	3	0	11	8
linenum	4	1	10	7
+=	5	2	9	6
1	6	3	8	5
return	7	4	7	4
map	8	5	6	3
int	9	6	5	2
self	10	7	4	1
f	11	8	3	0
readline	12	9	2	0
split	13	10	1	0

18 43:
skip	3	0	164	130
read_int_list	12	0	155	121
skip	14	0	153	119
combinations	22	0	145	111
hold	39	5	128	94
hh	45	11	122	88
hold	47	13	120	86
hh	49	15	118	84
hh	56	22	111	77
collections	68	34	99	65
f	11	0	156	122
if	13	0	154	120
return	15	0	152	118
0	16	0	151	117
for	17	0	150	116
p1	18	0	149	115
p2	19	0	148	114
in	20	0	147	113
itertools	21	0	146	112
r	23	0	144	110
p	24	0	143	109
s	25	0	142	108
2	26	0	141	107
h	27	0	140	106
=	28	0	139	105
p1	29	0	138	104
+	30	0	137	103
p2	31	0	136	102
for	32	0	135	101
i	33	0	134	100
in	34	0	133	99
xrange	35	1	132	98
n	36	2	131	97
-	37	3	130	96
1	38	4	129	95
=	40	6	127	93
h	41	7	126	92
h	42	8	125	91
=	43	9	124	90
for	44	10	123	89
in	46	12	121	87
if	48	14	119	85
==	50	16	117	83
r	51	17	116	82
h	52	18	115	81
+=	53	19	114	80
rs	54	20	113	79
elif	55	21	112	78
==	57	23	110	76
p	58	24	109	75
h	59	25	108	74
+=	60	26	107	73
pr	61	27	106	72
else	62	28	105	71
h	63	29	104	70
+=	64	30	103	69
ps	65	31	102	68
c	66	32	101	67
=	67	33	100	66
counter	69	35	98	64
h	70	36	97	63
if	71	37	96	62
c	72	38	95	61
r	73	39	94	60
==	74	40	93	59
r	75	41	92	58
and	76	42	91	57
c	77	43	90	56
p	78	44	89	55
==	79	45	88	54
p	80	46	87	53
and	81	47	86	52
c	82	48	85	51
s	83	49	84	50
==	84	50	83	49
s	85	51	82	48
for	86	52	81	47
j	87	53	80	46
in	88	54	79	45
xrange	89	55	78	44
1	90	56	77	43
n	91	57	76	42
+	92	58	75	41
1	93	59	74	40
for	94	60	73	39
i	95	61	72	38
in	96	62	71	37
xrange	97	63	70	36
0	98	64	69	35
len	99	65	68	34
h	100	66	67	33
2	101	67	66	32
**	102	68	65	31
j	103	69	64	30
if	104	70	63	29
h	105	71	62	28
i	106	72	61	27
i	107	73	60	26
+	108	74	59	25
2	109	75	58	24
**	110	76	57	23
j	111	77	56	22
-	112	78	55	21
1	113	79	54	20
>	114	80	53	19
h	115	81	52	18
i	116	82	51	17
+	117	83	50	16
2	118	84	49	15
**	119	85	48	14
j	120	86	47	13
-	121	87	46	12
1	122	88	45	11
i	123	89	44	10
+	124	90	43	9
2	125	91	42	8
**	126	92	41	7
j	127	93	40	6
h	128	94	39	5
=	129	95	38	4
h	130	96	37	3
i	131	97	36	2
+	132	98	35	1
h	133	99	34	0
i	134	100	33	0
+	135	101	32	0
2	136	102	31	0
**	137	103	30	0
j	138	104	29	0
-	139	105	28	0
1	140	106	27	0
i	141	107	26	0
+	142	108	25	0
2	143	109	24	0
**	144	110	23	0
j	145	111	22	0
+	146	112	21	0
h	147	113	20	0
i	148	114	19	0
i	149	115	18	0
+	150	116	17	0
2	151	117	16	0
**	152	118	15	0
j	153	119	14	0
-	154	120	13	0
1	155	121	12	0
+	156	122	11	0
h	157	123	10	0
i	158	124	9	0
+	159	125	8	0
2	160	126	7	0
**	161	127	6	0
j	162	128	5	0
return	163	129	4	0
h	164	130	3	0
return	165	131	2	0
impossible	166	132	1	0

50 52:
def	0	0	13	10
read_int	1	0	12	9
self	2	0	11	8
self	3	0	10	7
linenum	4	1	9	6
+=	5	2	8	5
1	6	3	7	4
return	7	4	6	3
int	8	5	5	2
self	9	6	4	1
f	10	7	3	0
readline	11	8	2	0
strip	12	9	1	0

59 61:
read_str	1	0	11	8
self	2	0	10	7
self	3	0	9	6
linenum	4	1	8	5
+=	5	2	7	4
1	6	3	6	3
return	7	4	5	2
self	8	5	4	1
f	9	6	3	0
readline	10	7	2	0
strip	11	8	1	0

