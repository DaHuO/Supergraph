3 17:
best0	14	0	59	44
best1	21	6	52	37
best0	32	17	41	26
best1	39	24	34	19
best0	47	32	26	11
best1	54	39	19	4
best0	62	47	11	0
best1	64	49	9	0
best0	66	51	7	0
best1	68	53	5	0
best1	70	55	3	0
best0	72	57	1	0
==	12	0	61	46
r	13	0	60	45
=	15	0	58	43
best	16	1	57	42
r	17	2	56	41
level	18	3	55	40
-	19	4	54	39
1	20	5	53	38
=	22	7	51	36
best	23	8	50	35
s	24	9	49	34
level	25	10	48	33
-	26	11	47	32
1	27	12	46	31
elif	28	13	45	30
x	29	14	44	29
==	30	15	43	28
p	31	16	42	27
=	33	18	40	25
best	34	19	39	24
p	35	20	38	23
level	36	21	37	22
-	37	22	36	21
1	38	23	35	20
=	40	25	33	18
best	41	26	32	17
r	42	27	31	16
level	43	28	30	15
-	44	29	29	14
1	45	30	28	13
else	46	31	27	12
=	48	33	25	10
best	49	34	24	9
s	50	35	23	8
level	51	36	22	7
-	52	37	21	6
1	53	38	20	5
=	55	40	18	3
best	56	41	17	2
p	57	42	16	1
level	58	43	15	0
-	59	44	14	0
1	60	45	13	0
if	61	46	12	0
<=	63	48	10	0
return	65	50	8	0
+	67	52	6	0
return	69	54	4	0
+	71	56	2	0

19 20:
def	0	0	24	19
match	1	0	23	18
s	2	0	22	17
r	3	0	21	16
p	4	0	20	15
s	5	0	19	14
return	6	1	18	13
s	7	2	17	12
count	8	3	16	11
r	9	4	15	10
==	10	5	14	9
r	11	6	13	8
and	12	7	12	7
s	13	8	11	6
count	14	9	10	5
p	15	10	9	4
==	16	11	8	3
p	17	12	7	2
and	18	13	6	1
s	19	14	5	0
count	20	15	4	0
s	21	16	3	0
==	22	17	2	0
s	23	18	1	0

