5 9:
numcases	9	3	19	13
numcases	18	12	10	4
inputfile	2	0	26	20
with	3	0	25	19
open	4	0	24	18
inputfile	5	0	23	17
r	6	0	22	16
as	7	1	21	15
f	8	2	20	14
=	10	4	18	12
int	11	5	17	11
f	12	6	16	10
readline	13	7	15	9
for	14	8	14	8
_	15	9	13	7
in	16	10	12	6
range	17	11	11	5
yield	19	13	9	3
int	20	14	8	2
x	21	15	7	1
for	22	16	6	0
x	23	17	5	0
in	24	18	4	0
f	25	19	3	0
readline	26	20	2	0
split	27	21	1	0

13 23:
newcurrent	17	9	20	12
newcurrent	23	15	14	6
newcurrent	31	23	6	0
n	3	0	34	26
current	4	0	33	25
=	5	0	32	24
winner	6	0	31	23
results	7	0	30	22
=	8	0	29	21
for	9	1	28	20
_	10	2	27	19
in	11	3	26	18
range	12	4	25	17
n	13	5	24	16
results	14	6	23	15
append	15	7	22	14
current	16	8	21	13
=	18	10	19	11
for	19	11	18	10
player	20	12	17	9
in	21	13	16	8
current	22	14	15	7
+=	24	16	13	5
player	25	17	12	4
+	26	18	11	3
beats	27	19	10	2
player	28	20	9	1
current	29	21	8	0
=	30	22	7	0
results	32	24	5	0
append	33	25	4	0
current	34	26	3	0
return	35	27	2	0
results	36	28	1	0

44 54:
precalc	16	5	39	28
solve	1	0	54	43
n	2	0	53	42
r	3	0	52	41
p	4	0	51	40
s	5	0	50	39
ans	6	0	49	38
=	7	0	48	37
for	8	0	47	36
winner	9	0	46	35
in	10	0	45	34
r	11	0	44	33
p	12	1	43	32
s	13	2	42	31
test	14	3	41	30
=	15	4	40	29
winner	17	6	38	27
n	18	7	37	26
if	19	8	36	25
test	20	9	35	24
count	21	10	34	23
r	22	11	33	22
==	23	12	32	21
r	24	13	31	20
and	25	14	30	19
test	26	15	29	18
count	27	16	28	17
p	28	17	27	16
==	29	18	26	15
p	30	19	25	14
and	31	20	24	13
test	32	21	23	12
count	33	22	22	11
s	34	23	21	10
==	35	24	20	9
s	36	25	19	8
if	37	26	18	7
ans	38	27	17	6
==	39	28	16	5
or	40	29	15	4
test	41	30	14	3
<	42	31	13	2
ans	43	32	12	1
ans	44	33	11	0
=	45	34	10	0
test	46	35	9	0
if	47	36	8	0
ans	48	37	7	0
!=	49	38	6	0
return	50	39	5	0
ans	51	40	4	0
else	52	41	3	0
return	53	42	2	0
impossible	54	43	1	0

25 36:
sortbuild	1	0	76	60
bit1	33	17	44	28
bit2	40	24	37	21
bit2	52	36	25	9
bit1	54	38	23	7
bit2	60	44	17	1
bit1	62	46	15	0
results	8	0	69	53
r	9	0	68	52
=	10	0	67	51
results	11	0	66	50
row	12	0	65	49
group	13	0	64	48
=	14	0	63	47
1	15	0	62	46
while	16	0	61	45
group	17	1	60	44
<=	18	2	59	43
len	19	3	58	42
r	20	4	57	41
/	21	5	56	40
2	22	6	55	39
for	23	7	54	38
p	24	8	53	37
in	25	9	52	36
xrange	26	10	51	35
0	27	11	50	34
len	28	12	49	33
r	29	13	48	32
2	30	14	47	31
*	31	15	46	30
group	32	16	45	29
=	34	18	43	27
r	35	19	42	26
p	36	20	41	25
p	37	21	40	24
+	38	22	39	23
group	39	23	38	22
=	41	25	36	20
r	42	26	35	19
p	43	27	34	18
+	44	28	33	17
group	45	29	32	16
p	46	30	31	15
+	47	31	30	14
2	48	32	29	13
*	49	33	28	12
group	50	34	27	11
if	51	35	26	10
<	53	37	24	8
r	55	39	22	6
=	56	40	21	5
r	57	41	20	4
p	58	42	19	3
+	59	43	18	2
+	61	45	16	0
+	63	47	14	0
r	64	48	13	0
p	65	49	12	0
+	66	50	11	0
2	67	51	10	0
*	68	52	9	0
group	69	53	8	0
group	70	54	7	0
*=	71	55	6	0
2	72	56	5	0
results	73	57	4	0
row	74	58	3	0
=	75	59	2	0
r	76	60	1	0

