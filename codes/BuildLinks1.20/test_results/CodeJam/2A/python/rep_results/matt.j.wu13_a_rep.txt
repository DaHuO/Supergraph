5 46:
get_strings	1	0	177	141
prevr	6	0	172	136
prevp	7	0	171	135
prevs	8	0	170	134
prevr	9	0	169	133
prevp	11	0	167	131
prevs	13	0	165	129
prevr	24	0	154	118
prevp	31	0	147	111
prevs	38	2	140	104
rs_matches	70	34	108	72
ps_matches	75	39	103	67
rs_matches	82	46	96	60
ps_matches	88	52	90	54
nextr	89	53	89	53
nextp	91	55	87	51
nexts	93	57	85	49
prevp	102	66	76	40
prevr	107	71	71	35
nextp	110	74	68	32
prevs	126	90	52	16
prevr	131	95	47	11
nextr	134	98	44	8
prevp	150	114	28	0
prevs	155	119	23	0
nexts	158	122	20	0
get_strings	168	132	10	0
nextr	175	139	3	0
nextp	176	140	2	0
nexts	177	141	1	0
num	40	4	138	102
=	41	5	137	101
2	42	6	136	100
**	43	7	135	99
n	44	8	134	98
-	45	9	133	97
1	46	10	132	96
if	47	11	131	95
r	48	12	130	94
>	49	13	129	93
num	50	14	128	92
or	51	15	127	91
p	52	16	126	90
>	53	17	125	89
num	54	18	124	88
or	55	19	123	87
s	56	20	122	86
>	57	21	121	85
num	58	22	120	84
return	59	23	119	83
impossible	60	24	118	82
rp_matches	61	25	117	81
=	62	26	116	80
r	63	27	115	79
+	64	28	114	78
p	65	29	113	77
-	66	30	112	76
s	67	31	111	75
//	68	32	110	74
2	69	33	109	73
=	71	35	107	71
r	72	36	106	70
-	73	37	105	69
rp_matches	74	38	104	68
=	76	40	102	66
p	77	41	101	65
-	78	42	100	64
rp_matches	79	43	99	63
r2	80	44	98	62
=	81	45	97	61
p2	83	47	95	59
=	84	48	94	58
rp_matches	85	49	93	57
s2	86	50	92	56
=	87	51	91	55
=	90	54	88	52
=	92	56	86	50
=	94	58	84	48
for	95	59	83	47
i	96	60	82	46
in	97	61	81	45
range	98	62	80	44
p2	99	63	79	43
a	100	64	78	42
=	101	65	77	41
pop	103	67	75	39
0	104	68	74	38
b	105	69	73	37
=	106	70	72	36
pop	108	72	70	34
0	109	73	69	33
append	111	75	67	31
min	112	76	66	30
a	113	77	65	29
b	114	78	64	28
+	115	79	63	27
max	116	80	62	26
a	117	81	61	25
b	118	82	60	24
for	119	83	59	23
i	120	84	58	22
in	121	85	57	21
range	122	86	56	20
r2	123	87	55	19
a	124	88	54	18
=	125	89	53	17
pop	127	91	51	15
0	128	92	50	14
b	129	93	49	13
=	130	94	48	12
pop	132	96	46	10
0	133	97	45	9
append	135	99	43	7
min	136	100	42	6
a	137	101	41	5
b	138	102	40	4
+	139	103	39	3
max	140	104	38	2
a	141	105	37	1
b	142	106	36	0
for	143	107	35	0
i	144	108	34	0
in	145	109	33	0
range	146	110	32	0
s2	147	111	31	0
a	148	112	30	0
=	149	113	29	0
pop	151	115	27	0
0	152	116	26	0
b	153	117	25	0
=	154	118	24	0
pop	156	120	22	0
0	157	121	21	0
append	159	123	19	0
min	160	124	18	0
a	161	125	17	0
b	162	126	16	0
+	163	127	15	0
max	164	128	14	0
a	165	129	13	0
b	166	130	12	0
return	167	131	11	0
n	169	133	9	0
-	170	134	8	0
1	171	135	7	0
r2	172	136	6	0
p2	173	137	5	0
s2	174	138	4	0

4 58:
get_strings	7	0	216	171
prevr	12	0	211	166
prevp	13	0	210	165
prevs	14	0	209	164
prevr	15	0	208	163
prevp	17	0	206	161
prevs	19	0	204	159
prevr	30	0	193	148
prevp	37	0	186	141
prevs	44	0	179	134
rs_matches	76	31	147	102
ps_matches	81	36	142	97
rs_matches	88	43	135	90
ps_matches	94	49	129	84
nextr	95	50	128	83
nextp	97	52	126	81
nexts	99	54	124	79
prevp	108	63	115	70
prevr	113	68	110	65
nextp	116	71	107	62
prevs	132	87	91	46
prevr	137	92	86	41
nextr	140	95	83	38
prevp	156	111	67	22
prevs	161	116	62	17
nexts	164	119	59	14
get_strings	174	129	49	4
nextr	181	136	42	0
nextp	182	137	41	0
nexts	183	138	40	0
prevr	184	139	39	0
prevp	186	141	37	0
prevs	188	143	35	0
prevr	195	150	28	0
prevp	203	158	20	0
prevs	211	166	12	0
get_strings	215	170	8	0
prevr	220	175	3	0
prevp	221	176	2	0
prevs	222	177	1	0
n	50	5	173	128
-	51	6	172	127
1	52	7	171	126
if	53	8	170	125
r	54	9	169	124
>	55	10	168	123
num	56	11	167	122
or	57	12	166	121
p	58	13	165	120
>	59	14	164	119
num	60	15	163	118
or	61	16	162	117
s	62	17	161	116
>	63	18	160	115
num	64	19	159	114
return	65	20	158	113
impossible	66	21	157	112
rp_matches	67	22	156	111
=	68	23	155	110
r	69	24	154	109
+	70	25	153	108
p	71	26	152	107
-	72	27	151	106
s	73	28	150	105
//	74	29	149	104
2	75	30	148	103
=	77	32	146	101
r	78	33	145	100
-	79	34	144	99
rp_matches	80	35	143	98
=	82	37	141	96
p	83	38	140	95
-	84	39	139	94
rp_matches	85	40	138	93
r2	86	41	137	92
=	87	42	136	91
p2	89	44	134	89
=	90	45	133	88
rp_matches	91	46	132	87
s2	92	47	131	86
=	93	48	130	85
=	96	51	127	82
=	98	53	125	80
=	100	55	123	78
for	101	56	122	77
i	102	57	121	76
in	103	58	120	75
range	104	59	119	74
p2	105	60	118	73
a	106	61	117	72
=	107	62	116	71
pop	109	64	114	69
0	110	65	113	68
b	111	66	112	67
=	112	67	111	66
pop	114	69	109	64
0	115	70	108	63
append	117	72	106	61
min	118	73	105	60
a	119	74	104	59
b	120	75	103	58
+	121	76	102	57
max	122	77	101	56
a	123	78	100	55
b	124	79	99	54
for	125	80	98	53
i	126	81	97	52
in	127	82	96	51
range	128	83	95	50
r2	129	84	94	49
a	130	85	93	48
=	131	86	92	47
pop	133	88	90	45
0	134	89	89	44
b	135	90	88	43
=	136	91	87	42
pop	138	93	85	40
0	139	94	84	39
append	141	96	82	37
min	142	97	81	36
a	143	98	80	35
b	144	99	79	34
+	145	100	78	33
max	146	101	77	32
a	147	102	76	31
b	148	103	75	30
for	149	104	74	29
i	150	105	73	28
in	151	106	72	27
range	152	107	71	26
s2	153	108	70	25
a	154	109	69	24
=	155	110	68	23
pop	157	112	66	21
0	158	113	65	20
b	159	114	64	19
=	160	115	63	18
pop	162	117	61	16
0	163	118	60	15
append	165	120	58	13
min	166	121	57	12
a	167	122	56	11
b	168	123	55	10
+	169	124	54	9
max	170	125	53	8
a	171	126	52	7
b	172	127	51	6
return	173	128	50	5
n	175	130	48	3
-	176	131	47	2
1	177	132	46	1
r2	178	133	45	0
p2	179	134	44	0
s2	180	135	43	0
=	185	140	38	0
=	187	142	36	0
=	189	144	34	0
for	190	145	33	0
i	191	146	32	0
in	192	147	31	0
range	193	148	30	0
r	194	149	29	0
append	196	151	27	0
r	197	152	26	0
for	198	153	25	0
i	199	154	24	0
in	200	155	23	0
range	201	156	22	0
p	202	157	21	0
append	204	159	19	0
p	205	160	18	0
for	206	161	17	0
i	207	162	16	0
in	208	163	15	0
range	209	164	14	0
s	210	165	13	0
append	212	167	11	0
s	213	168	10	0
return	214	169	9	0
n	216	171	7	0
r	217	172	6	0
p	218	173	5	0
s	219	174	4	0

