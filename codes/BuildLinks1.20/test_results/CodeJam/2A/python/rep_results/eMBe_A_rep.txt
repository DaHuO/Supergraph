36 41:
_read_line	2	0	16	12
_read_line_raw	7	3	11	7
isinstance	9	5	9	5
memoryview	11	7	7	3

76 78:
tokens	2	0	15	11
identity	7	3	10	6
token	10	6	7	3
cnt	4	0	13	9
conv	5	1	12	8
=	6	2	11	7
return	8	4	9	5
cls	9	5	8	4
conv	11	7	6	2
for	12	8	5	1
_	13	9	4	0
in	14	10	3	0
range	15	11	2	0
cnt	16	12	1	0

100 131:
sec	76	39	106	69
sec	83	46	99	62
sec	90	53	92	55
sec	156	119	26	0
r	4	0	178	141
s	5	0	177	140
res	6	0	176	139
if	7	0	175	138
max	8	0	174	137
p	9	0	173	136
r	10	0	172	135
s	11	0	171	134
-	12	0	170	133
min	13	0	169	132
p	14	0	168	131
r	15	0	167	130
s	16	0	166	129
>	17	0	165	128
1	18	0	164	127
return	19	0	163	126
none	20	0	162	125
if	21	0	161	124
p	22	0	160	123
+	23	0	159	122
r	24	0	158	121
+	25	0	157	120
s	26	0	156	119
!=	27	0	155	118
2	28	0	154	117
**	29	0	153	116
n	30	0	152	115
return	31	0	151	114
none	32	0	150	113
if	33	0	149	112
p	34	0	148	111
r	35	0	147	110
s	36	0	146	109
res	37	0	145	108
in	38	1	144	107
memo	39	2	143	106
return	40	3	142	105
memo	41	4	141	104
p	42	5	140	103
r	43	6	139	102
s	44	7	138	101
res	45	8	137	100
if	46	9	136	99
n	47	10	135	98
==	48	11	134	97
0	49	12	133	96
if	50	13	132	95
p	51	14	131	94
==	52	15	130	93
res	53	16	129	92
count	54	17	128	91
p	55	18	127	90
and	56	19	126	89
r	57	20	125	88
==	58	21	124	87
res	59	22	123	86
count	60	23	122	85
r	61	24	121	84
and	62	25	120	83
s	63	26	119	82
==	64	27	118	81
res	65	28	117	80
count	66	29	116	79
s	67	30	115	78
return	68	31	114	77
res	69	32	113	76
return	70	33	112	75
none	71	34	111	74
if	72	35	110	73
res	73	36	109	72
==	74	37	108	71
p	75	38	107	70
=	77	40	105	68
r	78	41	104	67
elif	79	42	103	66
res	80	43	102	65
==	81	44	101	64
s	82	45	100	63
=	84	47	98	61
p	85	48	97	60
elif	86	49	96	59
res	87	50	95	58
==	88	51	94	57
r	89	52	93	56
=	91	54	91	54
s	92	55	90	53
x	93	56	89	52
=	94	57	88	51
2	95	58	87	50
**	96	59	86	49
n	97	60	85	48
-	98	61	84	47
1	99	62	83	46
//	100	63	82	45
3	101	64	81	44
for	102	65	80	43
p1	103	66	79	42
in	104	67	78	41
xrange	105	68	77	40
x	106	69	76	39
x	107	70	75	38
+	108	71	74	37
2	109	72	73	36
for	110	73	72	35
r1	111	74	71	34
in	112	75	70	33
xrange	113	76	69	32
x	114	77	68	31
x	115	78	67	30
+	116	79	66	29
2	117	80	65	28
for	118	81	64	27
s1	119	82	63	26
in	120	83	62	25
xrange	121	84	61	24
x	122	85	60	23
x	123	86	59	22
+	124	87	58	21
2	125	88	57	20
a	126	89	56	19
=	127	90	55	18
make	128	91	54	17
n	129	92	53	16
-	130	93	52	15
1	131	94	51	14
p1	132	95	50	13
r1	133	96	49	12
s1	134	97	48	11
res	135	98	47	10
if	136	99	46	9
a	137	100	45	8
is	138	101	44	7
none	139	102	43	6
continue	140	103	42	5
b	141	104	41	4
=	142	105	40	3
make	143	106	39	2
n	144	107	38	1
-	145	108	37	0
1	146	109	36	0
p	147	110	35	0
-	148	111	34	0
p1	149	112	33	0
r	150	113	32	0
-	151	114	31	0
r1	152	115	30	0
s	153	116	29	0
-	154	117	28	0
s1	155	118	27	0
if	157	120	25	0
b	158	121	24	0
is	159	122	23	0
none	160	123	22	0
continue	161	124	21	0
q	162	125	20	0
=	163	126	19	0
min	164	127	18	0
a	165	128	17	0
b	166	129	16	0
+	167	130	15	0
max	168	131	14	0
a	169	132	13	0
b	170	133	12	0
memo	171	134	11	0
p	172	135	10	0
r	173	136	9	0
s	174	137	8	0
res	175	138	7	0
=	176	139	6	0
q	177	140	5	0
return	178	141	4	0
q	179	142	3	0
return	180	143	2	0
none	181	144	1	0

133 145:
gcj	7	0	46	35
tokens	8	0	45	34
n	2	0	51	40
r	3	0	50	39
p	4	0	49	38
s	5	0	48	37
=	6	0	47	36
4	9	0	44	33
int	10	0	43	32
res	11	0	42	31
=	12	1	41	30
none	13	2	40	29
for	14	3	39	28
x	15	4	38	27
in	16	5	37	26
prs	17	6	36	25
y	18	7	35	24
=	19	8	34	23
make	20	9	33	22
n	21	10	32	21
p	22	11	31	20
r	23	12	30	19
s	24	13	29	18
x	25	14	28	17
if	26	15	27	16
y	27	16	26	15
is	28	17	25	14
not	29	18	24	13
none	30	19	23	12
if	31	20	22	11
res	32	21	21	10
is	33	22	20	9
none	34	23	19	8
res	35	24	18	7
=	36	25	17	6
y	37	26	16	5
else	38	27	15	4
res	39	28	14	3
=	40	29	13	2
min	41	30	12	1
res	42	31	11	0
y	43	32	10	0
if	44	33	9	0
res	45	34	8	0
is	46	35	7	0
not	47	36	6	0
none	48	37	5	0
return	49	38	4	0
res	50	39	3	0
return	51	40	2	0
impossible	52	41	1	0

18 27:
_read_line_raw	2	0	26	20
eoferror	25	19	3	0
cls	3	0	25	19
if	4	0	24	18
cls	5	0	23	17
buf	6	0	22	16
res	7	1	21	15
=	8	2	20	14
cls	9	3	19	13
buf	10	4	18	12
cls	11	5	17	11
buf	12	6	16	10
=	13	7	15	9
none	14	8	14	8
else	15	9	13	7
res	16	10	12	6
=	17	11	11	5
cls	18	12	10	4
in	19	13	9	3
readline	20	14	8	2
if	21	15	7	1
not	22	16	6	0
res	23	17	5	0
raise	24	18	4	0
return	26	20	2	0
res	27	21	1	0

147 152:
setrecursionlimit	3	0	19	14
10000	4	0	18	13
gcj	7	2	15	10
token	8	3	14	9
gcj	16	11	6	1

53 63:
whitespace	2	0	39	30
_read_line_raw	13	4	28	19
isspace	28	19	13	4
memoryview	34	25	7	0
=	5	0	36	27
none	6	0	35	26
while	7	0	34	25
not	8	0	33	24
line	9	0	32	23
line	10	1	31	22
=	11	2	30	21
cls	12	3	29	20
i	14	5	27	18
=	15	6	26	17
0	16	7	25	16
l	17	8	24	15
=	18	9	23	14
len	19	10	22	13
line	20	11	21	12
while	21	12	20	11
i	22	13	19	10
<	23	14	18	9
l	24	15	17	8
and	25	16	16	7
line	26	17	15	6
i	27	18	14	5
i	29	20	12	3
+=	30	21	11	2
1	31	22	10	1
line	32	23	9	0
=	33	24	8	0
line	35	26	6	0
i	36	27	5	0
cls	37	28	4	0
buf	38	29	3	0
=	39	30	2	0
line	40	31	1	0

29 34:
_read_line_view	2	0	17	13
_read_line_raw	7	3	12	8
isinstance	10	6	9	5
memoryview	12	8	7	3

43 46:
identity	6	2	10	6
_read_line	10	6	6	2
b'\r\n'	15	11	1	0
cls	3	0	13	9
conv	4	0	12	8
=	5	1	11	7
line	7	3	9	5
=	8	4	8	4
cls	9	5	7	3
return	11	7	5	1
conv	12	8	4	0
line	13	9	3	0
rstrip	14	10	2	0

65 74:
token	2	0	46	36
identity	6	0	42	32
whitespace	8	0	40	30
_read_line_view	12	2	36	26
isspace	28	18	20	10
tobytes	47	37	1	0
line	9	0	39	29
=	10	0	38	28
cls	11	1	37	27
i	13	3	35	25
=	14	4	34	24
0	15	5	33	23
l	16	6	32	22
=	17	7	31	21
len	18	8	30	20
line	19	9	29	19
while	20	10	28	18
i	21	11	27	17
<	22	12	26	16
l	23	13	25	15
and	24	14	24	14
not	25	15	23	13
line	26	16	22	12
i	27	17	21	11
i	29	19	19	9
+=	30	20	18	8
1	31	21	17	7
cls	32	22	16	6
buf	33	23	15	5
=	34	24	14	4
line	35	25	13	3
i	36	26	12	2
if	37	27	11	1
i	38	28	10	0
<	39	29	9	0
l	40	30	8	0
else	41	31	7	0
none	42	32	6	0
return	43	33	5	0
conv	44	34	4	0
line	45	35	3	0
i	46	36	2	0

87 96:
def	0	0	27	21
result	1	0	26	20
a	2	0	25	19
b	3	0	24	18
results	4	0	23	17
=	5	0	22	16
pr	6	0	21	15
p	7	1	20	14
rs	8	2	19	13
r	9	3	18	12
ps	10	4	17	11
s	11	5	16	10
if	12	6	15	9
a	13	7	14	8
<	14	8	13	7
b	15	9	12	6
return	16	10	11	5
results	17	11	10	4
a	18	12	9	3
+	19	13	8	2
b	20	14	7	1
else	21	15	6	0
return	22	16	5	0
results	23	17	4	0
b	24	18	3	0
+	25	19	2	0
a	26	20	1	0

48 51:
splitline	2	0	17	13
identity	6	2	13	9
_read_line	10	6	9	5
conv	4	0	15	11
=	5	1	14	10
line	7	3	12	8
=	8	4	11	7
cls	9	5	10	6
return	11	7	8	4
conv	12	8	7	3
x	13	9	6	2
for	14	10	5	1
x	15	11	4	0
in	16	12	3	0
line	17	13	2	0
split	18	14	1	0

82 85:
current_case	5	2	8	5
b'case #{}:'	9	6	4	1
current_case	12	9	1	0

