5 9:
finish	1	0	15	11
file_out	6	2	10	6
{1}\n	10	6	6	2
print	4	0	12	8
solution	5	1	11	7
write	7	3	9	5
case	8	4	8	4
#{0}:	9	5	7	3
format	11	7	5	1
index	12	8	4	0
+	13	9	3	0
1	14	10	2	0
solution	15	11	1	0

35 50:
solve_test	1	0	51	40
case:	5	0	47	36
[{0}]	6	0	46	35
test_p	42	31	10	0
finish	44	33	8	0
finish	49	38	3	0
n	9	0	43	32
r	10	0	42	31
p	11	0	41	30
s	12	1	40	29
=	13	2	39	28
map	14	3	38	27
int	15	4	37	26
test_case	16	5	36	25
split	17	6	35	24
letters	18	7	34	23
=	19	8	33	22
letters	20	9	32	21
extend	21	10	31	20
r	22	11	30	19
*	23	12	29	18
r	24	13	28	17
letters	25	14	27	16
extend	26	15	26	15
p	27	16	25	14
*	28	17	24	13
p	29	18	23	12
letters	30	19	22	11
extend	31	20	21	10
s	32	21	20	9
*	33	22	19	8
s	34	23	18	7
for	35	24	17	6
p	36	25	16	5
in	37	26	15	4
sorted	38	27	14	3
permutations	39	28	13	2
letters	40	29	12	1
if	41	30	11	0
p	43	32	9	0
index	45	34	7	0
join	46	35	6	0
p	47	36	5	0
return	48	37	4	0
index	50	39	2	0
impossible	51	40	1	0

11 33:
test_p	1	0	87	69
next_p	54	36	34	16
next_c	64	46	24	6
next_c	74	56	14	0
next_p	79	61	9	0
next_c	81	63	7	0
test_p	86	68	2	0
next_p	87	69	1	0
true	9	0	79	61
operations	10	0	78	60
=	11	0	77	59
operations	12	0	76	58
r	13	0	75	57
r	14	0	74	56
=	15	0	73	55
none	16	0	72	54
operations	17	0	71	53
r	18	0	70	52
p	19	1	69	51
=	20	2	68	50
operations	21	3	67	49
p	22	4	66	48
r	23	5	65	47
=	24	6	64	46
p	25	7	63	45
operations	26	8	62	44
r	27	9	61	43
s	28	10	60	42
=	29	11	59	41
operations	30	12	58	40
s	31	13	57	39
r	32	14	56	38
=	33	15	55	37
r	34	16	54	36
operations	35	17	53	35
s	36	18	52	34
s	37	19	51	33
=	38	20	50	32
none	39	21	49	31
operations	40	22	48	30
s	41	23	47	29
p	42	24	46	28
=	43	25	45	27
operations	44	26	44	26
p	45	27	43	25
s	46	28	42	24
=	47	29	41	23
s	48	30	40	22
operations	49	31	39	21
p	50	32	38	20
p	51	33	37	19
=	52	34	36	18
none	53	35	35	17
=	55	37	33	15
i	56	38	32	14
=	57	39	31	13
0	58	40	30	12
while	59	41	29	11
i	60	42	28	10
<	61	43	27	9
len	62	44	26	8
p	63	45	25	7
=	65	47	23	5
operations	66	48	22	4
p	67	49	21	3
i	68	50	20	2
p	69	51	19	1
i	70	52	18	0
+	71	53	17	0
1	72	54	16	0
if	73	55	15	0
==	75	57	13	0
none	76	58	12	0
return	77	59	11	0
false	78	60	10	0
+=	80	62	8	0
i	82	64	6	0
+=	83	65	5	0
2	84	66	4	0
return	85	67	3	0

