9 13:
fill_lineup	15	10	7	2
get_lineup	1	0	21	16
winner	2	0	20	15
n	3	0	19	14
lineup	4	0	18	13
=	5	0	17	12
none	6	1	16	11
*	7	2	15	10
2	8	3	14	9
**	9	4	13	8
n	10	5	12	7
lineup	11	6	11	6
0	12	7	10	5
=	13	8	9	4
winner	14	9	8	3
lineup	16	11	6	1
0	17	12	5	0
len	18	13	4	0
lineup	19	14	3	0
return	20	15	2	0
lineup	21	16	1	0

38 39:
lineup_ok	1	0	23	18
lineup	2	0	22	17
r	3	0	21	16
p	4	0	20	15
s	5	0	19	14
return	6	1	18	13
lineup	7	2	17	12
count	8	3	16	11
r	9	4	15	10
==	10	5	14	9
r	11	6	13	8
and	12	7	12	7
lineup	13	8	11	6
count	14	9	10	5
s	15	10	9	4
==	16	11	8	3
s	17	12	7	2
and	18	13	6	1
lineup	19	14	5	0
count	20	15	4	0
p	21	16	3	0
==	22	17	2	0
p	23	18	1	0

15 20:
fill_lineup	1	0	31	24
opp	21	14	11	4
fill_lineup	24	17	8	1
fill_lineup	28	21	4	0
if	5	0	27	20
end	6	0	26	19
>	7	0	25	18
start	8	1	24	17
+	9	2	23	16
1	10	3	22	15
mid	11	4	21	14
=	12	5	20	13
start	13	6	19	12
+	14	7	18	11
end	15	8	17	10
//	16	9	16	9
2	17	10	15	8
lineup	18	11	14	7
mid	19	12	13	6
=	20	13	12	5
lineup	22	15	10	3
start	23	16	9	2
lineup	25	18	7	0
start	26	19	6	0
mid	27	20	5	0
lineup	29	22	3	0
mid	30	23	2	0
end	31	24	1	0

41 49:
best_lineup	6	0	39	30
lineup_ok	21	12	24	15
sort_lineup	26	17	19	10
best_lineup	29	20	16	7
best_lineup	34	25	11	2
best_lineup	40	31	5	0
best_lineup	44	35	1	0
none	8	0	37	28
for	9	0	36	27
winner	10	1	35	26
in	11	2	34	25
r	12	3	33	24
p	13	4	32	23
s	14	5	31	22
lineup	15	6	30	21
=	16	7	29	20
get_lineup	17	8	28	19
winner	18	9	27	18
n	19	10	26	17
if	20	11	25	16
lineup	22	13	23	14
r	23	14	22	13
p	24	15	21	12
s	25	16	20	11
lineup	27	18	18	9
if	28	19	17	8
is	30	21	15	6
none	31	22	14	5
or	32	23	13	4
greater	33	24	12	3
0	35	26	10	1
lineup	36	27	9	0
0	37	28	8	0
len	38	29	7	0
lineup	39	30	6	0
=	41	32	4	0
lineup	42	33	3	0
return	43	34	2	0

22 28:
sort_lineup	1	0	61	48
lineup	2	0	60	47
i	3	0	59	46
=	4	0	58	45
1	5	0	57	44
while	6	0	56	43
i	7	0	55	42
<	8	0	54	41
len	9	0	53	40
lineup	10	0	52	39
for	11	0	51	38
k	12	0	50	37
in	13	0	49	36
range	14	1	48	35
0	15	2	47	34
len	16	3	46	33
lineup	17	4	45	32
i	18	5	44	31
*	19	6	43	30
2	20	7	42	29
if	21	8	41	28
greater	22	9	40	27
lineup	23	10	39	26
k	24	11	38	25
lineup	25	12	37	24
k	26	13	36	23
+	27	14	35	22
i	28	15	34	21
i	29	16	33	20
lineup	30	17	32	19
k	31	18	31	18
k	32	19	30	17
+	33	20	29	16
i	34	21	28	15
lineup	35	22	27	14
k	36	23	26	13
+	37	24	25	12
i	38	25	24	11
k	39	26	23	10
+	40	27	22	9
2	41	28	21	8
*	42	29	20	7
i	43	30	19	6
=	44	31	18	5
lineup	45	32	17	4
k	46	33	16	3
+	47	34	15	2
i	48	35	14	1
k	49	36	13	0
+	50	37	12	0
2	51	38	11	0
*	52	39	10	0
i	53	40	9	0
lineup	54	41	8	0
k	55	42	7	0
k	56	43	6	0
+	57	44	5	0
i	58	45	4	0
i	59	46	3	0
*=	60	47	2	0
2	61	48	1	0

30 36:
lineup1	2	0	36	28
lineup2	4	0	34	26
lineup1	13	5	25	17
lineup2	18	10	20	12
lineup1	25	17	13	5
lineup2	30	22	8	0
j	8	0	30	22
in	9	1	29	21
range	10	2	28	20
n	11	3	27	19
if	12	4	26	18
k1	14	6	24	16
+	15	7	23	15
j	16	8	22	14
>	17	9	21	13
k2	19	11	19	11
+	20	12	18	10
j	21	13	17	9
return	22	14	16	8
true	23	15	15	7
elif	24	16	14	6
k1	26	18	12	4
+	27	19	11	3
j	28	20	10	2
<	29	21	9	1
k2	31	23	7	0
+	32	24	6	0
j	33	25	5	0
return	34	26	4	0
false	35	27	3	0
return	36	28	2	0
false	37	29	1	0

51 65:
{0}.in	6	0	68	53
{0}.out	13	0	61	46
{1}\n	53	38	21	6
impossible\n	65	50	9	0
=	4	0	70	55
open	5	0	69	54
format	7	0	67	52
name	8	0	66	51
r	9	0	65	50
g	10	0	64	49
=	11	0	63	48
open	12	0	62	47
format	14	0	60	45
name	15	0	59	44
w	16	1	58	43
t	17	2	57	42
=	18	3	56	41
int	19	4	55	40
f	20	5	54	39
readline	21	6	53	38
for	22	7	52	37
t	23	8	51	36
in	24	9	50	35
range	25	10	49	34
t	26	11	48	33
n	27	12	47	32
r	28	13	46	31
p	29	14	45	30
s	30	15	44	29
=	31	16	43	28
int	32	17	42	27
x	33	18	41	26
for	34	19	40	25
x	35	20	39	24
in	36	21	38	23
f	37	22	37	22
readline	38	23	36	21
split	39	24	35	20
lineup	40	25	34	19
=	41	26	33	18
solve	42	27	32	17
n	43	28	31	16
r	44	29	30	15
p	45	30	29	14
s	46	31	28	13
if	47	32	27	12
lineup	48	33	26	11
g	49	34	25	10
write	50	35	24	9
case	51	36	23	8
#{0}:	52	37	22	7
format	54	39	20	5
t	55	40	19	4
+	56	41	18	3
1	57	42	17	2
join	58	43	16	1
lineup	59	44	15	0
else	60	45	14	0
g	61	46	13	0
write	62	47	12	0
case	63	48	11	0
#{0}:	64	49	10	0
format	66	51	8	0
t	67	52	7	0
+	68	53	6	0
1	69	54	5	0
f	70	55	4	0
close	71	56	3	0
g	72	57	2	0
close	73	58	1	0

