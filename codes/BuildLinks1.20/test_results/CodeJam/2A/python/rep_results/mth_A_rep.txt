8 10:
def	0	0	21	16
parse	1	0	20	15
inp	2	0	19	14
n	3	0	18	13
r	4	0	17	12
p	5	0	16	11
s	6	1	15	10
=	7	2	14	9
int	8	3	13	8
x	9	4	12	7
for	10	5	11	6
x	11	6	10	5
in	12	7	9	4
inp	13	8	8	3
readline	14	9	7	2
split	15	10	6	1
return	16	11	5	0
n	17	12	4	0
r	18	13	3	0
p	19	14	2	0
s	20	15	1	0

55 83:
setrecursionlimit	5	0	144	114
recursion_limit	6	0	143	113
resource	8	0	141	111
soft	9	0	140	110
hard	10	0	139	109
resource	12	0	137	107
getrlimit	13	0	136	106
resource	14	0	135	105
rlimit_as	15	0	134	104
resource	16	0	133	103
setrlimit	17	0	132	102
resource	18	0	131	101
rlimit_as	19	0	130	100
mem_limit_gb	20	0	129	99
1024	22	0	127	97
hard	25	0	124	94
file_name_base	28	0	121	91
numcases	34	4	115	85
numcases	47	17	102	72
num_processes	49	19	100	70
runners	52	22	97	67
apply	58	28	91	61
from	66	36	83	53
from	70	40	79	49
signal	71	41	78	48
sigint	73	43	76	46
sig_ign	74	44	75	45
signal	75	45	74	44
num_processes	79	49	70	40
signal	80	50	69	39

29 53:
participants	6	0	109	86
participants	21	0	94	71
deadlock	24	1	91	68
del	48	25	67	44
del	71	48	44	21
del	94	71	21	0
=	7	0	108	85
1	8	0	107	84
<<	9	0	106	83
n	10	0	105	82
def	11	0	104	81
rec	12	0	103	80
lineup	13	0	102	79
r	14	0	101	78
p	15	0	100	77
s	16	0	99	76
if	17	0	98	75
len	18	0	97	74
lineup	19	0	96	73
==	20	0	95	72
if	22	0	93	70
not	23	0	92	69
lineup	25	2	90	67
yield	26	3	89	66
join	27	4	88	65
lineup	28	5	87	64
if	29	6	86	63
r	30	7	85	62
>	31	8	84	61
0	32	9	83	60
lineup	33	10	82	59
append	34	11	81	58
r	35	12	80	57
for	36	13	79	56
found	37	14	78	55
in	38	15	77	54
rec	39	16	76	53
lineup	40	17	75	52
r	41	18	74	51
-	42	19	73	50
1	43	20	72	49
p	44	21	71	48
s	45	22	70	47
yield	46	23	69	46
found	47	24	68	45
lineup	49	26	66	43
-	50	27	65	42
1	51	28	64	41
if	52	29	63	40
p	53	30	62	39
>	54	31	61	38
0	55	32	60	37
lineup	56	33	59	36
append	57	34	58	35
p	58	35	57	34
for	59	36	56	33
found	60	37	55	32
in	61	38	54	31
rec	62	39	53	30
lineup	63	40	52	29
r	64	41	51	28
p	65	42	50	27
-	66	43	49	26
1	67	44	48	25
s	68	45	47	24
yield	69	46	46	23
found	70	47	45	22
lineup	72	49	43	20
-	73	50	42	19
1	74	51	41	18
if	75	52	40	17
s	76	53	39	16
>	77	54	38	15
0	78	55	37	14
lineup	79	56	36	13
append	80	57	35	12
s	81	58	34	11
for	82	59	33	10
found	83	60	32	9
in	84	61	31	8
rec	85	62	30	7
lineup	86	63	29	6
r	87	64	28	5
p	88	65	27	4
s	89	66	26	3
-	90	67	25	2
1	91	68	24	1
yield	92	69	23	0
found	93	70	22	0
lineup	95	72	20	0
-	96	73	19	0
1	97	74	18	0
lineups	98	75	17	0
=	99	76	16	0
sorted	100	77	15	0
rec	101	78	14	0
r	102	79	13	0
p	103	80	12	0
s	104	81	11	0
return	105	82	10	0
lineups	106	83	9	0
0	107	84	8	0
if	108	85	7	0
len	109	86	6	0
lineups	110	87	5	0
>	111	88	4	0
0	112	89	3	0
else	113	90	2	0
impossible	114	91	1	0

12 27:
deadlock	1	0	80	63
lineup	2	0	79	62
while	3	0	78	61
len	4	0	77	60
lineup	5	0	76	59
>	6	0	75	58
1	7	0	74	57
winners	8	0	73	56
=	9	0	72	55
for	10	0	71	54
a	11	0	70	53
b	12	0	69	52
in	13	0	68	51
zip	14	0	67	50
lineup	15	0	66	49
2	16	0	65	48
lineup	17	0	64	47
1	18	1	63	46
2	19	2	62	45
if	20	3	61	44
a	21	4	60	43
==	22	5	59	42
b	23	6	58	41
return	24	7	57	40
true	25	8	56	39
if	26	9	55	38
max	27	10	54	37
a	28	11	53	36
b	29	12	52	35
==	30	13	51	34
s	31	14	50	33
and	32	15	49	32
min	33	16	48	31
a	34	17	47	30
b	35	18	46	29
==	36	19	45	28
r	37	20	44	27
winners	38	21	43	26
append	39	22	42	25
r	40	23	41	24
elif	41	24	40	23
max	42	25	39	22
a	43	26	38	21
b	44	27	37	20
==	45	28	36	19
r	46	29	35	18
and	47	30	34	17
min	48	31	33	16
a	49	32	32	15
b	50	33	31	14
==	51	34	30	13
p	52	35	29	12
winners	53	36	28	11
append	54	37	27	10
p	55	38	26	9
elif	56	39	25	8
max	57	40	24	7
a	58	41	23	6
b	59	42	22	5
==	60	43	21	4
s	61	44	20	3
and	62	45	19	2
min	63	46	18	1
a	64	47	17	0
b	65	48	16	0
==	66	49	15	0
p	67	50	14	0
winners	68	51	13	0
append	69	52	12	0
s	70	53	11	0
else	71	54	10	0
assert	72	55	9	0
false	73	56	8	0
a	74	57	7	0
b	75	58	6	0
lineup	76	59	5	0
=	77	60	4	0
winners	78	61	3	0
return	79	62	2	0
false	80	63	1	0

32 50:
participants	10	0	77	59
deadlock	13	0	74	56
del	37	19	50	32
del	60	42	27	9
del	83	65	4	0
s	5	0	82	64
if	6	0	81	63
len	7	0	80	62
lineup	8	0	79	61
==	9	0	78	60
if	11	0	76	58
not	12	0	75	57
lineup	14	0	73	55
yield	15	0	72	54
join	16	0	71	53
lineup	17	0	70	52
if	18	0	69	51
r	19	1	68	50
>	20	2	67	49
0	21	3	66	48
lineup	22	4	65	47
append	23	5	64	46
r	24	6	63	45
for	25	7	62	44
found	26	8	61	43
in	27	9	60	42
rec	28	10	59	41
lineup	29	11	58	40
r	30	12	57	39
-	31	13	56	38
1	32	14	55	37
p	33	15	54	36
s	34	16	53	35
yield	35	17	52	34
found	36	18	51	33
lineup	38	20	49	31
-	39	21	48	30
1	40	22	47	29
if	41	23	46	28
p	42	24	45	27
>	43	25	44	26
0	44	26	43	25
lineup	45	27	42	24
append	46	28	41	23
p	47	29	40	22
for	48	30	39	21
found	49	31	38	20
in	50	32	37	19
rec	51	33	36	18
lineup	52	34	35	17
r	53	35	34	16
p	54	36	33	15
-	55	37	32	14
1	56	38	31	13
s	57	39	30	12
yield	58	40	29	11
found	59	41	28	10
lineup	61	43	26	8
-	62	44	25	7
1	63	45	24	6
if	64	46	23	5
s	65	47	22	4
>	66	48	21	3
0	67	49	20	2
lineup	68	50	19	1
append	69	51	18	0
s	70	52	17	0
for	71	53	16	0
found	72	54	15	0
in	73	55	14	0
rec	74	56	13	0
lineup	75	57	12	0
r	76	58	11	0
p	77	59	10	0
s	78	60	9	0
-	79	61	8	0
1	80	62	7	0
yield	81	63	6	0
found	82	64	5	0
lineup	84	66	3	0
-	85	67	2	0
1	86	68	1	0

