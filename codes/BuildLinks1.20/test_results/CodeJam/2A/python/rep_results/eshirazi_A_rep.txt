30 43:
case_index	2	0	54	42
case_index	4	0	52	40
next_line	17	5	39	27
opts	18	6	38	26
solve_n	21	9	35	23
solve_n	24	12	32	20
solve_n	27	15	29	17
opts	33	21	23	11
read_int	10	0	46	34
p	11	0	45	33
=	12	0	44	32
read_int	13	1	43	31
s	14	2	42	30
=	15	3	41	29
read_int	16	4	40	28
=	19	7	37	25
sorted	20	8	36	24
n	22	10	34	22
p	23	11	33	21
n	25	13	31	19
r	26	14	30	18
n	28	16	28	16
s	29	17	27	15
for	30	18	26	14
opt	31	19	25	13
in	32	20	24	12
if	34	22	22	10
opt	35	23	21	9
count	36	24	20	8
r	37	25	19	7
==	38	26	18	6
r	39	27	17	5
and	40	28	16	4
opt	41	29	15	3
count	42	30	14	2
s	43	31	13	1
==	44	32	12	0
s	45	33	11	0
and	46	34	10	0
opt	47	35	9	0
count	48	36	8	0
p	49	37	7	0
==	50	38	6	0
p	51	39	5	0
return	52	40	4	0
opt	53	41	3	0
return	54	42	2	0
impossible	55	43	1	0

8 27:
solve_n	1	0	65	51
a_word	40	26	26	12
solve_n	42	28	24	10
b_word	47	33	19	5
solve_n	49	35	17	3
a_word	55	41	11	0
b_word	57	43	9	0
a_word	59	45	7	0
b_word	61	47	5	0
b_word	63	49	3	0
a_word	65	51	1	0
==	12	0	54	40
p	13	0	53	39
a	14	0	52	38
=	15	1	51	37
p	16	2	50	36
b	17	3	49	35
=	18	4	48	34
r	19	5	47	33
if	20	6	46	32
top	21	7	45	31
==	22	8	44	30
r	23	9	43	29
a	24	10	42	28
=	25	11	41	27
r	26	12	40	26
b	27	13	39	25
=	28	14	38	24
s	29	15	37	23
if	30	16	36	22
top	31	17	35	21
==	32	18	34	20
s	33	19	33	19
a	34	20	32	18
=	35	21	31	17
s	36	22	30	16
b	37	23	29	15
=	38	24	28	14
p	39	25	27	13
=	41	27	25	11
n	43	29	23	9
-	44	30	22	8
1	45	31	21	7
a	46	32	20	6
=	48	34	18	4
n	50	36	16	2
-	51	37	15	1
1	52	38	14	0
b	53	39	13	0
if	54	40	12	0
<	56	42	10	0
return	58	44	8	0
+	60	46	6	0
return	62	48	4	0
+	64	50	2	0

