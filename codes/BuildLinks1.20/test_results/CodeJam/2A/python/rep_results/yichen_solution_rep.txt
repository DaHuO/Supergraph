57 67:
case_number	2	0	58	46
input_numbers	3	0	57	45
input_numbers	18	6	42	30
play	26	14	34	22
case_number	40	28	20	8
sor	49	37	11	0
case_number	58	46	2	0
in	9	0	51	39
raw_input	10	0	50	38
split	11	0	49	37
	12	0	48	36
n	13	1	47	35
r	14	2	46	34
p	15	3	45	33
s	16	4	44	32
=	17	5	43	31
total	19	7	41	29
=	20	8	40	28
2	21	9	39	27
**	22	10	38	26
n	23	11	37	25
ans	24	12	36	24
=	25	13	35	23
total	27	15	33	21
r	28	16	32	20
p	29	17	31	19
s	30	18	30	18
if	31	19	29	17
ans	32	20	28	16
==	33	21	27	15
impossible	34	22	26	14
print	35	23	25	13
case	36	24	24	12
#{}:	37	25	23	11
{}	38	26	22	10
format	39	27	21	9
ans	41	29	19	7
return	42	30	18	6
if	43	31	17	5
n	44	32	16	4
>	45	33	15	3
1	46	34	14	2
ans	47	35	13	1
=	48	36	12	0
ans	50	38	10	0
n	51	39	9	0
total	52	40	8	0
print	53	41	7	0
case	54	42	6	0
#{}:	55	43	5	0
{}	56	44	4	0
format	57	45	3	0
ans	59	47	1	0

1 41:
play	1	0	152	121
half	13	0	140	109
half	21	0	132	101
half	25	0	128	97
half	29	0	124	93
ar	55	24	98	67
ap	73	42	80	49
play	84	53	69	38
ar	86	55	67	36
ap	87	56	66	35
+	11	0	142	111
s	12	0	141	110
=	14	0	139	108
total	15	0	138	107
/	16	0	137	106
2	17	0	136	105
if	18	0	135	104
r	19	0	134	103
>	20	0	133	102
or	22	0	131	100
p	23	0	130	99
>	24	0	129	98
or	26	0	127	96
s	27	0	126	95
>	28	0	125	94
return	30	0	123	92
impossible	31	0	122	91
if	32	1	121	90
total	33	2	120	89
==	34	3	119	88
2	35	4	118	87
res	36	5	117	86
=	37	6	116	85
if	38	7	115	84
p	39	8	114	83
res	40	9	113	82
+=	41	10	112	81
p	42	11	111	80
if	43	12	110	79
r	44	13	109	78
res	45	14	108	77
+=	46	15	107	76
r	47	16	106	75
if	48	17	105	74
s	49	18	104	73
res	50	19	103	72
+=	51	20	102	71
s	52	21	101	70
return	53	22	100	69
res	54	23	99	68
=	56	25	97	66
r	57	26	96	65
+	58	27	95	64
s	59	28	94	63
-	60	29	93	62
p	61	30	92	61
/	62	31	91	60
2	63	32	90	59
as	64	33	89	58
=	65	34	88	57
p	66	35	87	56
+	67	36	86	55
s	68	37	85	54
-	69	38	84	53
r	70	39	83	52
/	71	40	82	51
2	72	41	81	50
=	74	43	79	48
r	75	44	78	47
+	76	45	77	46
p	77	46	76	45
-	78	47	75	44
s	79	48	74	43
/	80	49	73	42
2	81	50	72	41
next	82	51	71	40
=	83	52	70	39
n	85	54	68	37
as	88	57	65	34
if	89	58	64	33
next	90	59	63	32
==	91	60	62	31
impossible	92	61	61	30
return	93	62	60	29
impossible	94	63	59	28
else	95	64	58	27
if	96	65	57	26
n	97	66	56	25
==	98	67	55	24
total	99	68	54	23
res	100	69	53	22
=	101	70	52	21
for	102	71	51	20
i	103	72	50	19
in	104	73	49	18
next	105	74	48	17
if	106	75	47	16
i	107	76	46	15
==	108	77	45	14
r	109	78	44	13
res	110	79	43	12
+=	111	80	42	11
rs	112	81	41	10
elif	113	82	40	9
i	114	83	39	8
==	115	84	38	7
p	116	85	37	6
res	117	86	36	5
+=	118	87	35	4
pr	119	88	34	3
else	120	89	33	2
res	121	90	32	1
+=	122	91	31	0
ps	123	92	30	0
return	124	93	29	0
res	125	94	28	0
else	126	95	27	0
res	127	96	26	0
=	128	97	25	0
for	129	98	24	0
i	130	99	23	0
in	131	100	22	0
next	132	101	21	0
if	133	102	20	0
i	134	103	19	0
==	135	104	18	0
r	136	105	17	0
res	137	106	16	0
+=	138	107	15	0
rs	139	108	14	0
elif	140	109	13	0
i	141	110	12	0
==	142	111	11	0
p	143	112	10	0
res	144	113	9	0
+=	145	114	8	0
pr	146	115	7	0
else	147	116	6	0
res	148	117	5	0
+=	149	118	4	0
ps	150	119	3	0
return	151	120	2	0
res	152	121	1	0

43 54:
sor	1	0	61	48
strs	2	0	60	47
new_strs	12	0	50	37
strs	30	17	32	19
strs	36	23	26	13
new_strs	51	38	11	0
strs	56	43	6	0
new_strs	58	45	4	0
strs	61	48	1	0
1	11	0	51	38
=	13	0	49	36
length	14	1	48	35
=	15	2	47	34
2	16	3	46	33
**	17	4	45	32
n	18	5	44	31
-	19	6	43	30
i	20	7	42	29
-	21	8	41	28
2	22	9	40	27
for	23	10	39	26
e	24	11	38	25
in	25	12	37	24
range	26	13	36	23
length	27	14	35	22
a	28	15	34	21
=	29	16	33	20
2	31	18	31	18
*	32	19	30	17
e	33	20	29	16
b	34	21	28	15
=	35	22	27	14
2	37	24	25	12
*	38	25	24	11
e	39	26	23	10
+	40	27	22	9
1	41	28	21	8
if	42	29	20	7
b	43	30	19	6
<	44	31	18	5
a	45	32	17	4
a	46	33	16	3
b	47	34	15	2
=	48	35	14	1
b	49	36	13	0
a	50	37	12	0
+=	52	39	10	0
a	53	40	9	0
+	54	41	8	0
b	55	42	7	0
=	57	44	5	0
return	59	46	3	0
join	60	47	2	0

