7 36:
anc	14	0	148	115
anc	27	0	135	102
sorted_lineups	81	48	81	48
layer	91	58	71	38
merged	97	64	65	32
merged	127	94	35	2
merged	133	100	29	0
sorted_lineups	134	101	28	0
sorted_lineups	137	104	25	0
sorted_lineups	146	113	16	0
rv	147	114	15	0
sorted_lineups	151	118	11	0
rv	155	122	7	0
rv	161	128	1	0
opt	15	0	147	114
for	16	0	146	113
i	17	0	145	112
in	18	0	144	111
xrange	19	0	143	110
1	20	0	142	109
n	21	0	141	108
layers	22	0	140	107
append	23	0	139	106
map	24	0	138	105
lambda	25	0	137	104
letter	26	0	136	103
letter	28	0	134	101
sum	29	0	133	100
layers	30	0	132	99
i	31	0	131	98
-	32	0	130	97
1	33	0	129	96
lineup	34	1	128	95
=	35	2	127	94
sum	36	3	126	93
layers	37	4	125	92
len	38	5	124	91
layers	39	6	123	90
-	40	7	122	89
1	41	8	121	88
r	42	9	120	87
p	43	10	119	86
s	44	11	118	85
=	45	12	117	84
lineup	46	13	116	83
count	47	14	115	82
r	48	15	114	81
lineup	49	16	113	80
count	50	17	112	79
p	51	18	111	78
lineup	52	19	110	77
count	53	20	109	76
s	54	21	108	75
if	55	22	107	74
r	56	23	106	73
==	57	24	105	72
r	58	25	104	71
and	59	26	103	70
p	60	27	102	69
==	61	28	101	68
p	62	29	100	67
and	63	30	99	66
s	64	31	98	65
==	65	32	97	64
s	66	33	96	63
pos	67	34	95	62
append	68	35	94	61
layers	69	36	93	60
len	70	37	92	59
layers	71	38	91	58
-	72	39	90	57
1	73	40	89	56
if	74	41	88	55
len	75	42	87	54
pos	76	43	86	53
==	77	44	85	52
0	78	45	84	51
return	79	46	83	50
impossible	80	47	82	49
=	82	49	80	47
for	83	50	79	46
p	84	51	78	45
in	85	52	77	44
pos	86	53	76	43
cur	87	54	75	42
=	88	55	74	41
p	89	56	73	40
for	90	57	72	39
in	92	59	70	37
xrange	93	60	69	36
n	94	61	68	35
-	95	62	67	34
1	96	63	66	33
=	98	65	64	31
for	99	66	63	30
i	100	67	62	29
in	101	68	61	28
xrange	102	69	60	27
len	103	70	59	26
cur	104	71	58	25
/	105	72	57	24
2	106	73	56	23
tmp	107	74	55	22
=	108	75	54	21
cur	109	76	53	20
2	110	77	52	19
*	111	78	51	18
i	112	79	50	17
cur	113	80	49	16
2	114	81	48	15
*	115	82	47	14
i	116	83	46	13
+	117	84	45	12
1	118	85	44	11
tmp	119	86	43	10
sort	120	87	42	9
key	121	88	41	8
=	122	89	40	7
lambda	123	90	39	6
x	124	91	38	5
join	125	92	37	4
x	126	93	36	3
append	128	95	34	1
sum	129	96	33	0
tmp	130	97	32	0
cur	131	98	31	0
=	132	99	30	0
append	135	102	27	0
cur	136	103	26	0
sort	138	105	24	0
key	139	106	23	0
=	140	107	22	0
lambda	141	108	21	0
x	142	109	20	0
x	143	110	19	0
0	144	111	18	0
print	145	112	17	0
=	148	115	14	0
join	149	116	13	0
sum	150	117	12	0
0	152	119	10	0
assert	153	120	9	0
len	154	121	8	0
==	156	123	6	0
2	157	124	5	0
**	158	125	4	0
n	159	126	3	0
return	160	127	2	0

38 40:
read1	1	0	12	9
f	2	0	11	8
l	3	0	10	7
=	4	1	9	6
f	5	2	8	5
readline	6	3	7	4
strip	7	4	6	3
return	8	5	5	2
map	9	6	4	1
int	10	7	3	0
l	11	8	2	0
split	12	9	1	0

