16 17:
def	0	0	20	16
output	1	0	19	15
i	2	0	18	14
out	3	0	17	13
g	4	0	16	12
write	5	1	15	11
case	6	2	14	10
#	7	3	13	9
+	8	4	12	8
str	9	5	11	7
i	10	6	10	6
+	11	7	9	5
1	12	8	8	4
+	13	9	7	3
:	14	10	6	2
+	15	11	5	1
str	16	12	4	0
out	17	13	3	0
+	18	14	2	0
\n	19	15	1	0

9 13:
finish	1	0	16	12
10	7	3	10	6
for	3	0	14	10
i	4	0	13	9
in	5	1	12	8
range	6	2	11	7
if	8	4	9	5
a	9	5	8	4
i	10	6	7	3
==	11	7	6	2
0	12	8	5	1
return	13	9	4	0
0	14	10	3	0
return	15	11	2	0
1	16	12	1	0

67 89:
q1	1	0	85	67
convert	52	34	34	16
output1	61	43	25	7
output1	70	52	16	0
output1	79	61	7	0
strip	6	0	80	62
split	7	0	79	61
	8	0	78	60
n	9	0	77	59
=	10	0	76	58
int	11	0	75	57
a	12	0	74	56
0	13	0	73	55
r	14	0	72	54
=	15	0	71	53
int	16	0	70	52
a	17	0	69	51
1	18	0	68	50
p	19	1	67	49
=	20	2	66	48
int	21	3	65	47
a	22	4	64	46
2	23	5	63	45
s	24	6	62	44
=	25	7	61	43
int	26	8	60	42
a	27	9	59	41
3	28	10	58	40
b	29	11	57	39
=	30	12	56	38
p	31	13	55	37
r	32	14	54	36
s	33	15	53	35
sp	34	16	52	34
=	35	17	51	33
0	36	18	50	32
sr	37	19	49	31
=	38	20	48	30
1	39	21	47	29
ss	40	22	46	28
=	41	23	45	27
2	42	24	44	26
for	43	25	43	25
i	44	26	42	24
in	45	27	41	23
range	46	28	40	22
n	47	29	39	21
sp	48	30	38	20
sr	49	31	37	19
ss	50	32	36	18
=	51	33	35	17
sp	53	35	33	15
sr	54	36	32	14
ss	55	37	31	13
if	56	38	30	12
count	57	39	29	11
sp	58	40	28	10
==	59	41	27	9
b	60	42	26	8
ind	62	44	24	6
sp	63	45	23	5
return	64	46	22	4
if	65	47	21	3
count	66	48	20	2
ss	67	49	19	1
==	68	50	18	0
b	69	51	17	0
ind	71	53	15	0
ss	72	54	14	0
return	73	55	13	0
if	74	56	12	0
count	75	57	11	0
sr	76	58	10	0
==	77	59	9	0
b	78	60	8	0
ind	80	62	6	0
sr	81	63	5	0
return	82	64	4	0
output	83	65	3	0
ind	84	66	2	0
impossible	85	67	1	0

6 7:
def	0	0	5	4
read	1	0	4	3
return	2	1	3	2
f	3	2	2	1
readline	4	3	1	0

33 44:
tmp2	9	0	54	41
tmp2	34	21	29	16
tmp2	42	29	21	8
tmp2	50	37	13	0
tmp2	60	47	3	0
=	5	0	58	45
0	6	0	57	44
0	7	0	56	43
0	8	0	55	42
=	10	0	53	40
0	11	0	52	39
0	12	0	51	38
0	13	0	50	37
tmp	14	1	49	36
0	15	2	48	35
=	16	3	47	34
res	17	4	46	33
0	18	5	45	32
tmp	19	6	44	31
1	20	7	43	30
=	21	8	42	29
res	22	9	41	28
1	23	10	40	27
tmp	24	11	39	26
2	25	12	38	25
=	26	13	37	24
res	27	14	36	23
2	28	15	35	22
for	29	16	34	21
i	30	17	33	20
in	31	18	32	19
range	32	19	31	18
n	33	20	30	17
0	35	22	28	15
=	36	23	27	14
tmp	37	24	26	13
0	38	25	25	12
+	39	26	24	11
tmp	40	27	23	10
1	41	28	22	9
1	43	30	20	7
=	44	31	19	6
tmp	45	32	18	5
1	46	33	17	4
+	47	34	16	3
tmp	48	35	15	2
2	49	36	14	1
2	51	38	12	0
=	52	39	11	0
tmp	53	40	10	0
2	54	41	9	0
+	55	42	8	0
tmp	56	43	7	0
0	57	44	6	0
tmp	58	45	5	0
=	59	46	4	0
return	61	48	2	0
tmp	62	49	1	0

46 60:
convert	1	0	53	42
sp	2	0	52	41
sr	3	0	51	40
ss	4	0	50	39
if	5	0	49	38
sp	6	0	48	37
<	7	0	47	36
sr	8	0	46	35
np	9	0	45	34
=	10	0	44	33
sp	11	0	43	32
+	12	1	42	31
sr	13	2	41	30
else	14	3	40	29
np	15	4	39	28
=	16	5	38	27
sr	17	6	37	26
+	18	7	36	25
sp	19	8	35	24
if	20	9	34	23
sp	21	10	33	22
<	22	11	32	21
ss	23	12	31	20
ns	24	13	30	19
=	25	14	29	18
sp	26	15	28	17
+	27	16	27	16
ss	28	17	26	15
else	29	18	25	14
ns	30	19	24	13
=	31	20	23	12
ss	32	21	22	11
+	33	22	21	10
sp	34	23	20	9
if	35	24	19	8
ss	36	25	18	7
<	37	26	17	6
sr	38	27	16	5
nr	39	28	15	4
=	40	29	14	3
ss	41	30	13	2
+	42	31	12	1
sr	43	32	11	0
else	44	33	10	0
nr	45	34	9	0
=	46	35	8	0
sr	47	36	7	0
+	48	37	6	0
ss	49	38	5	0
return	50	39	4	0
np	51	40	3	0
nr	52	41	2	0
ns	53	42	1	0

29 30:
def	0	0	6	4
my_print	1	0	5	3
x	2	0	4	2
g	3	1	3	1
write	4	2	2	0
x	5	3	1	0

62 66:
def	0	0	21	16
count	1	0	20	15
x	2	0	19	14
res	3	0	18	13
=	4	0	17	12
0	5	0	16	11
0	6	1	15	10
0	7	2	14	9
for	8	3	13	8
i	9	4	12	7
in	10	5	11	6
x	11	6	10	5
res	12	7	9	4
i	13	8	8	3
=	14	9	7	2
res	15	10	6	1
i	16	11	5	0
+	17	12	4	0
1	18	13	3	0
return	19	14	2	0
res	20	15	1	0

18 27:
output1	1	0	42	33
i	2	0	41	32
out	3	0	40	31
g	4	0	39	30
write	5	0	38	29
case	6	0	37	28
#	7	0	36	27
+	8	0	35	26
str	9	0	34	25
i	10	1	33	24
+	11	2	32	23
1	12	3	31	22
+	13	4	30	21
:	14	5	29	20
for	15	6	28	19
i	16	7	27	18
in	17	8	26	17
out	18	9	25	16
if	19	10	24	15
i	20	11	23	14
==	21	12	22	13
0	22	13	21	12
g	23	14	20	11
write	24	15	19	10
p	25	16	18	9
if	26	17	17	8
i	27	18	16	7
==	28	19	15	6
1	29	20	14	5
g	30	21	13	4
write	31	22	12	3
r	32	23	11	2
if	33	24	10	1
i	34	25	9	0
==	35	26	8	0
2	36	27	7	0
g	37	28	6	0
write	38	29	5	0
s	39	30	4	0
g	40	31	3	0
write	41	32	2	0
\n	42	33	1	0

161 188:
q3old	1	0	268	214
1\n1	108	54	161	107
2\n	110	56	159	105
1\n1	115	61	154	100
2\n2	117	63	152	98
2\n2	119	65	150	96
1\n	121	67	148	94
	8	0	261	207
j	9	0	260	206
=	10	0	259	205
int	11	0	258	204
a	12	0	257	203
0	13	0	256	202
p	14	0	255	201
=	15	0	254	200
int	16	0	253	199
a	17	0	252	198
1	18	0	251	197
s	19	0	250	196
=	20	0	249	195
int	21	0	248	194
a	22	0	247	193
2	23	0	246	192
k	24	0	245	191
=	25	0	244	190
int	26	0	243	189
a	27	0	242	188
3	28	0	241	187
res	29	0	240	186
=	30	0	239	185
j	31	0	238	184
*	32	0	237	183
p	33	0	236	182
*	34	0	235	181
min	35	0	234	180
k	36	0	233	179
s	37	0	232	178
g	38	0	231	177
write	39	0	230	176
case	40	0	229	175
#	41	0	228	174
+	42	0	227	173
str	43	0	226	172
test	44	0	225	171
+	45	0	224	170
1	46	0	223	169
+	47	0	222	168
:	48	0	221	167
+	49	0	220	166
str	50	0	219	165
res	51	0	218	164
+	52	0	217	163
\n	53	0	216	162
if	54	0	215	161
k	55	1	214	160
>=	56	2	213	159
p	57	3	212	158
for	58	4	211	157
i	59	5	210	156
in	60	6	209	155
range	61	7	208	154
j	62	8	207	153
for	63	9	206	152
l	64	10	205	151
in	65	11	204	150
range	66	12	203	149
p	67	13	202	148
for	68	14	201	147
m	69	15	200	146
in	70	16	199	145
range	71	17	198	144
min	72	18	197	143
k	73	19	196	142
s	74	20	195	141
my_print	75	21	194	140
str	76	22	193	139
i	77	23	192	138
+	78	24	191	137
1	79	25	190	136
+	80	26	189	135
	81	27	188	134
+	82	28	187	133
str	83	29	186	132
l	84	30	185	131
+	85	31	184	130
1	86	32	183	129
+	87	33	182	128
	88	34	181	127
+	89	35	180	126
str	90	36	179	125
m	91	37	178	124
+	92	38	177	123
1	93	39	176	122
+	94	40	175	121
\n	95	41	174	120
return	96	42	173	119
if	97	43	172	118
p	98	44	171	117
==	99	45	170	116
2	100	46	169	115
if	101	47	168	114
j	102	48	167	113
==	103	49	166	112
1	104	50	165	111
my_print	105	51	164	110
1	106	52	163	109
1	107	53	162	108
2	109	55	160	106
else	111	57	158	104
my_print	112	58	157	103
1	113	59	156	102
1	114	60	155	101
2	116	62	153	99
1	118	64	151	97
2	120	66	149	95
return	122	68	147	93
if	123	69	146	92
k	124	70	145	91
==	125	71	144	90
1	126	72	143	89
mat	127	73	142	88
=	128	74	141	87
1	129	75	140	86
1	130	76	139	85
1	131	77	138	84
1	132	78	137	83
2	133	79	136	82
2	134	80	135	81
1	135	81	134	80
3	136	82	133	79
3	137	83	132	78
2	138	84	131	77
1	139	85	130	76
2	140	86	129	75
2	141	87	128	74
2	142	88	127	73
3	143	89	126	72
2	144	90	125	71
3	145	91	124	70
1	146	92	123	69
3	147	93	122	68
1	148	94	121	67
3	149	95	120	66
3	150	96	119	65
2	151	97	118	64
1	152	98	117	63
3	153	99	116	62
3	154	100	115	61
2	155	101	114	60
for	156	102	113	59
i	157	103	112	58
in	158	104	111	57
range	159	105	110	56
3	160	106	109	55
*	161	107	108	54
j	162	108	107	53
my_print	163	109	106	52
str	164	110	105	51
mat	165	111	104	50
i	166	112	103	49
0	167	113	102	48
+	168	114	101	47
	169	115	100	46
+	170	116	99	45
str	171	117	98	44
mat	172	118	97	43
i	173	119	96	42
1	174	120	95	41
+	175	121	94	40
	176	122	93	39
+	177	123	92	38
str	178	124	91	37
mat	179	125	90	36
i	180	126	89	35
2	181	127	88	34
+	182	128	87	33
\n	183	129	86	32
return	184	130	85	31
mat	185	131	84	30
=	186	132	83	29
1	187	133	82	28
1	188	134	81	27
1	189	135	80	26
1	190	136	79	25
1	191	137	78	24
2	192	138	77	23
1	193	139	76	22
2	194	140	75	21
3	195	141	74	20
1	196	142	73	19
2	197	143	72	18
1	198	144	71	17
1	199	145	70	16
3	200	146	69	15
2	201	147	68	14
1	202	148	67	13
3	203	149	66	12
3	204	150	65	11
2	205	151	64	10
1	206	152	63	9
2	207	153	62	8
2	208	154	61	7
1	209	155	60	6
3	210	156	59	5
2	211	157	58	4
2	212	158	57	3
1	213	159	56	2
2	214	160	55	1
2	215	161	54	0
2	216	162	53	0
2	217	163	52	0
3	218	164	51	0
3	219	165	50	0
2	220	166	49	0
3	221	167	48	0
1	222	168	47	0
3	223	169	46	0
1	224	170	45	0
3	225	171	44	0
3	226	172	43	0
1	227	173	42	0
1	228	174	41	0
3	229	175	40	0
2	230	176	39	0
2	231	177	38	0
3	232	178	37	0
2	233	179	36	0
3	234	180	35	0
3	235	181	34	0
3	236	182	33	0
1	237	183	32	0
3	238	184	31	0
3	239	185	30	0
2	240	186	29	0
for	241	187	28	0
i	242	188	27	0
in	243	189	26	0
range	244	190	25	0
6	245	191	24	0
*	246	192	23	0
j	247	193	22	0
my_print	248	194	21	0
str	249	195	20	0
mat	250	196	19	0
i	251	197	18	0
0	252	198	17	0
+	253	199	16	0
	254	200	15	0
+	255	201	14	0
str	256	202	13	0
mat	257	203	12	0
i	258	204	11	0
1	259	205	10	0
+	260	206	9	0
	261	207	8	0
+	262	208	7	0
str	263	209	6	0
mat	264	210	5	0
i	265	211	4	0
2	266	212	3	0
+	267	213	2	0
\n	268	214	1	0

191 195:
q1	11	8	4	1
main	1	0	14	11
t	2	0	13	10
=	3	0	12	9
int	4	1	11	8
read	5	2	10	7
for	6	3	9	6
i	7	4	8	5
in	8	5	7	4
range	9	6	6	3
t	10	7	5	2
i	12	9	3	0
g	13	10	2	0
close	14	11	1	0

127 158:
q2old	1	0	196	156
possible	55	15	142	102
a	3	0	194	154
=	4	0	193	153
read	5	0	192	152
strip	6	0	191	151
split	7	0	190	150
	8	0	189	149
b	9	0	188	148
=	10	0	187	147
int	11	0	186	146
a	12	0	185	145
0	13	0	184	144
m	14	0	183	143
=	15	0	182	142
int	16	0	181	141
a	17	0	180	140
1	18	0	179	139
if	19	0	178	138
m	20	0	177	137
>	21	0	176	136
2	22	0	175	135
**	23	0	174	134
b	24	0	173	133
-	25	0	172	132
2	26	0	171	131
g	27	0	170	130
write	28	0	169	129
case	29	0	168	128
#	30	0	167	127
+	31	0	166	126
str	32	0	165	125
test	33	0	164	124
+	34	0	163	123
1	35	0	162	122
+	36	0	161	121
:	37	0	160	120
+	38	0	159	119
impossible	39	0	158	118
+	40	0	157	117
\n	41	1	156	116
return	42	2	155	115
g	43	3	154	114
write	44	4	153	113
case	45	5	152	112
#	46	6	151	111
+	47	7	150	110
str	48	8	149	109
test	49	9	148	108
+	50	10	147	107
1	51	11	146	106
+	52	12	145	105
:	53	13	144	104
+	54	14	143	103
+	56	16	141	101
\n	57	17	140	100
x	58	18	139	99
=	59	19	138	98
0	60	20	137	97
for	61	21	136	96
i	62	22	135	95
in	63	23	134	94
range	64	24	133	93
b	65	25	132	92
if	66	26	131	91
2	67	27	130	90
**	68	28	129	89
x	69	29	128	88
<	70	30	127	87
m	71	31	126	86
x	72	32	125	85
=	73	33	124	84
x	74	34	123	83
+	75	35	122	82
1	76	36	121	81
mat	77	37	120	80
=	78	38	119	79
0	79	39	118	78
for	80	40	117	77
i	81	41	116	76
in	82	42	115	75
range	83	43	114	74
b	84	44	113	73
for	85	45	112	72
j	86	46	111	71
in	87	47	110	70
range	88	48	109	69
b	89	49	108	68
for	90	50	107	67
i	91	51	106	66
in	92	52	105	65
range	93	53	104	64
x	94	54	103	63
+	95	55	102	62
1	96	56	101	61
for	97	57	100	60
j	98	58	99	59
in	99	59	98	58
range	100	60	97	57
i	101	61	96	56
mat	102	62	95	55
j	103	63	94	54
i	104	64	93	53
=	105	65	92	52
1	106	66	91	51
if	107	67	90	50
2	108	68	89	49
**	109	69	88	48
x	110	70	87	47
==	111	71	86	46
m	112	72	85	45
for	113	73	84	44
i	114	74	83	43
in	115	75	82	42
range	116	76	81	41
x	117	77	80	40
+	118	78	79	39
1	119	79	78	38
mat	120	80	77	37
i	121	81	76	36
x	122	82	75	35
+	123	83	74	34
1	124	84	73	33
=	125	85	72	32
1	126	86	71	31
else	127	87	70	30
s	128	88	69	29
=	129	89	68	28
1	130	90	67	27
while	131	91	66	26
m	132	92	65	25
>	133	93	64	24
0	134	94	63	23
if	135	95	62	22
m	136	96	61	21
%	137	97	60	20
2	138	98	59	19
==	139	99	58	18
1	140	100	57	17
mat	141	101	56	16
s	142	102	55	15
x	143	103	54	14
+	144	104	53	13
1	145	105	52	12
=	146	106	51	11
1	147	107	50	10
m	148	108	49	9
=	149	109	48	8
m	150	110	47	7
//	151	111	46	6
2	152	112	45	5
s	153	113	44	4
=	154	114	43	3
s	155	115	42	2
+	156	116	41	1
1	157	117	40	0
for	158	118	39	0
i	159	119	38	0
in	160	120	37	0
range	161	121	36	0
b	162	122	35	0
-	163	123	34	0
x	164	124	33	0
-	165	125	32	0
2	166	126	31	0
mat	167	127	30	0
x	168	128	29	0
+	169	129	28	0
1	170	130	27	0
+	171	131	26	0
i	172	132	25	0
x	173	133	24	0
+	174	134	23	0
2	175	135	22	0
+	176	136	21	0
i	177	137	20	0
=	178	138	19	0
1	179	139	18	0
for	180	140	17	0
i	181	141	16	0
in	182	142	15	0
range	183	143	14	0
b	184	144	13	0
for	185	145	12	0
j	186	146	11	0
in	187	147	10	0
range	188	148	9	0
b	189	149	8	0
my_print	190	150	7	0
str	191	151	6	0
mat	192	152	5	0
i	193	153	4	0
j	194	154	3	0
my_print	195	155	2	0
\n	196	156	1	0

96 125:
q1old	1	0	165	131
m2	26	0	140	106
ind2	33	0	133	99
m2	64	30	102	68
m2	68	34	98	64
ind2	72	38	94	60
m2	83	49	83	49
chr	88	54	78	44
ord	89	55	77	43
ind2	107	73	59	25
chr	118	84	48	14
ord	119	85	47	13
m2	129	95	37	3
chr	136	102	30	0
ord	137	103	29	0
chr	142	108	24	0
ord	143	109	23	0
ind2	146	112	20	0
chr	153	119	13	0
ord	154	120	12	0
chr	159	125	7	0
ord	160	126	6	0
ind2	163	129	3	0
=	24	0	142	108
0	25	0	141	107
=	27	0	139	105
0	28	0	138	104
ind	29	0	137	103
=	30	0	136	102
-	31	0	135	101
1	32	0	134	100
=	34	0	132	98
-	35	1	131	97
1	36	2	130	96
for	37	3	129	95
i	38	4	128	94
in	39	5	127	93
range	40	6	126	92
n	41	7	125	91
if	42	8	124	90
m	43	9	123	89
<	44	10	122	88
a	45	11	121	87
i	46	12	120	86
m	47	13	119	85
=	48	14	118	84
a	49	15	117	83
i	50	16	116	82
ind	51	17	115	81
=	52	18	114	80
i	53	19	113	79
for	54	20	112	78
i	55	21	111	77
in	56	22	110	76
range	57	23	109	75
n	58	24	108	74
if	59	25	107	73
i	60	26	106	72
!=	61	27	105	71
ind	62	28	104	70
if	63	29	103	69
<	65	31	101	67
a	66	32	100	66
i	67	33	99	65
=	69	35	97	63
a	70	36	96	62
i	71	37	95	61
=	73	39	93	59
i	74	40	92	58
res	75	41	91	57
=	76	42	90	56
for	77	43	89	55
i	78	44	88	54
in	79	45	87	53
range	80	46	86	52
m	81	47	85	51
-	82	48	84	50
res	84	50	82	48
=	85	51	81	47
res	86	52	80	46
+	87	53	79	45
a	90	56	76	42
+	91	57	75	41
ind	92	58	74	40
+	93	59	73	39
	94	60	72	38
for	95	61	71	37
i	96	62	70	36
in	97	63	69	35
range	98	64	68	34
n	99	65	67	33
if	100	66	66	32
i	101	67	65	31
!=	102	68	64	30
ind	103	69	63	29
and	104	70	62	28
i	105	71	61	27
!=	106	72	60	26
for	108	74	58	24
j	109	75	57	23
in	110	76	56	22
range	111	77	55	21
a	112	78	54	20
i	113	79	53	19
res	114	80	52	18
=	115	81	51	17
res	116	82	50	16
+	117	83	49	15
a	120	86	46	12
+	121	87	45	11
i	122	88	44	10
+	123	89	43	9
	124	90	42	8
for	125	91	41	7
i	126	92	40	6
in	127	93	39	5
range	128	94	38	4
-	130	96	36	2
1	131	97	35	1
res	132	98	34	0
=	133	99	33	0
res	134	100	32	0
+	135	101	31	0
a	138	104	28	0
+	139	105	27	0
ind	140	106	26	0
+	141	107	25	0
a	144	110	22	0
+	145	111	21	0
+	147	113	19	0
	148	114	18	0
res	149	115	17	0
=	150	116	16	0
res	151	117	15	0
+	152	118	14	0
a	155	121	11	0
+	156	122	10	0
ind	157	123	9	0
+	158	124	8	0
a	161	127	5	0
+	162	128	4	0
return	164	130	2	0
res	165	131	1	0

