144 145:
def	0	0	8	6
read_int	1	0	7	5
self	2	0	6	4
return	3	1	5	3
int	4	2	4	2
self	5	3	3	1
fd	6	4	2	0
readline	7	5	1	0

153 154:
read_floats	1	0	12	9
self	2	0	11	8
return	3	0	10	7
float	4	1	9	6
x	5	2	8	5
for	6	3	7	4
x	7	4	6	3
in	8	5	5	2
self	9	6	4	1
fd	10	7	3	0
readline	11	8	2	0
split	12	9	1	0

156 159:
def	0	0	17	13
close	1	0	16	12
self	2	0	15	11
if	3	0	14	10
self	4	0	13	9
fd	5	1	12	8
is	6	2	11	7
not	7	3	10	6
sys	8	4	9	5
stdin	9	5	8	4
self	10	6	7	3
fd	11	7	6	2
close	12	8	5	1
self	13	9	4	0
fd	14	10	3	0
=	15	11	2	0
none	16	12	1	0

138 139:
read_string	1	0	7	5
self	2	0	6	4
return	3	1	5	3
self	4	2	4	2
fd	5	3	3	1
readline	6	4	2	0
rstrip	7	5	1	0

12 14:
read_integers	9	6	6	3
read	1	0	14	11
inputfile	2	0	13	10
n	3	0	12	9
r	4	1	11	8
p	5	2	10	7
s	6	3	9	6
=	7	4	8	5
inputfile	8	5	7	4
return	10	7	5	2
n	11	8	4	1
r	12	9	3	0
p	13	10	2	0
s	14	11	1	0

141 142:
read_strings	1	0	10	7
read_string	9	6	2	0
return	3	0	8	5
x	4	1	7	4
for	5	2	6	3
x	6	3	5	2
in	7	4	4	1
self	8	5	3	0
split	10	7	1	0

83 103:
parallel	2	0	69	54
_verbose	5	0	66	51
verbose	9	0	62	47
verbose	10	0	61	46
_verbose	12	0	59	44
fileparser	15	0	56	41
log	20	5	51	36
solving	21	6	50	35
test_cases	25	10	46	31
parallel	35	20	36	21
process_pool	36	21	35	20
processes	39	24	32	17
test_results	42	27	29	14
process_pool	44	29	27	12
map_async	45	30	26	11

17 43:
def	0	0	96	76
generate	1	0	95	75
n	2	0	94	74
winner	3	0	93	73
p	4	0	92	72
r	5	0	91	71
s	6	0	90	70
=	7	0	89	69
0	8	0	88	68
1	9	0	87	67
2	10	0	86	66
if	11	0	85	65
winner	12	0	84	64
==	13	0	83	63
p	14	0	82	62
count	15	0	81	61
=	16	0	80	60
1	17	0	79	59
0	18	0	78	58
0	19	0	77	57
elif	20	0	76	56
winner	21	1	75	55
==	22	2	74	54
r	23	3	73	53
count	24	4	72	52
=	25	5	71	51
0	26	6	70	50
1	27	7	69	49
0	28	8	68	48
elif	29	9	67	47
winner	30	10	66	46
==	31	11	65	45
s	32	12	64	44
count	33	13	63	43
=	34	14	62	42
0	35	15	61	41
0	36	16	60	40
1	37	17	59	39
else	38	18	58	38
assert	39	19	57	37
false	40	20	56	36
res	41	21	55	35
=	42	22	54	34
winner	43	23	53	33
for	44	24	52	32
_	45	25	51	31
in	46	26	50	30
xrange	47	27	49	29
n	48	28	48	28
count	49	29	47	27
=	50	30	46	26
count	51	31	45	25
p	52	32	44	24
+	53	33	43	23
count	54	34	42	22
s	55	35	41	21
count	56	36	40	20
r	57	37	39	19
+	58	38	38	18
count	59	39	37	17
p	60	40	36	16
count	61	41	35	15
s	62	42	34	14
+	63	43	33	13
count	64	44	32	12
r	65	45	31	11
res	66	46	30	10
=	67	47	29	9
join	68	48	28	8
pr	69	49	27	7
if	70	50	26	6
x	71	51	25	5
==	72	52	24	4
p	73	53	23	3
else	74	54	22	2
rs	75	55	21	1
if	76	56	20	0
x	77	57	19	0
==	78	58	18	0
r	79	59	17	0
else	80	60	16	0
ps	81	61	15	0
if	82	62	14	0
x	83	63	13	0
==	84	64	12	0
s	85	65	11	0
else	86	66	10	0
none	87	67	9	0
for	88	68	8	0
x	89	69	7	0
in	90	70	6	0
res	91	71	5	0
return	92	72	4	0
tuple	93	73	3	0
count	94	74	2	0
res	95	75	1	0

114 116:
log	1	0	14	11
verbose	5	2	10	7
args	3	0	12	9
if	4	1	11	8
print	6	3	9	6
>>	7	4	8	5
sys	8	5	7	4
stderr	9	6	6	3
	10	7	5	2
join	11	8	4	1
map	12	9	3	0
str	13	10	2	0
args	14	11	1	0

106 111:
solve_data	1	0	18	14
verbose	9	5	10	6
.	13	9	6	2
=	4	0	15	11
solve	5	1	14	10
*	6	2	13	9
data	7	3	12	8
if	8	4	11	7
sys	10	6	9	5
stderr	11	7	8	4
write	12	8	7	3
sys	14	10	5	1
stderr	15	11	4	0
flush	16	12	3	0
return	17	13	2	0
res	18	14	1	0

129 133:
def	0	0	21	16
__init__	1	0	20	15
self	2	0	19	14
filepath	3	0	18	13
=	4	0	17	12
none	5	0	16	11
if	6	1	15	10
filepath	7	2	14	9
is	8	3	13	8
none	9	4	12	7
self	10	5	11	6
fd	11	6	10	5
=	12	7	9	4
sys	13	8	8	3
stdin	14	9	7	2
else	15	10	6	1
self	16	11	5	0
fd	17	12	4	0
=	18	13	3	0
open	19	14	2	0
filepath	20	15	1	0

147 148:
read_integers	1	0	12	9
self	2	0	11	8
return	3	0	10	7
int	4	1	9	6
x	5	2	8	5
for	6	3	7	4
x	7	4	6	3
in	8	5	5	2
self	9	6	4	1
fd	10	7	3	0
readline	11	8	2	0
split	12	9	1	0

76 80:
def	0	0	12	9
write	1	0	11	8
result	2	0	10	7
if	3	0	9	6
result	4	1	8	5
is	5	2	7	4
none	6	3	6	3
print	7	4	5	2
impossible	8	5	4	1
else	9	6	3	0
print	10	7	2	0
result	11	8	1	0

135 136:
read_lines	1	0	6	4
readlines	6	4	1	0

150 151:
read_float	1	0	7	5
self	2	0	6	4
return	3	1	5	3
float	4	2	4	2
self	5	3	3	1
fd	6	4	2	0
readline	7	5	1	0

46 55:
def	0	0	44	35
order	1	0	43	34
res	2	0	42	33
l	3	0	41	32
=	4	0	40	31
len	5	0	39	30
res	6	0	38	29
if	7	0	37	28
l	8	0	36	27
==	9	0	35	26
1	10	1	34	25
return	11	2	33	24
res	12	3	32	23
a	13	4	31	22
b	14	5	30	21
=	15	6	29	20
res	16	7	28	19
l	17	8	27	18
//	18	9	26	17
2	19	10	25	16
res	20	11	24	15
l	21	12	23	14
//	22	13	22	13
2	23	14	21	12
a	24	15	20	11
b	25	16	19	10
=	26	17	18	9
order	27	18	17	8
a	28	19	16	7
order	29	20	15	6
b	30	21	14	5
if	31	22	13	4
a	32	23	12	3
<=	33	24	11	2
b	34	25	10	1
return	35	26	9	0
a	36	27	8	0
+	37	28	7	0
b	38	29	6	0
else	39	30	5	0
return	40	31	4	0
b	41	32	3	0
+	42	33	2	0
a	43	34	1	0

57 73:
count_p	17	4	44	31
res_p	18	5	43	30
count_p	24	11	37	24
res_p	30	17	31	18
p	4	0	57	44
s	5	0	56	43
count	6	0	55	42
=	7	0	54	41
p	8	0	53	40
r	9	0	52	39
s	10	0	51	38
res	11	0	50	37
=	12	0	49	36
for	13	0	48	35
winner	14	1	47	34
in	15	2	46	33
prs	16	3	45	32
=	19	6	42	29
generate	20	7	41	28
n	21	8	40	27
winner	22	9	39	26
if	23	10	38	25
==	25	12	36	23
count	26	13	35	22
res	27	14	34	21
append	28	15	33	20
order	29	16	32	19
if	31	18	30	17
len	32	19	29	16
res	33	20	28	15
x	34	21	27	14
=	35	22	26	13
min	36	23	25	12
res	37	24	24	11
assert	38	25	23	10
r	39	26	22	9
==	40	27	21	8
x	41	28	20	7
count	42	29	19	6
r	43	30	18	5
assert	44	31	17	4
p	45	32	16	3
==	46	33	15	2
x	47	34	14	1
count	48	35	13	0
p	49	36	12	0
assert	50	37	11	0
s	51	38	10	0
==	52	39	9	0
x	53	40	8	0
count	54	41	7	0
s	55	42	6	0
return	56	43	5	0
x	57	44	4	0
else	58	45	3	0
return	59	46	2	0
none	60	47	1	0

