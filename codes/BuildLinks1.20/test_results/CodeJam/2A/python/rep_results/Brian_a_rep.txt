13 30:
backwards	86	67	9	0
solve	1	0	94	75
r	2	0	93	74
p	3	0	92	73
s	4	0	91	72
depth	5	0	90	71
if	6	0	89	70
r	7	0	88	69
+	8	0	87	68
p	9	0	86	67
+	10	0	85	66
s	11	0	84	65
==	12	0	83	64
1	13	0	82	63
if	14	0	81	62
r	15	0	80	61
==	16	0	79	60
1	17	0	78	59
return	18	0	77	58
r	19	0	76	57
if	20	1	75	56
p	21	2	74	55
==	22	3	73	54
1	23	4	72	53
return	24	5	71	52
p	25	6	70	51
return	26	7	69	50
s	27	8	68	49
rp	28	9	67	48
=	29	10	66	47
r	30	11	65	46
+	31	12	64	45
p	32	13	63	44
-	33	14	62	43
s	34	15	61	42
/	35	16	60	41
2	36	17	59	40
ps	37	18	58	39
=	38	19	57	38
p	39	20	56	37
+	40	21	55	36
s	41	22	54	35
-	42	23	53	34
r	43	24	52	33
/	44	25	51	32
2	45	26	50	31
sr	46	27	49	30
=	47	28	48	29
s	48	29	47	28
+	49	30	46	27
r	50	31	45	26
-	51	32	44	25
p	52	33	43	24
/	53	34	42	23
2	54	35	41	22
if	55	36	40	21
rp	56	37	39	20
<	57	38	38	19
0	58	39	37	18
or	59	40	36	17
ps	60	41	35	16
<	61	42	34	15
0	62	43	33	14
or	63	44	32	13
sr	64	45	31	12
<	65	46	30	11
0	66	47	29	10
return	67	48	28	9
none	68	49	27	8
sub	69	50	26	7
=	70	51	25	6
solve	71	52	24	5
sr	72	53	23	4
rp	73	54	22	3
ps	74	55	21	2
depth	75	56	20	1
+	76	57	19	0
1	77	58	18	0
if	78	59	17	0
sub	79	60	16	0
is	80	61	15	0
none	81	62	14	0
return	82	63	13	0
none	83	64	12	0
return	84	65	11	0
join	85	66	10	0
c	87	68	8	0
depth	88	69	7	0
+	89	70	6	0
1	90	71	5	0
for	91	72	4	0
c	92	73	3	0
in	93	74	2	0
sub	94	75	1	0

1 11:
backwards	1	0	30	23
c	2	0	29	22
depth	3	0	28	21
if	4	0	27	20
c	5	0	26	19
==	6	0	25	18
p	7	0	24	17
return	8	1	23	16
pr	9	2	22	15
elif	10	3	21	14
c	11	4	20	13
==	12	5	19	12
r	13	6	18	11
if	14	7	17	10
depth	15	8	16	9
>=	16	9	15	8
2	17	10	14	7
return	18	11	13	6
sr	19	12	12	5
return	20	13	11	4
rs	21	14	10	3
else	22	15	9	2
if	23	16	8	1
depth	24	17	7	0
>=	25	18	6	0
3	26	19	5	0
return	27	20	4	0
sp	28	21	3	0
return	29	22	2	0
ps	30	23	1	0

