def dfs now depth pos if depth == n cur = pos - 2 ** n ans cur = rps now rest now -= 1 return 1 if rest now == 0 or rest now - 1 == 0 return 0 if dfs now depth + 1 2 * pos == 0 or dfs now + 2 % 3 depth + 1 2 * pos + 1 == 0 return 0 le = 2 * pos * 2 ** n - depth - 1 - 2 ** n ri = 2 * pos + 1 * 2 ** n - depth - 1 - 2 ** n smaller = 0 for i in xrange ri - le if ans ri + i < ans le + i smaller = 1 break if smaller for i in xrange ri - le ans ri + i ans le + i = ans le + i ans ri + i return 1 		3 26
