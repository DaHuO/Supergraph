def alpha ans if ans == impossible return ans tmp = length = len ans if length == 2 if ans 0 < ans 1 return ans else return ans 1 + ans 0 str1 = ans 0 len ans / 2 str2 = ans len ans / 2 len ans str1 = alpha str1 str2 = alpha str2 if str1 < str2 return str1 + str2 else return str2 + str1 		85 102
def get2min x tmp = 2 while tmp <= x tmp = tmp * 2 return tmp / 2 		3 7
def findans n r p s str1 = alpha test n r p s r str2 = alpha test n r p s p str3 = alpha test n r p s s valid = if str1 != impossible valid append str1 if str2 != impossible valid append str2 if str3 != impossible valid append str3 if valid == return impossible else min0 = valid 0 0 minn = 0 for i in range len valid string = valid i if string 0 < min0 min0 = string 0 minn = i return valid minn 		105 126
def test n r p s target length = 2 ** n if r + p + s != length return impossible ans = if target == r ans += r r -= 1 if r < 0 return impossible elif target == p ans += p p -= 1 if p < 0 return impossible elif target == s ans += s s -= 1 if s < 0 return impossible while len ans != length tmpl = len ans if tmpl % 2 != 0 if ans - 1 == r ans += s s -= 1 if s < 0 return impossible elif ans - 1 == p ans += r r -= 1 if r < 0 return impossible elif ans - 1 == s ans += p p -= 1 if p < 0 return impossible else min2 = get2min tmpl if min2 == tmpl if ans 0 == r ans += s s -= 1 if s < 0 return impossible elif ans 0 == p ans += r r -= 1 if r < 0 return impossible elif ans 0 == s ans += p p -= 1 if p < 0 return impossible else if ans min2 == r ans += s s -= 1 if s < 0 return impossible elif ans min2 == p ans += r r -= 1 if r < 0 return impossible elif ans min2 == s ans += p p -= 1 if p < 0 return impossible return ans 		10 82
