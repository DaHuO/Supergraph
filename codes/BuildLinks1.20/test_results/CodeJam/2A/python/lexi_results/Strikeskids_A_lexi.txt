def main t = int input for t in range t run_test t + 1 		53 57
def expand self if self val self children = list map node expand_chars self val self val = none else for c in self children c expand return self 		15 22
def run_test i nums = map int input split print case #%d: %s % i compute_rps * nums 		49 51
def __init__ self val self val = val 		12 13
def sort self if not self val self val = join sorted c sort for c in self children return self val 		24 27
def expand_chars c if c == r return rs elif c == p return pr elif c == s return ps 		3 9
def extensive import random for i in range 100000 compute_insomnia random randint 0 10 ** 6 exit 0 		59 63
def compute_rps n r p s res = compute_rps_tree n r p s if res == none return impossible return res sort 		43 47
def compute_rps_tree n r p s if n == 0 return node r * r + p * p + s * s a b c = sorted r p s if a + b < c return none left = r + p - s rp = left // 2 rs = r - rp sp = p - rp res = compute_rps_tree n - 1 rs rp sp return res and res expand 		30 41
