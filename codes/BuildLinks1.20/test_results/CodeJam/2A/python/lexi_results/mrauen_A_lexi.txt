def solution n r p s result = getstart r p s if result is none return impossible return optimalstring result r + p + s 		55 61
def optimalstring finalvalue x if x in cache return cache finalvalue x if x == 1 return finalvalue twovalues = r r s s s p p p r finalvalue string1 = optimalstring twovalues 0 x / 2 string2 = optimalstring twovalues 1 x / 2 if string1 < string2 result = string1 + string2 else result = string2 + string1 cache finalvalue x = result return result 		11 28
def getstart r p s x = r + p + s possibleendings = r 1 s 0 p 0 r 0 s 1 p 0 r 0 s 0 p 1 value = 1 while value < x value *= 2 newpossibleendings = for possibleending in possibleendings newdictionary = newdictionary r = possibleending p + possibleending r newdictionary p = possibleending s + possibleending p newdictionary s = possibleending r + possibleending s newpossibleendings append newdictionary possibleendings = newpossibleendings for possibleending in zip possibleendings r s p dictionary = possibleending 0 startingvalue = possibleending 1 if dictionary r == r and dictionary s == s and dictionary p == p return startingvalue return none 		30 53
