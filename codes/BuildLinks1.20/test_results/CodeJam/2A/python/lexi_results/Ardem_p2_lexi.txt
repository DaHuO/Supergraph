def dp n vals if vals 0 vals 1 vals 2 in cache return cache vals 0 vals 1 vals 2 out = if sum vals <= 2 for i v in enumerate vals if v == 1 out += chars i return out greater = map lambda x 0 if x < 2 ** n / 3. else 1 vals if sum greater == 2 for i v in enumerate greater if v == 1 base = max vals - 1 / 2 temp = base base base temp i += 1 out += dp n - 1 temp else for i v in enumerate greater - 1 if v == 0 base = max vals / 2 temp = base base base temp 2 - i -= 1 out += dp n - 1 temp cache vals 0 vals 1 vals 2 = out return out 		6 35
