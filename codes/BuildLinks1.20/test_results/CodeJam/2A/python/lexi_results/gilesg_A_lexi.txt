def __call__ self * args if args not in self memory self memory args = self fn * args return self memory args 		12 15
def ints return map int raw split 		5 5
def solve n r p s for i in range 3 if rec i r p s n return solution i r p s n return impossible 		61 65
def raw return _in readline rstrip \n 		4 4
memoize def rec winner r p s k assert r + p + s == 2 ** k l = r p s if k == 1 if 2 in l return false a = l index 1 b = 2 - l - 1 index 1 r = a - b % 3 if r == 1 win = a else assert r == 2 win = b return winner == win loser = winner - 1 % 3 best_pair = z none for p in range p - 1 - 1 for r in range r - 1 - 1 s = 2 ** k - 1 - r - p if s < 0 or s > s continue left = winner r p s k - 1 right = loser r - r p - p s - s k - 1 if rec * left and rec * right sol = solution * left + solution * right best_pair = min best_pair sol left right left = loser r p s k - 1 right = winner r - r p - p s - s k - 1 if rec * left and rec * right sol = solution * left + solution * right best_pair = min best_pair sol left right if best_pair 0 != z return best_pair 1 return none 		17 53
def __init__ self function self fn = function self memory = 		9 11
def solution winner r p s k if k == 1 return p * p + r * r + s * s left right = rec winner r p s k return solution * left + solution * right 		55 59
