def optimal seq length while true old_seq = seq for i in range 1 length + 1 distance = 2 ** i seq = reorder_seq seq distance if seq == old_seq return seq return seq 		73 86
def istie seq if len seq <= 1 return false new_seq = for i in range 0 len seq 2 result = add seq i seq i + 1 if result == 0 return true else new_seq append add seq i seq i + 1 return istie new_seq 		21 31
def constructtree root depth p r s if depth == 0 return root if root == 1 return constructtree 1 depth - 1 p r s + constructtree 2 depth - 1 p r s if root == 2 return constructtree 2 depth - 1 p r s + constructtree 3 depth - 1 p r s if root == 3 return constructtree 1 depth - 1 p r s + constructtree 3 depth - 1 p r s 		49 57
def add a b if a == b return 0 if min a b == 1 and max a b == 2 return 2 if min a b == 1 and max a b == 3 return 1 if min a b == 2 and max a b == 3 return 3 print error! return 0 		6 17
def transform seq p r s newseq = for s in seq if s == 1 newseq += p p -= 1 if s == 2 newseq += r r -= 1 if s == 3 newseq += s s -= 1 return newseq p r s 		34 46
def reorder_seq seq distance for i in range 2 * distance len seq + 1 2 * distance parta = seq i - 2 * distance i - distance partb = seq i - distance i if partb < parta new_seq = seq i - 2 * distance + partb + parta + seq i if partb >= parta new_seq = seq i - 2 * distance + parta + partb + seq i seq = new_seq return seq 		60 70
