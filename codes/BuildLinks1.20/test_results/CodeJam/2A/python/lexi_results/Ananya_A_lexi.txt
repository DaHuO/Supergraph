def solve n counts while sum counts > 1 min_index = counts index min counts max_index = counts index max counts assert min_index != max_index new_counts = 0 0 0 other_index = other_index_arr min_index max_index assert other_index != - 1 and other_index != min_index and other_index != max_index amount = counts max_index - counts other_index if amount > counts min_index return impossible counts min_index -= amount counts max_index -= amount new_counts winner max_index min_index += amount if counts min_index % 2 == 1 return impossible amount = counts min_index / 2 new_counts winner min_index max_index += amount new_counts winner min_index other_index += amount counts max_index -= amount counts other_index -= amount assert counts max_index == counts other_index new_counts winner max_index other_index = counts max_index counts = new_counts last = counts index max counts assert counts last == 1 answer = get_init_string int_to_char last n return answer 		23 56
def get_init_string last n if n == 0 return last else new_one = win_map last s1 = get_init_string new_one 0 n - 1 s2 = get_init_string new_one 1 n - 1 if s1 < s2 return s1 + s2 else return s2 + s1 		11 21
