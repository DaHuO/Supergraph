def get_game n p r res s = 1 << n - p - r if s < 0 raise exception if n p r res in game return game n p r res result = none if n == 0 if p == 1 and res == p return p elif r == 1 and res == r return r elif s == 1 and res == s return s else return none n0 = n - 1 for p0 in xrange p - 1 - 1 for r0 in xrange r - 1 - 1 s0 = 1 << n0 - p0 - r0 if s0 < 0 or s0 > s continue for left_res in prs for right_res in prs if winner left_res right_res == res first_result = get_game n0 p0 r0 left_res second_result = get_game n0 p - p0 r - r0 right_res if first_result is none or second_result is none continue new_result = first_result + second_result if result is none result = new_result else result = min result new_result game n p r res = result return result 		56 91
def to_string state s = if state & 1 s += p if state & 2 s += r if state & 4 s += s return state 		5 13
def main t = int raw_input for case_no in xrange 1 t + 1 solve case_no 		109 112
def winner a b if a == b return if a > b a b = b a if a == p and b == r return p if a == p and b == s return s if a == r and b == s return r raise exception 		28 40
def solve case_no n r p s = map int raw_input split answer = none for res in prs cur_game = get_game n p r res if cur_game is not none if answer is none answer = cur_game else answer = min answer cur_game if answer is none answer = impossible print case #%d: %s % case_no answer 		94 106
def fight state1 state2 if fight_table state1 state2 != - 1 return fight_table state1 state2 s1 = to_string state1 s2 = to_string state2 result = set for c1 in s1 for c2 in s2 result add winner c1 c2 result remove return to_state join result 		43 53
def to_state string result = 0 for c in string if c == p result += 1 elif c == r result += 2 elif c == s result += 4 return result 		16 25
