def __init__ self self nextnode = none self prevnode = none self val = r 		6 9
def recurse n tup r p s = tup if n == 1 if r p s == 1 1 0 return pr elif r p s == 1 0 1 return rs elif r p s == 0 1 1 return ps else return impossible sortedlist = list sorted r p s if sortedlist 0 == sortedlist 1 and sortedlist 1 == sortedlist 2 - 1 first = 0 0 0 second = 0 0 0 m = max sortedlist / 2 if r == m * 2 first = m m m - 1 second = m m - 1 m elif p == m * 2 first = m m m - 1 second = m - 1 m m else first = m - 1 m m second = m m - 1 m firstout = recurse n - 1 first secondout = recurse n - 1 second if firstout == impossible or secondout == impossible return impossible return firstout + secondout elif sortedlist 1 == sortedlist 2 and sortedlist 1 == sortedlist 0 + 1 first = 0 0 0 second = 0 0 0 m = min sortedlist / 2 if r == m * 2 first = m m + 1 m second = m m m + 1 elif p == m * 2 first = m + 1 m m second = m m m + 1 else first = m m + 1 m second = m + 1 m m firstout = recurse n - 1 first secondout = recurse n - 1 second if firstout == impossible or secondout == impossible return impossible return firstout + secondout else return impossible 		11 70
