def readval typ = int return typ raw_input 		1 2
def getxyz p r s nn = p + r + s x = nn / 2 - s y = nn / 2 - r z = nn / 2 - p return x y z 		40 45
def readvals typ = int return map typ raw_input split 		4 5
def testcase cas def getxyz p r s nn = p + r + s x = nn / 2 - s y = nn / 2 - r z = nn / 2 - p return x y z n r p s = readvals for i in xrange n x y z = getxyz p r s if x < 0 or y < 0 or z < 0 or x + y != p or x + z != r or y + z != s print case #%d: %s % cas impossible return p s r = x y z rules = s ps p pr r sr res = s * s + p * p + r * r for i in xrange n newres = for c in res newres += rules c res = newres for i in xrange 1 n + 1 k = 2 ** i for j in xrange 0 len res k if res j j + k / 2 > res j + k / 2 j + k tmp = res j + k / 2 j + k + res j j + k / 2 res = res j + tmp + res j + k print case #%d: %s % cas res 		38 74
def check orders if len orders == 1 return true nextord = for i in xrange 0 len orders 2 mat = join sorted orders i i + 2 if mat not in rules return false nextord += rules mat return check nextord 		12 19
def testcase cas n r p s = readvals nn = p + r + s rules = ps s pr p rs r def check orders if len orders == 1 return true nextord = for i in xrange 0 len orders 2 mat = join sorted orders i i + 2 if mat not in rules return false nextord += rules mat return check nextord x y z = nn / 2 - r nn / 2 - s nn / 2 - p if x < 0 or y < 0 or z < 0 or x + y != p or y + z != r or x + z != s print case #%d: %s % cas impossible return allpairs = sorted ps * x + pr * y + rs * z checked = set from itertools import permutations for p in permutations allpairs order = join p if order not in checked if check order print case #%d: %s % cas order return checked add order print case #%d: %s % cas impossible 		7 36
