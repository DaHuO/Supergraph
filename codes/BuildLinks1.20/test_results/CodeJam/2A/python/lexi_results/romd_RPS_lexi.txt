def do_parse input return int num for num in input 0 rstrip split  		57 58
def expand_orderd round_num letter rep = 0p prrs 0s prps 0r psrs 1p srpr 1s sppr 1r spsr 2p rsrp 2s rpsp 2r rssp return rep str round_num % 3 + str letter 		8 19
def do_case parsed return bestcomp parsed 1 parsed 2 parsed 3 0 		5 7
def bestcomp r p s round_num players = r + p + s if players == 1 if r == 1 return r if p == 1 return p if s == 1 return s if players == 2 if r == 2 or s == 2 or p == 2 return impossible rep2 = 0011 ps 0101 rs 0110 pr 1011 sp 1101 sr 1110 pr 2011 sp 2101 rs 2110 rp return rep2 str round_num % 3 + str r + str p + str s if r < players / 4 or s < players / 4 or p < players / 4 return impossible temp = bestcomp int s - players / 4 int r - players / 4 int p - players / 4 round_num + 1 if temp == impossible return temp temp = temp replace r r temp = temp replace p p temp = temp replace s s temp = temp replace r expand_orderd round_num r temp = temp replace p expand_orderd round_num p temp = temp replace s expand_orderd round_num s return temp 		20 55
def main input_f = open input_file_name r output = num_of_test_cases = int input_f readline 10 input_lines = input_f readlines for test_case in range num_of_test_cases parsed_input = do_parse input_lines test_case * lines_for_each_input test_case + 1 * lines_for_each_input output append case # + str test_case + 1 + : + do_case parsed_input output_f = open output_file_name w output_f write \n join output input_f close output_f close 		60 76
