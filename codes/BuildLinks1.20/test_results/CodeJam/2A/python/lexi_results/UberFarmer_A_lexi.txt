def bracket_sort bracket if bracket in r s p return bracket b1 = bracket_sort bracket 0 b2 = bracket_sort bracket 1 if b1 < b2 return b1 + b2 else return b2 + b1 		93 103
def main num_cases = int stdin readline for case in range 1 num_cases + 1 n r p s = map int stdin readline split debug_print input r p s winner = find_winner s r p if not winner print case #{}: impossible format case continue debug_print winner bracket = bracket_from_winner winner n debug_print bracket first_bracket = bracket_sort bracket debug_print first_bracket print case #{}: {} format case first_bracket 		105 125
def find_winner s r p if s == 1 and r == 0 and p == 0 return s if s == 0 and r == 1 and p == 0 return r if s == 0 and r == 0 and p == 1 return p n = s + r + p if s > n / 2 or r > n / 2 or p > n / 2 return false s_1 = 0 r_1 = 0 p_1 = 0 if s <= r and s <= p if p > r s_1 = p - r s -= s_1 p -= s_1 else r_1 = r - p s -= r_1 r -= r_1 s_1 += s / 2 r_1 += s / 2 p_1 = n / 2 - s_1 - r_1 debug_print 1: r_1 p_1 s_1 elif r <= s and r <= p if s > p r_1 = s - p s -= r_1 r -= r_1 else p_1 = p - s p -= p_1 r -= p_1 r_1 += r / 2 p_1 += r / 2 s_1 = n / 2 - r_1 - p_1 debug_print 2: r_1 p_1 s_1 else if r > s p_1 = r - s p -= p_1 r -= p_1 else s_1 = s - r s -= s_1 p -= s_1 p_1 += p / 2 s_1 += p / 2 r_1 = n / 2 - p_1 - s_1 debug_print 3: r_1 p_1 s_1 return find_winner s_1 r_1 p_1 		12 71
def bracket_from_winner winner n if n == 0 return winner if winner == r if n == 1 return s r else return bracket_from_winner s n - 1 bracket_from_winner r n - 1 if winner == p if n == 1 return p r else return bracket_from_winner p n - 1 bracket_from_winner r n - 1 if winner == s if n == 1 return p s else return bracket_from_winner p n - 1 bracket_from_winner s n - 1 		73 91
def debug_print * args if debug print args 		8 10
