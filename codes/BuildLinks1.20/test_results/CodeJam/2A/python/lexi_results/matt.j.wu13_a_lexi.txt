def get_strings n r p s prevr prevp prevs prevr sort prevp sort prevs sort if n == 0 if r == 1 return prevr 0 elif p == 1 return prevp 0 elif s == 1 return prevs 0 num = 2 ** n - 1 if r > num or p > num or s > num return impossible rp_matches = r + p - s // 2 rs_matches = r - rp_matches ps_matches = p - rp_matches r2 = rs_matches p2 = rp_matches s2 = ps_matches nextr = nextp = nexts = for i in range p2 a = prevp pop 0 b = prevr pop 0 nextp append min a b + max a b for i in range r2 a = prevs pop 0 b = prevr pop 0 nextr append min a b + max a b for i in range s2 a = prevp pop 0 b = prevs pop 0 nexts append min a b + max a b return get_strings n - 1 r2 p2 s2 nextr nextp nexts 		5 46
def solve n r p s def get_strings n r p s prevr prevp prevs prevr sort prevp sort prevs sort if n == 0 if r == 1 return prevr 0 elif p == 1 return prevp 0 elif s == 1 return prevs 0 num = 2 ** n - 1 if r > num or p > num or s > num return impossible rp_matches = r + p - s // 2 rs_matches = r - rp_matches ps_matches = p - rp_matches r2 = rs_matches p2 = rp_matches s2 = ps_matches nextr = nextp = nexts = for i in range p2 a = prevp pop 0 b = prevr pop 0 nextp append min a b + max a b for i in range r2 a = prevs pop 0 b = prevr pop 0 nextr append min a b + max a b for i in range s2 a = prevp pop 0 b = prevs pop 0 nexts append min a b + max a b return get_strings n - 1 r2 p2 s2 nextr nextp nexts prevr = prevp = prevs = for i in range r prevr append r for i in range p prevp append p for i in range s prevs append s return get_strings n r p s prevr prevp prevs 		4 58
