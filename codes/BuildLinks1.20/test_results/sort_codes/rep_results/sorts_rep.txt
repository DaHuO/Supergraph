197 223:
insert	70	52	19	1
insert_sort	1	0	88	70
input_data	2	0	87	69
verbose	3	0	86	68
=	4	0	85	67
false	5	0	84	66
tstart	6	0	83	65
=	7	0	82	64
time	8	0	81	63
clock	9	0	80	62
data	10	0	79	61
=	11	0	78	60
input_data	12	0	77	59
copy	13	0	76	58
p	14	0	75	57
=	15	0	74	56
0	16	0	73	55
q	17	0	72	54
=	18	0	71	53
0	19	1	70	52
for	20	2	69	51
i	21	3	68	50
in	22	4	67	49
range	23	5	66	48
1	24	6	65	47
len	25	7	64	46
data	26	8	63	45
p	27	9	62	44
=	28	10	61	43
i	29	11	60	42
-	30	12	59	41
1	31	13	58	40
q	32	14	57	39
=	33	15	56	38
data	34	16	55	37
i	35	17	54	36
while	36	18	53	35
p	37	19	52	34
>=	38	20	51	33
0	39	21	50	32
if	40	22	49	31
data	41	23	48	30
p	42	24	47	29
>	43	25	46	28
q	44	26	45	27
data	45	27	44	26
p	46	28	43	25
+	47	29	42	24
1	48	30	41	23
=	49	31	40	22
data	50	32	39	21
p	51	33	38	20
p	52	34	37	19
-=	53	35	36	18
1	54	36	35	17
else	55	37	34	16
break	56	38	33	15
data	57	39	32	14
p	58	40	31	13
+	59	41	30	12
1	60	42	29	11
=	61	43	28	10
q	62	44	27	9
tend	63	45	26	8
=	64	46	25	7
time	65	47	24	6
clock	66	48	23	5
if	67	49	22	4
verbose	68	50	21	3
print	69	51	20	2
sort	71	53	18	0
needed	72	54	17	0
tend	73	55	16	0
-	74	56	15	0
tstart	75	57	14	0
seconds	76	58	13	0
to	77	59	12	0
sort	78	60	11	0
the	79	61	10	0
data	80	62	9	0
of	81	63	8	0
size	82	64	7	0
+	83	65	6	0
str	84	66	5	0
len	85	67	4	0
data	86	68	3	0
return	87	69	2	0
data	88	70	1	0

11 43:
shell_sort	1	0	136	108
none	5	0	132	104
701	29	1	108	80
301	30	2	107	79
132	31	3	106	78
57	32	4	105	77
23	33	5	104	76
701	39	11	98	70
round	47	19	90	62
2.25	50	22	87	59
insert	52	24	85	57
continue	71	43	66	38
shell	118	90	19	0
gap_sequence	15	0	122	94
or	16	0	121	93
len	17	0	120	92
gap_sequence	18	0	119	91
<	19	0	118	90
1	20	0	117	89
or	21	0	116	88
gap_sequence	22	0	115	87
-	23	0	114	86
1	24	0	113	85
!=	25	0	112	84
1	26	0	111	83
gap_sequence	27	0	110	82
=	28	0	109	81
10	34	6	103	75
4	35	7	102	74
1	36	8	101	73
n	37	9	100	72
=	38	10	99	71
while	40	12	97	69
n	41	13	96	68
<	42	14	95	67
len	43	15	94	66
input_data	44	16	93	65
n	45	17	92	64
=	46	18	91	63
n	48	20	89	61
*	49	21	88	60
gap_sequence	51	23	86	58
0	53	25	84	56
n	54	26	83	55
data	55	27	82	54
=	56	28	81	53
input_data	57	29	80	52
copy	58	30	79	51
t	59	31	78	50
=	60	32	77	49
0	61	33	76	48
for	62	34	75	47
gap	63	35	74	46
in	64	36	73	45
gap_sequence	65	37	72	44
if	66	38	71	43
gap	67	39	70	42
>=	68	40	69	41
len	69	41	68	40
data	70	42	67	39
for	72	44	65	37
i	73	45	64	36
in	74	46	63	35
range	75	47	62	34
gap	76	48	61	33
len	77	49	60	32
data	78	50	59	31
t	79	51	58	30
=	80	52	57	29
data	81	53	56	28
i	82	54	55	27
j	83	55	54	26
=	84	56	53	25
i	85	57	52	24
while	86	58	51	23
j	87	59	50	22
>=	88	60	49	21
gap	89	61	48	20
and	90	62	47	19
data	91	63	46	18
j	92	64	45	17
-	93	65	44	16
gap	94	66	43	15
>=	95	67	42	14
t	96	68	41	13
data	97	69	40	12
j	98	70	39	11
=	99	71	38	10
data	100	72	37	9
j	101	73	36	8
-	102	74	35	7
gap	103	75	34	6
j	104	76	33	5
-=	105	77	32	4
gap	106	78	31	3
data	107	79	30	2
j	108	80	29	1
=	109	81	28	0
t	110	82	27	0
tend	111	83	26	0
=	112	84	25	0
time	113	85	24	0
clock	114	86	23	0
if	115	87	22	0
verbose	116	88	21	0
print	117	89	20	0
sort	119	91	18	0
needed	120	92	17	0
tend	121	93	16	0
-	122	94	15	0
tstart	123	95	14	0
seconds	124	96	13	0
to	125	97	12	0
sort	126	98	11	0
the	127	99	10	0
data	128	100	9	0
of	129	101	8	0
size	130	102	7	0
+	131	103	6	0
str	132	104	5	0
len	133	105	4	0
data	134	106	3	0
return	135	107	2	0
data	136	108	1	0

226 232:
random_data	1	0	12	9
size	2	0	11	8
data	3	0	10	7
=	4	1	9	6
list	5	2	8	5
range	6	3	7	4
size	7	4	6	3
random	8	5	5	2
shuffle	9	6	4	1
data	10	7	3	0
return	11	8	2	0
data	12	9	1	0

68 78:
_quick_sort_in	1	0	43	34
_quick_sort_in	14	5	30	21
second	25	16	19	10
_quick_sort_in	27	18	17	8
second	43	34	1	0
return	6	0	38	29
else	7	0	37	28
pivot	8	0	36	27
=	9	0	35	26
input_data	10	1	34	25
0	11	2	33	24
first	12	3	32	23
=	13	4	31	22
x	15	6	29	20
for	16	7	28	19
x	17	8	27	18
in	18	9	26	17
input_data	19	10	25	16
1	20	11	24	15
if	21	12	23	14
x	22	13	22	13
<	23	14	21	12
pivot	24	15	20	11
=	26	17	18	9
x	28	19	16	7
for	29	20	15	6
x	30	21	14	5
in	31	22	13	4
input_data	32	23	12	3
1	33	24	11	2
if	34	25	10	1
x	35	26	9	0
>	36	27	8	0
pivot	37	28	7	0
return	38	29	6	0
first	39	30	5	0
+	40	31	4	0
pivot	41	32	3	0
+	42	33	2	0

81 95:
_quick_sort_in	14	5	28	19
quick	23	14	19	10
input_data	2	0	40	31
verbose	3	0	39	30
=	4	0	38	29
false	5	0	37	28
tstart	6	0	36	27
=	7	0	35	26
time	8	0	34	25
clock	9	0	33	24
data	10	1	32	23
=	11	2	31	22
input_data	12	3	30	21
copy	13	4	29	20
data	15	6	27	18
tend	16	7	26	17
=	17	8	25	16
time	18	9	24	15
clock	19	10	23	14
if	20	11	22	13
verbose	21	12	21	12
print	22	13	20	11
sort	24	15	18	9
needed	25	16	17	8
tend	26	17	16	7
-	27	18	15	6
tstart	28	19	14	5
seconds	29	20	13	4
to	30	21	12	3
sort	31	22	11	2
the	32	23	10	1
data	33	24	9	0
of	34	25	8	0
size	35	26	7	0
+	36	27	6	0
str	37	28	5	0
len	38	29	4	0
data	39	30	3	0
return	40	31	2	0
data	41	32	1	0

46 65:
heap_sort	1	0	58	46
heapq	18	6	41	29
datan	21	9	38	26
datan	28	16	31	19
heapq	30	18	29	17
heappop	31	19	28	16
heap	40	28	19	7
datan	56	44	3	0
datan	58	46	1	0
data	10	0	49	37
=	11	0	48	36
input_data	12	0	47	35
copy	13	1	46	34
length	14	2	45	33
=	15	3	44	32
len	16	4	43	31
input_data	17	5	42	30
heapify	19	7	40	28
data	20	8	39	27
=	22	10	37	25
for	23	11	36	24
i	24	12	35	23
in	25	13	34	22
range	26	14	33	21
length	27	15	32	20
append	29	17	30	18
data	32	20	27	15
tend	33	21	26	14
=	34	22	25	13
time	35	23	24	12
clock	36	24	23	11
if	37	25	22	10
verbose	38	26	21	9
print	39	27	20	8
sort	41	29	18	6
needed	42	30	17	5
tend	43	31	16	4
-	44	32	15	3
tstart	45	33	14	2
seconds	46	34	13	1
to	47	35	12	0
sort	48	36	11	0
the	49	37	10	0
data	50	38	9	0
of	51	39	8	0
size	52	40	7	0
+	53	41	6	0
str	54	42	5	0
len	55	43	4	0
return	57	45	2	0

98 140:
data2	14	0	173	135
e1	31	0	156	118
e1	42	4	145	107
e1	76	38	111	73
data2	85	47	102	64
e1	96	58	91	53
data2	103	65	84	46
data2	112	74	75	37
e1	128	90	59	21
e1	139	101	48	10
data2	153	115	34	0
data2	154	116	33	0
input_data	12	0	175	137
copy	13	0	174	136
=	15	0	172	134
data	16	0	171	133
copy	17	0	170	132
i	18	0	169	131
=	19	0	168	130
0	20	0	167	129
while	21	0	166	128
2	22	0	165	127
**	23	0	164	126
i	24	0	163	125
<	25	0	162	124
len	26	0	161	123
input_data	27	0	160	122
s1	28	0	159	121
=	29	0	158	120
0	30	0	157	119
=	32	0	155	117
s1	33	0	154	116
+	34	0	153	115
2	35	0	152	114
**	36	0	151	113
i	37	0	150	112
-	38	0	149	111
1	39	1	148	110
s2	40	2	147	109
=	41	3	146	108
+	43	5	144	106
1	44	6	143	105
e2	45	7	142	104
=	46	8	141	103
s2	47	9	140	102
+	48	10	139	101
2	49	11	138	100
**	50	12	137	99
i	51	13	136	98
-	52	14	135	97
1	53	15	134	96
j	54	16	133	95
=	55	17	132	94
0	56	18	131	93
while	57	19	130	92
s2	58	20	129	91
<	59	21	128	90
len	60	22	127	89
input_data	61	23	126	88
if	62	24	125	87
e2	63	25	124	86
>=	64	26	123	85
len	65	27	122	84
input_data	66	28	121	83
e2	67	29	120	82
=	68	30	119	81
len	69	31	118	80
input_data	70	32	117	79
-	71	33	116	78
1	72	34	115	77
while	73	35	114	76
s1	74	36	113	75
<=	75	37	112	74
or	77	39	110	72
s2	78	40	109	71
<=	79	41	108	70
e2	80	42	107	69
if	81	43	106	68
s2	82	44	105	67
>	83	45	104	66
e2	84	46	103	65
j	86	48	101	63
=	87	49	100	62
data	88	50	99	61
s1	89	51	98	60
s1	90	52	97	59
+=	91	53	96	58
1	92	54	95	57
elif	93	55	94	56
s1	94	56	93	55
<=	95	57	92	54
and	97	59	90	52
data	98	60	89	51
s1	99	61	88	50
<	100	62	87	49
data	101	63	86	48
s2	102	64	85	47
j	104	66	83	45
=	105	67	82	44
data	106	68	81	43
s1	107	69	80	42
s1	108	70	79	41
+=	109	71	78	40
1	110	72	77	39
else	111	73	76	38
j	113	75	74	36
=	114	76	73	35
data	115	77	72	34
s2	116	78	71	33
s2	117	79	70	32
+=	118	80	69	31
1	119	81	68	30
j	120	82	67	29
+=	121	83	66	28
1	122	84	65	27
s1	123	85	64	26
=	124	86	63	25
e2	125	87	62	24
+	126	88	61	23
1	127	89	60	22
=	129	91	58	20
s1	130	92	57	19
+	131	93	56	18
2	132	94	55	17
**	133	95	54	16
i	134	96	53	15
-	135	97	52	14
1	136	98	51	13
s2	137	99	50	12
=	138	100	49	11
+	140	102	47	9
1	141	103	46	8
e2	142	104	45	7
=	143	105	44	6
s2	144	106	43	5
+	145	107	42	4
2	146	108	41	3
**	147	109	40	2
i	148	110	39	1
-	149	111	38	0
1	150	112	37	0
data	151	113	36	0
=	152	114	35	0
=	155	117	32	0
data	156	118	31	0
copy	157	119	30	0
i	158	120	29	0
+=	159	121	28	0
1	160	122	27	0
tend	161	123	26	0
=	162	124	25	0
time	163	125	24	0
clock	164	126	23	0
if	165	127	22	0
verbose	166	128	21	0
print	167	129	20	0
merge	168	130	19	0
sort	169	131	18	0
needed	170	132	17	0
tend	171	133	16	0
-	172	134	15	0
tstart	173	135	14	0
seconds	174	136	13	0
to	175	137	12	0
sort	176	138	11	0
the	177	139	10	0
data	178	140	9	0
of	179	141	8	0
size	180	142	7	0
+	181	143	6	0
str	182	144	5	0
len	183	145	4	0
data	184	146	3	0
return	185	147	2	0
data	186	148	1	0

170 194:
bubble_sort	1	0	90	71
bubble	72	53	19	0
verbose	3	0	88	69
=	4	0	87	68
false	5	0	86	67
tstart	6	0	85	66
=	7	0	84	65
time	8	0	83	64
clock	9	0	82	63
data	10	0	81	62
=	11	0	80	61
input_data	12	0	79	60
copy	13	0	78	59
q	14	0	77	58
=	15	0	76	57
0	16	0	75	56
i	17	0	74	55
=	18	0	73	54
len	19	0	72	53
data	20	1	71	52
-	21	2	70	51
1	22	3	69	50
while	23	4	68	49
i	24	5	67	48
>	25	6	66	47
0	26	7	65	46
j	27	8	64	45
=	28	9	63	44
0	29	10	62	43
while	30	11	61	42
j	31	12	60	41
<	32	13	59	40
i	33	14	58	39
if	34	15	57	38
data	35	16	56	37
j	36	17	55	36
>	37	18	54	35
data	38	19	53	34
j	39	20	52	33
+	40	21	51	32
1	41	22	50	31
q	42	23	49	30
=	43	24	48	29
data	44	25	47	28
j	45	26	46	27
data	46	27	45	26
j	47	28	44	25
=	48	29	43	24
data	49	30	42	23
j	50	31	41	22
+	51	32	40	21
1	52	33	39	20
data	53	34	38	19
j	54	35	37	18
+	55	36	36	17
1	56	37	35	16
=	57	38	34	15
q	58	39	33	14
j	59	40	32	13
+=	60	41	31	12
1	61	42	30	11
i	62	43	29	10
-=	63	44	28	9
1	64	45	27	8
tend	65	46	26	7
=	66	47	25	6
time	67	48	24	5
clock	68	49	23	4
if	69	50	22	3
verbose	70	51	21	2
print	71	52	20	1
sort	73	54	18	0
needed	74	55	17	0
tend	75	56	16	0
-	76	57	15	0
tstart	77	58	14	0
seconds	78	59	13	0
to	79	60	12	0
sort	80	61	11	0
the	81	62	10	0
data	82	63	9	0
of	83	64	8	0
size	84	65	7	0
+	85	66	6	0
str	86	67	5	0
len	87	68	4	0
data	88	69	3	0
return	89	70	2	0
data	90	71	1	0

143 167:
select_sort	1	0	83	66
select	65	48	19	2
verbose	3	0	81	64
=	4	0	80	63
false	5	0	79	62
tstart	6	0	78	61
=	7	0	77	60
time	8	0	76	59
clock	9	0	75	58
data	10	0	74	57
=	11	0	73	56
input_data	12	0	72	55
copy	13	0	71	54
q	14	0	70	53
=	15	0	69	52
0	16	0	68	51
min_index	17	0	67	50
=	18	1	66	49
0	19	2	65	48
for	20	3	64	47
i	21	4	63	46
in	22	5	62	45
range	23	6	61	44
len	24	7	60	43
data	25	8	59	42
min_index	26	9	58	41
=	27	10	57	40
i	28	11	56	39
for	29	12	55	38
j	30	13	54	37
in	31	14	53	36
range	32	15	52	35
i	33	16	51	34
len	34	17	50	33
data	35	18	49	32
if	36	19	48	31
data	37	20	47	30
j	38	21	46	29
<	39	22	45	28
data	40	23	44	27
min_index	41	24	43	26
min_index	42	25	42	25
=	43	26	41	24
j	44	27	40	23
q	45	28	39	22
=	46	29	38	21
data	47	30	37	20
i	48	31	36	19
data	49	32	35	18
i	50	33	34	17
=	51	34	33	16
data	52	35	32	15
min_index	53	36	31	14
data	54	37	30	13
min_index	55	38	29	12
=	56	39	28	11
q	57	40	27	10
tend	58	41	26	9
=	59	42	25	8
time	60	43	24	7
clock	61	44	23	6
if	62	45	22	5
verbose	63	46	21	4
print	64	47	20	3
sort	66	49	18	1
needed	67	50	17	0
tend	68	51	16	0
-	69	52	15	0
tstart	70	53	14	0
seconds	71	54	13	0
to	72	55	12	0
sort	73	56	11	0
the	74	57	10	0
data	75	58	9	0
of	76	59	8	0
size	77	60	7	0
+	78	61	6	0
str	79	62	5	0
len	80	63	4	0
data	81	64	3	0
return	82	65	2	0
data	83	66	1	0

