4 61:
myarray	2	0	143	114
smallsize	3	0	142	113
insertsize	9	0	136	107
smallsize	11	0	134	105
insertsize	23	0	122	93
extend	87	58	58	29
extend	91	62	54	25
myarray	141	112	4	0
insertsize	142	113	3	0
smallsize	144	115	1	0
array	14	0	131	102
<=	15	0	130	101
1	16	0	129	100
return	17	0	128	99
array	18	0	127	98
elif	19	0	126	97
len	20	0	125	96
array	21	0	124	95
<=	22	0	123	94
return	24	0	121	92
insert_sort	25	0	120	91
array	26	0	119	90
else	27	0	118	89
mid	28	0	117	88
=	29	0	116	87
len	30	1	115	86
array	31	2	114	85
//	32	3	113	84
2	33	4	112	83
return	34	5	111	82
mergesort	35	6	110	81
subsort	36	7	109	80
array	37	8	108	79
mid	38	9	107	78
subsort	39	10	106	77
array	40	11	105	76
mid	41	12	104	75
def	42	13	103	74
mergesort	43	14	102	73
left	44	15	101	72
right	45	16	100	71
merged_list	46	17	99	70
=	47	18	98	69
list	48	19	97	68
i	49	20	96	67
=	50	21	95	66
0	51	22	94	65
j	52	23	93	64
=	53	24	92	63
0	54	25	91	62
while	55	26	90	61
i	56	27	89	60
<	57	28	88	59
len	58	29	87	58
left	59	30	86	57
and	60	31	85	56
j	61	32	84	55
<	62	33	83	54
len	63	34	82	53
right	64	35	81	52
if	65	36	80	51
left	66	37	79	50
i	67	38	78	49
<	68	39	77	48
right	69	40	76	47
j	70	41	75	46
merged_list	71	42	74	45
append	72	43	73	44
left	73	44	72	43
i	74	45	71	42
i	75	46	70	41
+=	76	47	69	40
1	77	48	68	39
else	78	49	67	38
merged_list	79	50	66	37
append	80	51	65	36
right	81	52	64	35
j	82	53	63	34
j	83	54	62	33
+=	84	55	61	32
1	85	56	60	31
merged_list	86	57	59	30
left	88	59	57	28
i	89	60	56	27
merged_list	90	61	55	26
right	92	63	53	24
j	93	64	52	23
return	94	65	51	22
merged_list	95	66	50	21
def	96	67	49	20
insert_sort	97	68	48	19
array	98	69	47	18
for	99	70	46	17
i	100	71	45	16
in	101	72	44	15
range	102	73	43	14
1	103	74	42	13
len	104	75	41	12
array	105	76	40	11
j	106	77	39	10
=	107	78	38	9
i	108	79	37	8
while	109	80	36	7
j	110	81	35	6
!=	111	82	34	5
0	112	83	33	4
and	113	84	32	3
array	114	85	31	2
j	115	86	30	1
<	116	87	29	0
array	117	88	28	0
j	118	89	27	0
-	119	90	26	0
1	120	91	25	0
array	121	92	24	0
j	122	93	23	0
-	123	94	22	0
1	124	95	21	0
array	125	96	20	0
j	126	97	19	0
=	127	98	18	0
array	128	99	17	0
j	129	100	16	0
array	130	101	15	0
j	131	102	14	0
-	132	103	13	0
1	133	104	12	0
j	134	105	11	0
-=	135	106	10	0
1	136	107	9	0
return	137	108	8	0
array	138	109	7	0
return	139	110	6	0
subsort	140	111	5	0
=	143	114	2	0

46 59:
def	0	0	43	34
insert_sort	1	0	42	33
array	2	0	41	32
for	3	0	40	31
i	4	0	39	30
in	5	0	38	29
range	6	0	37	28
1	7	0	36	27
len	8	0	35	26
array	9	0	34	25
j	10	1	33	24
=	11	2	32	23
i	12	3	31	22
while	13	4	30	21
j	14	5	29	20
!=	15	6	28	19
0	16	7	27	18
and	17	8	26	17
array	18	9	25	16
j	19	10	24	15
<	20	11	23	14
array	21	12	22	13
j	22	13	21	12
-	23	14	20	11
1	24	15	19	10
array	25	16	18	9
j	26	17	17	8
-	27	18	16	7
1	28	19	15	6
array	29	20	14	5
j	30	21	13	4
=	31	22	12	3
array	32	23	11	2
j	33	24	10	1
array	34	25	9	0
j	35	26	8	0
-	36	27	7	0
1	37	28	6	0
j	38	29	5	0
-=	39	30	4	0
1	40	31	3	0
return	41	32	2	0
array	42	33	1	0

24 44:
extend	45	34	9	0
extend	49	38	5	0
left	2	0	52	41
right	3	0	51	40
merged_list	4	0	50	39
=	5	0	49	38
list	6	0	48	37
i	7	0	47	36
=	8	0	46	35
0	9	0	45	34
j	10	0	44	33
=	11	0	43	32
0	12	1	42	31
while	13	2	41	30
i	14	3	40	29
<	15	4	39	28
len	16	5	38	27
left	17	6	37	26
and	18	7	36	25
j	19	8	35	24
<	20	9	34	23
len	21	10	33	22
right	22	11	32	21
if	23	12	31	20
left	24	13	30	19
i	25	14	29	18
<	26	15	28	17
right	27	16	27	16
j	28	17	26	15
merged_list	29	18	25	14
append	30	19	24	13
left	31	20	23	12
i	32	21	22	11
i	33	22	21	10
+=	34	23	20	9
1	35	24	19	8
else	36	25	18	7
merged_list	37	26	17	6
append	38	27	16	5
right	39	28	15	4
j	40	29	14	3
j	41	30	13	2
+=	42	31	12	1
1	43	32	11	0
merged_list	44	33	10	0
left	46	35	8	0
i	47	36	7	0
merged_list	48	37	6	0
right	50	39	4	0
j	51	40	3	0
return	52	41	2	0
merged_list	53	42	1	0

69 88:
fastest_time	1	0	82	65
fastest_time	3	0	80	63
999999999999	5	0	78	61
fastest_len	6	0	77	60
testnum	19	2	64	47
testnum	26	9	57	40
stop	33	16	50	33
stop	38	21	45	28
testnum	45	28	38	21
1000	47	30	36	19
fastest_time	51	34	32	15
fastest_time	52	35	31	14
fastest_len	55	38	28	11
insert	59	42	24	7
on	61	44	22	5
{0}	63	46	20	3
arrays	64	47	19	2

14 22:
insertsize	3	0	33	25
smallsize	5	0	31	23
insertsize	17	9	19	11
=	4	0	32	24
if	6	0	30	22
len	7	0	29	21
array	8	0	28	20
<=	9	1	27	19
1	10	2	26	18
return	11	3	25	17
array	12	4	24	16
elif	13	5	23	15
len	14	6	22	14
array	15	7	21	13
<=	16	8	20	12
return	18	10	18	10
insert_sort	19	11	17	9
array	20	12	16	8
else	21	13	15	7
mid	22	14	14	6
=	23	15	13	5
len	24	16	12	4
array	25	17	11	3
//	26	18	10	2
2	27	19	9	1
return	28	20	8	0
mergesort	29	21	7	0
subsort	30	22	6	0
array	31	23	5	0
mid	32	24	4	0
subsort	33	25	3	0
array	34	26	2	0
mid	35	27	1	0

