21 25:
randomquicksort	1	0	26	20
randompartition	11	5	16	10
randomquicksort	15	9	12	6
randomquicksort	21	15	6	0
if	5	0	22	16
p	6	0	21	15
<	7	1	20	14
r	8	2	19	13
q	9	3	18	12
=	10	4	17	11
arr	12	6	15	9
p	13	7	14	8
r	14	8	13	7
arr	16	10	11	5
p	17	11	10	4
q	18	12	9	3
-	19	13	8	2
1	20	14	7	1
arr	22	16	5	0
q	23	17	4	0
+	24	18	3	0
1	25	19	2	0
r	26	20	1	0

16 19:
randompartition	1	0	24	19
randrange	8	3	17	12
p	3	0	22	17
r	4	0	21	16
i	5	0	20	15
=	6	1	19	14
random	7	2	18	13
p	9	4	16	11
r	10	5	15	10
arr	11	6	14	9
r	12	7	13	8
arr	13	8	12	7
i	14	9	11	6
=	15	10	10	5
arr	16	11	9	4
i	17	12	8	3
arr	18	13	7	2
r	19	14	6	1
return	20	15	5	0
partition	21	16	4	0
arr	22	17	3	0
p	23	18	2	0
r	24	19	1	0

6 14:
def	0	0	56	44
partition	1	0	55	43
arr	2	0	54	42
p	3	0	53	41
r	4	0	52	40
x	5	0	51	39
=	6	0	50	38
arr	7	0	49	37
r	8	0	48	36
i	9	0	47	35
=	10	0	46	34
p	11	0	45	33
-	12	0	44	32
1	13	1	43	31
for	14	2	42	30
j	15	3	41	29
in	16	4	40	28
range	17	5	39	27
p	18	6	38	26
r	19	7	37	25
if	20	8	36	24
arr	21	9	35	23
j	22	10	34	22
<=	23	11	33	21
x	24	12	32	20
i	25	13	31	19
=	26	14	30	18
i	27	15	29	17
+	28	16	28	16
1	29	17	27	15
arr	30	18	26	14
i	31	19	25	13
arr	32	20	24	12
j	33	21	23	11
=	34	22	22	10
arr	35	23	21	9
j	36	24	20	8
arr	37	25	19	7
i	38	26	18	6
arr	39	27	17	5
i	40	28	16	4
+	41	29	15	3
1	42	30	14	2
arr	43	31	13	1
r	44	32	12	0
=	45	33	11	0
arr	46	34	10	0
r	47	35	9	0
arr	48	36	8	0
i	49	37	7	0
+	50	38	6	0
1	51	39	5	0
return	52	40	4	0
i	53	41	3	0
+	54	42	2	0
1	55	43	1	0

